{"version":3,"file":"static/js/31.7f737b91.chunk.js","mappings":"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","sources":["../../node_modules/ohm-js/dist/ohm.esm.js","../../node_modules/rxjs/src/internal/BehaviorSubject.ts","../../node_modules/rxjs/src/internal/util/isFunction.ts","../../node_modules/rxjs/src/internal/util/createErrorClass.ts","../../node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","../../node_modules/rxjs/src/internal/util/arrRemove.ts","../../node_modules/rxjs/src/internal/Subscription.ts","../../node_modules/rxjs/src/internal/config.ts","../../node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts","../../node_modules/rxjs/src/internal/util/noop.ts","../../node_modules/rxjs/src/internal/NotificationFactories.ts","../../node_modules/rxjs/src/internal/util/errorContext.ts","../../node_modules/rxjs/src/internal/Subscriber.ts","../../node_modules/rxjs/src/internal/util/reportUnhandledError.ts","../../node_modules/rxjs/src/internal/symbol/observable.ts","../../node_modules/rxjs/src/internal/util/identity.ts","../../node_modules/rxjs/src/internal/util/pipe.ts","../../node_modules/rxjs/src/internal/Observable.ts","../../node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","../../node_modules/rxjs/src/internal/Subject.ts","../../node_modules/rxjs/node_modules/tslib/tslib.es6.js","../../node_modules/@davidsouther/jiffies/lib/esm/display.js","../../node_modules/@davidsouther/jiffies/lib/esm/range.js","../../node_modules/@davidsouther/jiffies/lib/esm/result.js"],"sourcesContent":["/// <reference types=\"../index.d.ts\" />\nvar main$1 = {exports: {}};\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n/*\n  `Failure`s represent expressions that weren't matched while parsing. They are used to generate\n  error messages automatically. The interface of `Failure`s includes the collowing methods:\n\n  - getText() : String\n  - getType() : String  (one of {\"description\", \"string\", \"code\"})\n  - isDescription() : bool\n  - isStringTerminal() : bool\n  - isCode() : bool\n  - isFluffy() : bool\n  - makeFluffy() : void\n  - subsumes(Failure) : bool\n*/\n\nfunction isValidType(type) {\n  return type === 'description' || type === 'string' || type === 'code';\n}\n\nfunction Failure$2(pexpr, text, type) {\n  if (!isValidType(type)) {\n    throw new Error('invalid Failure type: ' + type);\n  }\n  this.pexpr = pexpr;\n  this.text = text;\n  this.type = type;\n  this.fluffy = false;\n}\n\nFailure$2.prototype.getPExpr = function() {\n  return this.pexpr;\n};\n\nFailure$2.prototype.getText = function() {\n  return this.text;\n};\n\nFailure$2.prototype.getType = function() {\n  return this.type;\n};\n\nFailure$2.prototype.isDescription = function() {\n  return this.type === 'description';\n};\n\nFailure$2.prototype.isStringTerminal = function() {\n  return this.type === 'string';\n};\n\nFailure$2.prototype.isCode = function() {\n  return this.type === 'code';\n};\n\nFailure$2.prototype.isFluffy = function() {\n  return this.fluffy;\n};\n\nFailure$2.prototype.makeFluffy = function() {\n  this.fluffy = true;\n};\n\nFailure$2.prototype.clearFluffy = function() {\n  this.fluffy = false;\n};\n\nFailure$2.prototype.subsumes = function(that) {\n  return (\n    this.getText() === that.getText() &&\n    this.type === that.type &&\n    (!this.isFluffy() || (this.isFluffy() && that.isFluffy()))\n  );\n};\n\nFailure$2.prototype.toString = function() {\n  return this.type === 'string' ? JSON.stringify(this.getText()) : this.getText();\n};\n\nFailure$2.prototype.clone = function() {\n  const failure = new Failure$2(this.pexpr, this.text, this.type);\n  if (this.isFluffy()) {\n    failure.makeFluffy();\n  }\n  return failure;\n};\n\nFailure$2.prototype.toKey = function() {\n  return this.toString() + '#' + this.type;\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar Failure_1 = Failure$2;\n\nvar common$l = {};\n\n(function (exports) {\n\n// --------------------------------------------------------------------\n// Private Stuff\n// --------------------------------------------------------------------\n\n// Helpers\n\nconst escapeStringFor = {};\nfor (let c = 0; c < 128; c++) {\n  escapeStringFor[c] = String.fromCharCode(c);\n}\nescapeStringFor[\"'\".charCodeAt(0)] = \"\\\\'\";\nescapeStringFor['\"'.charCodeAt(0)] = '\\\\\"';\nescapeStringFor['\\\\'.charCodeAt(0)] = '\\\\\\\\';\nescapeStringFor['\\b'.charCodeAt(0)] = '\\\\b';\nescapeStringFor['\\f'.charCodeAt(0)] = '\\\\f';\nescapeStringFor['\\n'.charCodeAt(0)] = '\\\\n';\nescapeStringFor['\\r'.charCodeAt(0)] = '\\\\r';\nescapeStringFor['\\t'.charCodeAt(0)] = '\\\\t';\nescapeStringFor['\\u000b'.charCodeAt(0)] = '\\\\v';\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nexports.abstract = function(optMethodName) {\n  const methodName = optMethodName || '';\n  return function() {\n    throw new Error(\n        'this method ' +\n        methodName +\n        ' is abstract! ' +\n        '(it has no implementation in class ' +\n        this.constructor.name +\n        ')'\n    );\n  };\n};\n\nexports.assert = function(cond, message) {\n  if (!cond) {\n    throw new Error(message || 'Assertion failed');\n  }\n};\n\n// Define a lazily-computed, non-enumerable property named `propName`\n// on the object `obj`. `getterFn` will be called to compute the value the\n// first time the property is accessed.\nexports.defineLazyProperty = function(obj, propName, getterFn) {\n  let memo;\n  Object.defineProperty(obj, propName, {\n    get() {\n      if (!memo) {\n        memo = getterFn.call(this);\n      }\n      return memo;\n    },\n  });\n};\n\nexports.clone = function(obj) {\n  if (obj) {\n    return Object.assign({}, obj);\n  }\n  return obj;\n};\n\nexports.repeatFn = function(fn, n) {\n  const arr = [];\n  while (n-- > 0) {\n    arr.push(fn());\n  }\n  return arr;\n};\n\nexports.repeatStr = function(str, n) {\n  return new Array(n + 1).join(str);\n};\n\nexports.repeat = function(x, n) {\n  return exports.repeatFn(() => x, n);\n};\n\nexports.getDuplicates = function(array) {\n  const duplicates = [];\n  for (let idx = 0; idx < array.length; idx++) {\n    const x = array[idx];\n    if (array.lastIndexOf(x) !== idx && duplicates.indexOf(x) < 0) {\n      duplicates.push(x);\n    }\n  }\n  return duplicates;\n};\n\nexports.copyWithoutDuplicates = function(array) {\n  const noDuplicates = [];\n  array.forEach(entry => {\n    if (noDuplicates.indexOf(entry) < 0) {\n      noDuplicates.push(entry);\n    }\n  });\n  return noDuplicates;\n};\n\nexports.isSyntactic = function(ruleName) {\n  const firstChar = ruleName[0];\n  return firstChar === firstChar.toUpperCase();\n};\n\nexports.isLexical = function(ruleName) {\n  return !exports.isSyntactic(ruleName);\n};\n\nexports.padLeft = function(str, len, optChar) {\n  const ch = optChar || ' ';\n  if (str.length < len) {\n    return exports.repeatStr(ch, len - str.length) + str;\n  }\n  return str;\n};\n\n// StringBuffer\n\nexports.StringBuffer = function() {\n  this.strings = [];\n};\n\nexports.StringBuffer.prototype.append = function(str) {\n  this.strings.push(str);\n};\n\nexports.StringBuffer.prototype.contents = function() {\n  return this.strings.join('');\n};\n\nconst escapeUnicode = str => String.fromCodePoint(parseInt(str, 16));\n\nexports.unescapeCodePoint = function(s) {\n  if (s.charAt(0) === '\\\\') {\n    switch (s.charAt(1)) {\n      case 'b':\n        return '\\b';\n      case 'f':\n        return '\\f';\n      case 'n':\n        return '\\n';\n      case 'r':\n        return '\\r';\n      case 't':\n        return '\\t';\n      case 'v':\n        return '\\v';\n      case 'x':\n        return escapeUnicode(s.slice(2, 4));\n      case 'u':\n        return s.charAt(2) === '{' ?\n          escapeUnicode(s.slice(3, -1)) :\n          escapeUnicode(s.slice(2, 6));\n      default:\n        return s.charAt(1);\n    }\n  } else {\n    return s;\n  }\n};\n\n// Helper for producing a description of an unknown object in a safe way.\n// Especially useful for error messages where an unexpected type of object was encountered.\nexports.unexpectedObjToString = function(obj) {\n  if (obj == null) {\n    return String(obj);\n  }\n  const baseToString = Object.prototype.toString.call(obj);\n  try {\n    let typeName;\n    if (obj.constructor && obj.constructor.name) {\n      typeName = obj.constructor.name;\n    } else if (baseToString.indexOf('[object ') === 0) {\n      typeName = baseToString.slice(8, -1); // Extract e.g. \"Array\" from \"[object Array]\".\n    } else {\n      typeName = typeof obj;\n    }\n    return typeName + ': ' + JSON.stringify(String(obj));\n  } catch (e) {\n    return baseToString;\n  }\n};\n}(common$l));\n\nconst common$k = common$l;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nclass Node {\n  constructor(matchLength) {\n    this.matchLength = matchLength;\n  }\n\n  get ctorName() {\n    throw new Error('subclass responsibility');\n  }\n\n  numChildren() {\n    return this.children ? this.children.length : 0;\n  }\n\n  childAt(idx) {\n    if (this.children) {\n      return this.children[idx];\n    }\n  }\n\n  indexOfChild(arg) {\n    return this.children.indexOf(arg);\n  }\n\n  hasChildren() {\n    return this.numChildren() > 0;\n  }\n\n  hasNoChildren() {\n    return !this.hasChildren();\n  }\n\n  onlyChild() {\n    if (this.numChildren() !== 1) {\n      throw new Error(\n          'cannot get only child of a node of type ' +\n          this.ctorName +\n          ' (it has ' +\n          this.numChildren() +\n          ' children)'\n      );\n    } else {\n      return this.firstChild();\n    }\n  }\n\n  firstChild() {\n    if (this.hasNoChildren()) {\n      throw new Error(\n          'cannot get first child of a ' + this.ctorName + ' node, which has no children'\n      );\n    } else {\n      return this.childAt(0);\n    }\n  }\n\n  lastChild() {\n    if (this.hasNoChildren()) {\n      throw new Error(\n          'cannot get last child of a ' + this.ctorName + ' node, which has no children'\n      );\n    } else {\n      return this.childAt(this.numChildren() - 1);\n    }\n  }\n\n  childBefore(child) {\n    const childIdx = this.indexOfChild(child);\n    if (childIdx < 0) {\n      throw new Error('Node.childBefore() called w/ an argument that is not a child');\n    } else if (childIdx === 0) {\n      throw new Error('cannot get child before first child');\n    } else {\n      return this.childAt(childIdx - 1);\n    }\n  }\n\n  childAfter(child) {\n    const childIdx = this.indexOfChild(child);\n    if (childIdx < 0) {\n      throw new Error('Node.childAfter() called w/ an argument that is not a child');\n    } else if (childIdx === this.numChildren() - 1) {\n      throw new Error('cannot get child after last child');\n    } else {\n      return this.childAt(childIdx + 1);\n    }\n  }\n\n  isTerminal() {\n    return false;\n  }\n\n  isNonterminal() {\n    return false;\n  }\n\n  isIteration() {\n    return false;\n  }\n\n  isOptional() {\n    return false;\n  }\n}\n\n// Terminals\n\nclass TerminalNode$2 extends Node {\n  get ctorName() {\n    return '_terminal';\n  }\n\n  isTerminal() {\n    return true;\n  }\n\n  get primitiveValue() {\n    throw new Error('The `primitiveValue` property was removed in Ohm v17.');\n  }\n}\n\n// Nonterminals\n\nclass NonterminalNode$1 extends Node {\n  constructor(ruleName, children, childOffsets, matchLength) {\n    super(matchLength);\n    this.ruleName = ruleName;\n    this.children = children;\n    this.childOffsets = childOffsets;\n  }\n\n  get ctorName() {\n    return this.ruleName;\n  }\n\n  isNonterminal() {\n    return true;\n  }\n\n  isLexical() {\n    return common$k.isLexical(this.ctorName);\n  }\n\n  isSyntactic() {\n    return common$k.isSyntactic(this.ctorName);\n  }\n}\n\n// Iterations\n\nclass IterationNode$2 extends Node {\n  constructor(children, childOffsets, matchLength, isOptional) {\n    super(matchLength);\n    this.children = children;\n    this.childOffsets = childOffsets;\n    this.optional = isOptional;\n  }\n\n  get ctorName() {\n    return '_iter';\n  }\n\n  isIteration() {\n    return true;\n  }\n\n  isOptional() {\n    return this.optional;\n  }\n}\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar nodes$1 = {\n  Node,\n  TerminalNode: TerminalNode$2,\n  NonterminalNode: NonterminalNode$1,\n  IterationNode: IterationNode$2,\n};\n\nvar pexprsMain = {};\n\n// Based on https://github.com/mathiasbynens/unicode-9.0.0.\n// These are just categories that are used in ES5/ES2015.\n// The full list of Unicode categories is here: http://www.fileformat.info/info/unicode/category/index.htm.\nvar UnicodeCategories$1 = {\n  // Letters\n  Lu: /[A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AE\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A]|\\uD801[\\uDC00-\\uDC27\\uDCB0-\\uDCD3]|\\uD803[\\uDC80-\\uDCB2]|\\uD806[\\uDCA0-\\uDCBF]|\\uD835[\\uDC00-\\uDC19\\uDC34-\\uDC4D\\uDC68-\\uDC81\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB5\\uDCD0-\\uDCE9\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD38\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD6C-\\uDD85\\uDDA0-\\uDDB9\\uDDD4-\\uDDED\\uDE08-\\uDE21\\uDE3C-\\uDE55\\uDE70-\\uDE89\\uDEA8-\\uDEC0\\uDEE2-\\uDEFA\\uDF1C-\\uDF34\\uDF56-\\uDF6E\\uDF90-\\uDFA8\\uDFCA]|\\uD83A[\\uDD00-\\uDD21]/,\n  Ll: /[a-z\\xB5\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1C80-\\u1C88\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A]|\\uD801[\\uDC28-\\uDC4F\\uDCD8-\\uDCFB]|\\uD803[\\uDCC0-\\uDCF2]|\\uD806[\\uDCC0-\\uDCDF]|\\uD835[\\uDC1A-\\uDC33\\uDC4E-\\uDC54\\uDC56-\\uDC67\\uDC82-\\uDC9B\\uDCB6-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDCEA-\\uDD03\\uDD1E-\\uDD37\\uDD52-\\uDD6B\\uDD86-\\uDD9F\\uDDBA-\\uDDD3\\uDDEE-\\uDE07\\uDE22-\\uDE3B\\uDE56-\\uDE6F\\uDE8A-\\uDEA5\\uDEC2-\\uDEDA\\uDEDC-\\uDEE1\\uDEFC-\\uDF14\\uDF16-\\uDF1B\\uDF36-\\uDF4E\\uDF50-\\uDF55\\uDF70-\\uDF88\\uDF8A-\\uDF8F\\uDFAA-\\uDFC2\\uDFC4-\\uDFC9\\uDFCB]|\\uD83A[\\uDD22-\\uDD43]/,\n  Lt: /[\\u01C5\\u01C8\\u01CB\\u01F2\\u1F88-\\u1F8F\\u1F98-\\u1F9F\\u1FA8-\\u1FAF\\u1FBC\\u1FCC\\u1FFC]/,\n  Lm: /[\\u02B0-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0374\\u037A\\u0559\\u0640\\u06E5\\u06E6\\u07F4\\u07F5\\u07FA\\u081A\\u0824\\u0828\\u0971\\u0E46\\u0EC6\\u10FC\\u17D7\\u1843\\u1AA7\\u1C78-\\u1C7D\\u1D2C-\\u1D6A\\u1D78\\u1D9B-\\u1DBF\\u2071\\u207F\\u2090-\\u209C\\u2C7C\\u2C7D\\u2D6F\\u2E2F\\u3005\\u3031-\\u3035\\u303B\\u309D\\u309E\\u30FC-\\u30FE\\uA015\\uA4F8-\\uA4FD\\uA60C\\uA67F\\uA69C\\uA69D\\uA717-\\uA71F\\uA770\\uA788\\uA7F8\\uA7F9\\uA9CF\\uA9E6\\uAA70\\uAADD\\uAAF3\\uAAF4\\uAB5C-\\uAB5F\\uFF70\\uFF9E\\uFF9F]|\\uD81A[\\uDF40-\\uDF43]|\\uD81B[\\uDF93-\\uDF9F\\uDFE0]/,\n  Lo: /[\\xAA\\xBA\\u01BB\\u01C0-\\u01C3\\u0294\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u0800-\\u0815\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0972-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E45\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10D0-\\u10FA\\u10FD-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17DC\\u1820-\\u1842\\u1844-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C77\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u2135-\\u2138\\u2D30-\\u2D67\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3006\\u303C\\u3041-\\u3096\\u309F\\u30A1-\\u30FA\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA014\\uA016-\\uA48C\\uA4D0-\\uA4F7\\uA500-\\uA60B\\uA610-\\uA61F\\uA62A\\uA62B\\uA66E\\uA6A0-\\uA6E5\\uA78F\\uA7F7\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9E0-\\uA9E4\\uA9E7-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA6F\\uAA71-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB\\uAADC\\uAAE0-\\uAAEA\\uAAF2\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF66-\\uFF6F\\uFF71-\\uFF9D\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC50-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n\n  // Numbers\n  Nl: /[\\u16EE-\\u16F0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303A\\uA6E6-\\uA6EF]|\\uD800[\\uDD40-\\uDD74\\uDF41\\uDF4A\\uDFD1-\\uDFD5]|\\uD809[\\uDC00-\\uDC6E]/,\n  Nd: /[0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19]|\\uD801[\\uDCA0-\\uDCA9]|\\uD804[\\uDC66-\\uDC6F\\uDCF0-\\uDCF9\\uDD36-\\uDD3F\\uDDD0-\\uDDD9\\uDEF0-\\uDEF9]|[\\uD805\\uD807][\\uDC50-\\uDC59\\uDCD0-\\uDCD9\\uDE50-\\uDE59\\uDEC0-\\uDEC9\\uDF30-\\uDF39]|\\uD806[\\uDCE0-\\uDCE9]|\\uD81A[\\uDE60-\\uDE69\\uDF50-\\uDF59]|\\uD835[\\uDFCE-\\uDFFF]|\\uD83A[\\uDD50-\\uDD59]/,\n\n  // Marks\n  Mn: /[\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D4-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D01\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABD\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFB-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC01\\uDC38-\\uDC46\\uDC7F-\\uDC81\\uDCB3-\\uDCB6\\uDCB9\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD2B\\uDD2D-\\uDD34\\uDD73\\uDD80\\uDD81\\uDDB6-\\uDDBE\\uDDCA-\\uDDCC\\uDE2F-\\uDE31\\uDE34\\uDE36\\uDE37\\uDE3E\\uDEDF\\uDEE3-\\uDEEA\\uDF00\\uDF01\\uDF3C\\uDF40\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC38-\\uDC3F\\uDC42-\\uDC44\\uDC46\\uDCB3-\\uDCB8\\uDCBA\\uDCBF\\uDCC0\\uDCC2\\uDCC3\\uDDB2-\\uDDB5\\uDDBC\\uDDBD\\uDDBF\\uDDC0\\uDDDC\\uDDDD\\uDE33-\\uDE3A\\uDE3D\\uDE3F\\uDE40\\uDEAB\\uDEAD\\uDEB0-\\uDEB5\\uDEB7\\uDF1D-\\uDF1F\\uDF22-\\uDF25\\uDF27-\\uDF2B]|\\uD807[\\uDC30-\\uDC36\\uDC38-\\uDC3D\\uDC3F\\uDC92-\\uDCA7\\uDCAA-\\uDCB0\\uDCB2\\uDCB3\\uDCB5\\uDCB6]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD67-\\uDD69\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDCD0-\\uDCD6\\uDD44-\\uDD4A]|\\uDB40[\\uDD00-\\uDDEF]/,\n  Mc: /[\\u0903-\\u0903]|[\\u093E-\\u0940]|[\\u0949-\\u094C]|[\\u0982-\\u0983]|[\\u09BE-\\u09C0]|[\\u09C7-\\u09C8]|[\\u09CB-\\u09CC]|[\\u09D7-\\u09D7]|[\\u0A3E-\\u0A40]|[\\u0A83-\\u0A83]|[\\u0ABE-\\u0AC0]|[\\u0AC9-\\u0AC9]|[\\u0ACB-\\u0ACC]|[\\u0B02-\\u0B03]|[\\u0B3E-\\u0B3E]|[\\u0B40-\\u0B40]|[\\u0B47-\\u0B48]|[\\u0B4B-\\u0B4C]|[\\u0B57-\\u0B57]|[\\u0B83-\\u0B83]|[\\u0BBE-\\u0BBF]|[\\u0BC1-\\u0BC2]|[\\u0BC6-\\u0BC8]|[\\u0BCA-\\u0BCC]|[\\u0BD7-\\u0BD7]|[\\u0C01-\\u0C03]|[\\u0C41-\\u0C44]|[\\u0C82-\\u0C83]|[\\u0CBE-\\u0CBE]|[\\u0CC0-\\u0CC4]|[\\u0CC7-\\u0CC8]|[\\u0CCA-\\u0CCB]|[\\u0CD5-\\u0CD6]|[\\u0D02-\\u0D03]|[\\u0D3E-\\u0D40]|[\\u0D46-\\u0D48]|[\\u0D4A-\\u0D4C]|[\\u0D57-\\u0D57]|[\\u0F3E-\\u0F3F]|[\\u0F7F-\\u0F7F]/,\n\n  // Punctuation, Connector\n  Pc: /[_\\u203F\\u2040\\u2054\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF3F]/,\n\n  // Separator, Space\n  Zs: /[ \\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/,\n\n  // These two are not real Unicode categories, but our useful for Ohm.\n  // L is a combination of all the letter categories.\n  // Ltmo is a combination of Lt, Lm, and Lo.\n  L: /[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n  Ltmo: /[\\u01C5\\u01C8\\u01CB\\u01F2\\u1F88-\\u1F8F\\u1F98-\\u1F9F\\u1FA8-\\u1FAF\\u1FBC\\u1FCC\\u1FFC]|[\\u02B0-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0374\\u037A\\u0559\\u0640\\u06E5\\u06E6\\u07F4\\u07F5\\u07FA\\u081A\\u0824\\u0828\\u0971\\u0E46\\u0EC6\\u10FC\\u17D7\\u1843\\u1AA7\\u1C78-\\u1C7D\\u1D2C-\\u1D6A\\u1D78\\u1D9B-\\u1DBF\\u2071\\u207F\\u2090-\\u209C\\u2C7C\\u2C7D\\u2D6F\\u2E2F\\u3005\\u3031-\\u3035\\u303B\\u309D\\u309E\\u30FC-\\u30FE\\uA015\\uA4F8-\\uA4FD\\uA60C\\uA67F\\uA69C\\uA69D\\uA717-\\uA71F\\uA770\\uA788\\uA7F8\\uA7F9\\uA9CF\\uA9E6\\uAA70\\uAADD\\uAAF3\\uAAF4\\uAB5C-\\uAB5F\\uFF70\\uFF9E\\uFF9F]|\\uD81A[\\uDF40-\\uDF43]|\\uD81B[\\uDF93-\\uDF9F\\uDFE0]|[\\xAA\\xBA\\u01BB\\u01C0-\\u01C3\\u0294\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u0800-\\u0815\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0972-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E45\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10D0-\\u10FA\\u10FD-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17DC\\u1820-\\u1842\\u1844-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C77\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u2135-\\u2138\\u2D30-\\u2D67\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3006\\u303C\\u3041-\\u3096\\u309F\\u30A1-\\u30FA\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA014\\uA016-\\uA48C\\uA4D0-\\uA4F7\\uA500-\\uA60B\\uA610-\\uA61F\\uA62A\\uA62B\\uA66E\\uA6A0-\\uA6E5\\uA78F\\uA7F7\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9E0-\\uA9E4\\uA9E7-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA6F\\uAA71-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB\\uAADC\\uAAE0-\\uAAEA\\uAAF2\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF66-\\uFF6F\\uFF71-\\uFF9D\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC50-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst UnicodeCategories = UnicodeCategories$1;\nconst common$j = common$l;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// General stuff\n\nclass PExpr$1 {\n  constructor() {\n    if (this.constructor === PExpr$1) {\n      throw new Error(\"PExpr cannot be instantiated -- it's abstract\");\n    }\n  }\n\n  // Set the `source` property to the interval containing the source for this expression.\n  withSource(interval) {\n    if (interval) {\n      this.source = interval.trimmed();\n    }\n    return this;\n  }\n}\n\n// Any\n\nconst any = Object.create(PExpr$1.prototype);\n\n// End\n\nconst end = Object.create(PExpr$1.prototype);\n\n// Terminals\n\nclass Terminal$1 extends PExpr$1 {\n  constructor(obj) {\n    super();\n    this.obj = obj;\n  }\n}\n\n// Ranges\n\nclass Range extends PExpr$1 {\n  constructor(from, to) {\n    super();\n    this.from = from;\n    this.to = to;\n    // If either `from` or `to` is made up of multiple code units, then\n    // the range should consume a full code point, not a single code unit.\n    this.matchCodePoint = from.length > 1 || to.length > 1;\n  }\n}\n\n// Parameters\n\nclass Param extends PExpr$1 {\n  constructor(index) {\n    super();\n    this.index = index;\n  }\n}\n\n// Alternation\n\nclass Alt extends PExpr$1 {\n  constructor(terms) {\n    super();\n    this.terms = terms;\n  }\n}\n\n// Extend is an implementation detail of rule extension\n\nclass Extend extends Alt {\n  constructor(superGrammar, name, body) {\n    const origBody = superGrammar.rules[name].body;\n    super([body, origBody]);\n\n    this.superGrammar = superGrammar;\n    this.name = name;\n    this.body = body;\n  }\n}\n\n// Splice is an implementation detail of rule overriding with the `...` operator.\nclass Splice extends Alt {\n  constructor(superGrammar, ruleName, beforeTerms, afterTerms) {\n    const origBody = superGrammar.rules[ruleName].body;\n    super([...beforeTerms, origBody, ...afterTerms]);\n\n    this.superGrammar = superGrammar;\n    this.ruleName = ruleName;\n    this.expansionPos = beforeTerms.length;\n  }\n}\n\n// Sequences\n\nclass Seq extends PExpr$1 {\n  constructor(factors) {\n    super();\n    this.factors = factors;\n  }\n}\n\n// Iterators and optionals\n\nclass Iter extends PExpr$1 {\n  constructor(expr) {\n    super();\n    this.expr = expr;\n  }\n}\n\nclass Star extends Iter {}\nclass Plus extends Iter {}\nclass Opt extends Iter {}\n\nStar.prototype.operator = '*';\nPlus.prototype.operator = '+';\nOpt.prototype.operator = '?';\n\nStar.prototype.minNumMatches = 0;\nPlus.prototype.minNumMatches = 1;\nOpt.prototype.minNumMatches = 0;\n\nStar.prototype.maxNumMatches = Number.POSITIVE_INFINITY;\nPlus.prototype.maxNumMatches = Number.POSITIVE_INFINITY;\nOpt.prototype.maxNumMatches = 1;\n\n// Predicates\n\nclass Not extends PExpr$1 {\n  constructor(expr) {\n    super();\n    this.expr = expr;\n  }\n}\n\nclass Lookahead extends PExpr$1 {\n  constructor(expr) {\n    super();\n    this.expr = expr;\n  }\n}\n\n// \"Lexification\"\n\nclass Lex extends PExpr$1 {\n  constructor(expr) {\n    super();\n    this.expr = expr;\n  }\n}\n\n// Rule application\n\nclass Apply extends PExpr$1 {\n  constructor(ruleName, args = []) {\n    super();\n    this.ruleName = ruleName;\n    this.args = args;\n  }\n\n  isSyntactic() {\n    return common$j.isSyntactic(this.ruleName);\n  }\n\n  // This method just caches the result of `this.toString()` in a non-enumerable property.\n  toMemoKey() {\n    if (!this._memoKey) {\n      Object.defineProperty(this, '_memoKey', {value: this.toString()});\n    }\n    return this._memoKey;\n  }\n}\n\n// Unicode character\n\nclass UnicodeChar extends PExpr$1 {\n  constructor(category) {\n    super();\n    this.category = category;\n    this.pattern = UnicodeCategories[category];\n  }\n}\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\npexprsMain.PExpr = PExpr$1;\npexprsMain.any = any;\npexprsMain.end = end;\npexprsMain.Terminal = Terminal$1;\npexprsMain.Range = Range;\npexprsMain.Param = Param;\npexprsMain.Alt = Alt;\npexprsMain.Extend = Extend;\npexprsMain.Splice = Splice;\npexprsMain.Seq = Seq;\npexprsMain.Iter = Iter;\npexprsMain.Star = Star;\npexprsMain.Plus = Plus;\npexprsMain.Opt = Opt;\npexprsMain.Not = Not;\npexprsMain.Lookahead = Lookahead;\npexprsMain.Lex = Lex;\npexprsMain.Apply = Apply;\npexprsMain.UnicodeChar = UnicodeChar;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common$i = common$l;\nconst pexprs$l = pexprsMain;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Return true if we should skip spaces preceding this expression in a syntactic context.\n*/\npexprs$l.PExpr.prototype.allowsSkippingPrecedingSpace = common$i.abstract(\n    'allowsSkippingPrecedingSpace'\n);\n\n/*\n  Generally, these are all first-order expressions and (with the exception of Apply)\n  directly read from the input stream.\n*/\npexprs$l.any.allowsSkippingPrecedingSpace =\n  pexprs$l.end.allowsSkippingPrecedingSpace =\n  pexprs$l.Apply.prototype.allowsSkippingPrecedingSpace =\n  pexprs$l.Terminal.prototype.allowsSkippingPrecedingSpace =\n  pexprs$l.Range.prototype.allowsSkippingPrecedingSpace =\n  pexprs$l.UnicodeChar.prototype.allowsSkippingPrecedingSpace =\n    function() {\n      return true;\n    };\n\n/*\n  Higher-order expressions that don't directly consume input.\n*/\npexprs$l.Alt.prototype.allowsSkippingPrecedingSpace =\n  pexprs$l.Iter.prototype.allowsSkippingPrecedingSpace =\n  pexprs$l.Lex.prototype.allowsSkippingPrecedingSpace =\n  pexprs$l.Lookahead.prototype.allowsSkippingPrecedingSpace =\n  pexprs$l.Not.prototype.allowsSkippingPrecedingSpace =\n  pexprs$l.Param.prototype.allowsSkippingPrecedingSpace =\n  pexprs$l.Seq.prototype.allowsSkippingPrecedingSpace =\n    function() {\n      return false;\n    };\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction Namespace$2() {}\nNamespace$2.prototype = Object.create(null);\n\nNamespace$2.asNamespace = function(objOrNamespace) {\n  if (objOrNamespace instanceof Namespace$2) {\n    return objOrNamespace;\n  }\n  return Namespace$2.createNamespace(objOrNamespace);\n};\n\n// Create a new namespace. If `optProps` is specified, all of its properties\n// will be copied to the new namespace.\nNamespace$2.createNamespace = function(optProps) {\n  return Namespace$2.extend(Namespace$2.prototype, optProps);\n};\n\n// Create a new namespace which extends another namespace. If `optProps` is\n// specified, all of its properties will be copied to the new namespace.\nNamespace$2.extend = function(namespace, optProps) {\n  if (namespace !== Namespace$2.prototype && !(namespace instanceof Namespace$2)) {\n    throw new TypeError('not a Namespace object: ' + namespace);\n  }\n  const ns = Object.create(namespace, {\n    constructor: {\n      value: Namespace$2,\n      enumerable: false,\n      writable: true,\n      configurable: true,\n    },\n  });\n  return Object.assign(ns, optProps);\n};\n\n// TODO: Should this be a regular method?\nNamespace$2.toString = function(ns) {\n  return Object.prototype.toString.call(ns);\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar Namespace_1 = Namespace$2;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst {assert: assert$3} = common$l;\nconst Namespace$1 = Namespace_1;\nconst pexprs$k = pexprsMain;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction createError(message, optInterval) {\n  let e;\n  if (optInterval) {\n    e = new Error(optInterval.getLineAndColumnMessage() + message);\n    e.shortMessage = message;\n    e.interval = optInterval;\n  } else {\n    e = new Error(message);\n  }\n  return e;\n}\n\n// ----------------- errors about intervals -----------------\n\nfunction intervalSourcesDontMatch() {\n  return createError(\"Interval sources don't match\");\n}\n\n// ----------------- errors about grammars -----------------\n\n// Grammar syntax error\n\nfunction grammarSyntaxError(matchFailure) {\n  const e = new Error();\n  Object.defineProperty(e, 'message', {\n    enumerable: true,\n    get() {\n      return matchFailure.message;\n    },\n  });\n  Object.defineProperty(e, 'shortMessage', {\n    enumerable: true,\n    get() {\n      return 'Expected ' + matchFailure.getExpectedText();\n    },\n  });\n  e.interval = matchFailure.getInterval();\n  return e;\n}\n\n// Undeclared grammar\n\nfunction undeclaredGrammar(grammarName, namespace, interval) {\n  const message = namespace ?\n    'Grammar ' +\n      grammarName +\n      ' is not declared in namespace ' +\n      Namespace$1.toString(namespace) :\n    'Undeclared grammar ' + grammarName;\n  return createError(message, interval);\n}\n\n// Duplicate grammar declaration\n\nfunction duplicateGrammarDeclaration(grammar, namespace) {\n  return createError('Grammar ' + grammar.name + ' is already declared in this namespace');\n}\n\n// ----------------- rules -----------------\n\n// Undeclared rule\n\nfunction undeclaredRule(ruleName, grammarName, optInterval) {\n  return createError(\n      'Rule ' + ruleName + ' is not declared in grammar ' + grammarName,\n      optInterval\n  );\n}\n\n// Cannot override undeclared rule\n\nfunction cannotOverrideUndeclaredRule(ruleName, grammarName, optSource) {\n  return createError(\n      'Cannot override rule ' + ruleName + ' because it is not declared in ' + grammarName,\n      optSource\n  );\n}\n\n// Cannot extend undeclared rule\n\nfunction cannotExtendUndeclaredRule(ruleName, grammarName, optSource) {\n  return createError(\n      'Cannot extend rule ' + ruleName + ' because it is not declared in ' + grammarName,\n      optSource\n  );\n}\n\n// Duplicate rule declaration\n\nfunction duplicateRuleDeclaration(ruleName, grammarName, declGrammarName, optSource) {\n  let message =\n    \"Duplicate declaration for rule '\" + ruleName + \"' in grammar '\" + grammarName + \"'\";\n  if (grammarName !== declGrammarName) {\n    message += \" (originally declared in '\" + declGrammarName + \"')\";\n  }\n  return createError(message, optSource);\n}\n\n// Wrong number of parameters\n\nfunction wrongNumberOfParameters(ruleName, expected, actual, source) {\n  return createError(\n      'Wrong number of parameters for rule ' +\n      ruleName +\n      ' (expected ' +\n      expected +\n      ', got ' +\n      actual +\n      ')',\n      source\n  );\n}\n\n// Wrong number of arguments\n\nfunction wrongNumberOfArguments(ruleName, expected, actual, expr) {\n  return createError(\n      'Wrong number of arguments for rule ' +\n      ruleName +\n      ' (expected ' +\n      expected +\n      ', got ' +\n      actual +\n      ')',\n      expr\n  );\n}\n\n// Duplicate parameter names\n\nfunction duplicateParameterNames(ruleName, duplicates, source) {\n  return createError(\n      'Duplicate parameter names in rule ' + ruleName + ': ' + duplicates.join(', '),\n      source\n  );\n}\n\n// Invalid parameter expression\n\nfunction invalidParameter(ruleName, expr) {\n  return createError(\n      'Invalid parameter to rule ' +\n      ruleName +\n      ': ' +\n      expr +\n      ' has arity ' +\n      expr.getArity() +\n      ', but parameter expressions must have arity 1',\n      expr.source\n  );\n}\n\n// Application of syntactic rule from lexical rule\n\nconst syntacticVsLexicalNote =\n  'NOTE: A _syntactic rule_ is a rule whose name begins with a capital letter. ' +\n  'See https://ohmjs.org/d/svl for more details.';\n\nfunction applicationOfSyntacticRuleFromLexicalContext(ruleName, applyExpr) {\n  return createError(\n      'Cannot apply syntactic rule ' + ruleName + ' from here (inside a lexical context)',\n      applyExpr.source\n  );\n}\n\n// Lexical rule application used with applySyntactic\n\nfunction applySyntacticWithLexicalRuleApplication(applyExpr) {\n  const {ruleName} = applyExpr;\n  return createError(\n      `applySyntactic is for syntactic rules, but '${ruleName}' is a lexical rule. ` +\n      syntacticVsLexicalNote,\n      applyExpr.source\n  );\n}\n\n// Application of applySyntactic in a syntactic context\n\nfunction unnecessaryExperimentalApplySyntactic(applyExpr) {\n  return createError(\n      'applySyntactic is not required here (in a syntactic context)',\n      applyExpr.source\n  );\n}\n\n// Incorrect argument type\n\nfunction incorrectArgumentType(expectedType, expr) {\n  return createError('Incorrect argument type: expected ' + expectedType, expr.source);\n}\n\n// Multiple instances of the super-splice operator (`...`) in the rule body.\n\nfunction multipleSuperSplices(expr) {\n  return createError(\"'...' can appear at most once in a rule body\", expr.source);\n}\n\n// Unicode code point escapes\n\nfunction invalidCodePoint(applyWrapper) {\n  const node = applyWrapper._node;\n  assert$3(node && node.isNonterminal() && node.ctorName === 'escapeChar_unicodeCodePoint');\n\n  // Get an interval that covers all of the hex digits.\n  const digitIntervals = applyWrapper.children.slice(1, -1).map(d => d.source);\n  const fullInterval = digitIntervals[0].coverageWith(...digitIntervals.slice(1));\n  return createError(\n      `U+${fullInterval.contents} is not a valid Unicode code point`,\n      fullInterval\n  );\n}\n\n// ----------------- Kleene operators -----------------\n\nfunction kleeneExprHasNullableOperand(kleeneExpr, applicationStack) {\n  const actuals =\n    applicationStack.length > 0 ? applicationStack[applicationStack.length - 1].args : [];\n  const expr = kleeneExpr.expr.substituteParams(actuals);\n  let message =\n    'Nullable expression ' +\n    expr +\n    \" is not allowed inside '\" +\n    kleeneExpr.operator +\n    \"' (possible infinite loop)\";\n  if (applicationStack.length > 0) {\n    const stackTrace = applicationStack\n        .map(app => new pexprs$k.Apply(app.ruleName, app.args))\n        .join('\\n');\n    message += '\\nApplication stack (most recent application last):\\n' + stackTrace;\n  }\n  return createError(message, kleeneExpr.expr.source);\n}\n\n// ----------------- arity -----------------\n\nfunction inconsistentArity(ruleName, expected, actual, expr) {\n  return createError(\n      'Rule ' +\n      ruleName +\n      ' involves an alternation which has inconsistent arity ' +\n      '(expected ' +\n      expected +\n      ', got ' +\n      actual +\n      ')',\n      expr.source\n  );\n}\n\n// ----------------- properties -----------------\n\nfunction duplicatePropertyNames(duplicates) {\n  return createError('Object pattern has duplicate property names: ' + duplicates.join(', '));\n}\n\n// ----------------- constructors -----------------\n\nfunction invalidConstructorCall(grammar, ctorName, children) {\n  return createError(\n      'Attempt to invoke constructor ' + ctorName + ' with invalid or unexpected arguments'\n  );\n}\n\n// ----------------- convenience -----------------\n\nfunction multipleErrors(errors) {\n  const messages = errors.map(e => e.message);\n  return createError(['Errors:'].concat(messages).join('\\n- '), errors[0].interval);\n}\n\n// ----------------- semantic -----------------\n\nfunction missingSemanticAction(ctorName, name, type, stack) {\n  let stackTrace = stack\n      .slice(0, -1)\n      .map(info => {\n        const ans = '  ' + info[0].name + ' > ' + info[1];\n        return info.length === 3 ? ans + \" for '\" + info[2] + \"'\" : ans;\n      })\n      .join('\\n');\n  stackTrace += '\\n  ' + name + ' > ' + ctorName;\n\n  let moreInfo = '';\n  if (ctorName === '_iter') {\n    moreInfo = [\n      '\\nNOTE: as of Ohm v16, there is no default action for iteration nodes — see ',\n      '  https://ohmjs.org/d/dsa for details.',\n    ].join('\\n');\n  }\n\n  const message = [\n    `Missing semantic action for '${ctorName}' in ${type} '${name}'.${moreInfo}`,\n    'Action stack (most recent call last):',\n    stackTrace,\n  ].join('\\n');\n\n  const e = createError(message);\n  e.name = 'missingSemanticAction';\n  return e;\n}\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar errors$9 = {\n  applicationOfSyntacticRuleFromLexicalContext,\n  applySyntacticWithLexicalRuleApplication,\n  cannotExtendUndeclaredRule,\n  cannotOverrideUndeclaredRule,\n  duplicateGrammarDeclaration,\n  duplicateParameterNames,\n  duplicatePropertyNames,\n  duplicateRuleDeclaration,\n  inconsistentArity,\n  incorrectArgumentType,\n  intervalSourcesDontMatch,\n  invalidCodePoint,\n  invalidConstructorCall,\n  invalidParameter,\n  grammarSyntaxError,\n  kleeneExprHasNullableOperand,\n  missingSemanticAction,\n  multipleSuperSplices,\n  undeclaredGrammar,\n  undeclaredRule,\n  unnecessaryExperimentalApplySyntactic,\n  wrongNumberOfArguments,\n  wrongNumberOfParameters,\n\n  throwErrors(errors) {\n    if (errors.length === 1) {\n      throw errors[0];\n    }\n    if (errors.length > 1) {\n      throw multipleErrors(errors);\n    }\n  },\n};\n\nvar util$7 = {};\n\n(function (exports) {\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common = common$l;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// Given an array of numbers `arr`, return an array of the numbers as strings,\n// right-justified and padded to the same length.\nfunction padNumbersToEqualLength(arr) {\n  let maxLen = 0;\n  const strings = arr.map(n => {\n    const str = n.toString();\n    maxLen = Math.max(maxLen, str.length);\n    return str;\n  });\n  return strings.map(s => common.padLeft(s, maxLen));\n}\n\n// Produce a new string that would be the result of copying the contents\n// of the string `src` onto `dest` at offset `offest`.\nfunction strcpy(dest, src, offset) {\n  const origDestLen = dest.length;\n  const start = dest.slice(0, offset);\n  const end = dest.slice(offset + src.length);\n  return (start + src + end).substr(0, origDestLen);\n}\n\n// Casts the underlying lineAndCol object to a formatted message string,\n// highlighting `ranges`.\nfunction lineAndColumnToMessage(...ranges) {\n  const lineAndCol = this;\n  const {offset} = lineAndCol;\n  const {repeatStr} = common;\n\n  const sb = new common.StringBuffer();\n  sb.append('Line ' + lineAndCol.lineNum + ', col ' + lineAndCol.colNum + ':\\n');\n\n  // An array of the previous, current, and next line numbers as strings of equal length.\n  const lineNumbers = padNumbersToEqualLength([\n    lineAndCol.prevLine == null ? 0 : lineAndCol.lineNum - 1,\n    lineAndCol.lineNum,\n    lineAndCol.nextLine == null ? 0 : lineAndCol.lineNum + 1,\n  ]);\n\n  // Helper for appending formatting input lines to the buffer.\n  const appendLine = (num, content, prefix) => {\n    sb.append(prefix + lineNumbers[num] + ' | ' + content + '\\n');\n  };\n\n  // Include the previous line for context if possible.\n  if (lineAndCol.prevLine != null) {\n    appendLine(0, lineAndCol.prevLine, '  ');\n  }\n  // Line that the error occurred on.\n  appendLine(1, lineAndCol.line, '> ');\n\n  // Build up the line that points to the offset and possible indicates one or more ranges.\n  // Start with a blank line, and indicate each range by overlaying a string of `~` chars.\n  const lineLen = lineAndCol.line.length;\n  let indicationLine = repeatStr(' ', lineLen + 1);\n  for (let i = 0; i < ranges.length; ++i) {\n    let startIdx = ranges[i][0];\n    let endIdx = ranges[i][1];\n    common.assert(startIdx >= 0 && startIdx <= endIdx, 'range start must be >= 0 and <= end');\n\n    const lineStartOffset = offset - lineAndCol.colNum + 1;\n    startIdx = Math.max(0, startIdx - lineStartOffset);\n    endIdx = Math.min(endIdx - lineStartOffset, lineLen);\n\n    indicationLine = strcpy(indicationLine, repeatStr('~', endIdx - startIdx), startIdx);\n  }\n  const gutterWidth = 2 + lineNumbers[1].length + 3;\n  sb.append(repeatStr(' ', gutterWidth));\n  indicationLine = strcpy(indicationLine, '^', lineAndCol.colNum - 1);\n  sb.append(indicationLine.replace(/ +$/, '') + '\\n');\n\n  // Include the next line for context if possible.\n  if (lineAndCol.nextLine != null) {\n    appendLine(2, lineAndCol.nextLine, '  ');\n  }\n  return sb.contents();\n}\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nlet builtInRulesCallbacks = [];\n\n// Since Grammar.BuiltInRules is bootstrapped, most of Ohm can't directly depend it.\n// This function allows modules that do depend on the built-in rules to register a callback\n// that will be called later in the initialization process.\nexports.awaitBuiltInRules = cb => {\n  builtInRulesCallbacks.push(cb);\n};\n\nexports.announceBuiltInRules = grammar => {\n  builtInRulesCallbacks.forEach(cb => {\n    cb(grammar);\n  });\n  builtInRulesCallbacks = null;\n};\n\n// Return an object with the line and column information for the given\n// offset in `str`.\nexports.getLineAndColumn = (str, offset) => {\n  let lineNum = 1;\n  let colNum = 1;\n\n  let currOffset = 0;\n  let lineStartOffset = 0;\n\n  let nextLine = null;\n  let prevLine = null;\n  let prevLineStartOffset = -1;\n\n  while (currOffset < offset) {\n    const c = str.charAt(currOffset++);\n    if (c === '\\n') {\n      lineNum++;\n      colNum = 1;\n      prevLineStartOffset = lineStartOffset;\n      lineStartOffset = currOffset;\n    } else if (c !== '\\r') {\n      colNum++;\n    }\n  }\n\n  // Find the end of the target line.\n  let lineEndOffset = str.indexOf('\\n', lineStartOffset);\n  if (lineEndOffset === -1) {\n    lineEndOffset = str.length;\n  } else {\n    // Get the next line.\n    const nextLineEndOffset = str.indexOf('\\n', lineEndOffset + 1);\n    nextLine =\n      nextLineEndOffset === -1 ?\n        str.slice(lineEndOffset) :\n        str.slice(lineEndOffset, nextLineEndOffset);\n    // Strip leading and trailing EOL char(s).\n    nextLine = nextLine.replace(/^\\r?\\n/, '').replace(/\\r$/, '');\n  }\n\n  // Get the previous line.\n  if (prevLineStartOffset >= 0) {\n    // Strip trailing EOL char(s).\n    prevLine = str.slice(prevLineStartOffset, lineStartOffset).replace(/\\r?\\n$/, '');\n  }\n\n  // Get the target line, stripping a trailing carriage return if necessary.\n  const line = str.slice(lineStartOffset, lineEndOffset).replace(/\\r$/, '');\n\n  return {\n    offset,\n    lineNum,\n    colNum,\n    line,\n    prevLine,\n    nextLine,\n    toString: lineAndColumnToMessage,\n  };\n};\n\n// Return a nicely-formatted string describing the line and column for the\n// given offset in `str` highlighting `ranges`.\nexports.getLineAndColumnMessage = function(str, offset, ...ranges) {\n  return exports.getLineAndColumn(str, offset).toString(...ranges);\n};\n\nexports.uniqueId = (() => {\n  let idCounter = 0;\n  return prefix => '' + prefix + idCounter++;\n})();\n}(util$7));\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst {abstract, isSyntactic} = common$l;\nconst errors$8 = errors$9;\nconst pexprs$j = pexprsMain;\nconst util$6 = util$7;\n\nlet BuiltInRules;\n\nutil$6.awaitBuiltInRules(g => {\n  BuiltInRules = g;\n});\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\nlet lexifyCount;\n\npexprs$j.PExpr.prototype.assertAllApplicationsAreValid = function(ruleName, grammar) {\n  lexifyCount = 0;\n  this._assertAllApplicationsAreValid(ruleName, grammar);\n};\n\npexprs$j.PExpr.prototype._assertAllApplicationsAreValid = abstract(\n    '_assertAllApplicationsAreValid'\n);\n\npexprs$j.any._assertAllApplicationsAreValid =\n  pexprs$j.end._assertAllApplicationsAreValid =\n  pexprs$j.Terminal.prototype._assertAllApplicationsAreValid =\n  pexprs$j.Range.prototype._assertAllApplicationsAreValid =\n  pexprs$j.Param.prototype._assertAllApplicationsAreValid =\n  pexprs$j.UnicodeChar.prototype._assertAllApplicationsAreValid =\n    function(ruleName, grammar) {\n      // no-op\n    };\n\npexprs$j.Lex.prototype._assertAllApplicationsAreValid = function(ruleName, grammar) {\n  lexifyCount++;\n  this.expr._assertAllApplicationsAreValid(ruleName, grammar);\n  lexifyCount--;\n};\n\npexprs$j.Alt.prototype._assertAllApplicationsAreValid = function(ruleName, grammar) {\n  for (let idx = 0; idx < this.terms.length; idx++) {\n    this.terms[idx]._assertAllApplicationsAreValid(ruleName, grammar);\n  }\n};\n\npexprs$j.Seq.prototype._assertAllApplicationsAreValid = function(ruleName, grammar) {\n  for (let idx = 0; idx < this.factors.length; idx++) {\n    this.factors[idx]._assertAllApplicationsAreValid(ruleName, grammar);\n  }\n};\n\npexprs$j.Iter.prototype._assertAllApplicationsAreValid =\n  pexprs$j.Not.prototype._assertAllApplicationsAreValid =\n  pexprs$j.Lookahead.prototype._assertAllApplicationsAreValid =\n    function(ruleName, grammar) {\n      this.expr._assertAllApplicationsAreValid(ruleName, grammar);\n    };\n\npexprs$j.Apply.prototype._assertAllApplicationsAreValid = function(\n    ruleName,\n    grammar,\n    skipSyntacticCheck = false\n) {\n  const ruleInfo = grammar.rules[this.ruleName];\n  const isContextSyntactic = isSyntactic(ruleName) && lexifyCount === 0;\n\n  // Make sure that the rule exists...\n  if (!ruleInfo) {\n    throw errors$8.undeclaredRule(this.ruleName, grammar.name, this.source);\n  }\n\n  // ...and that this application is allowed\n  if (!skipSyntacticCheck && isSyntactic(this.ruleName) && !isContextSyntactic) {\n    throw errors$8.applicationOfSyntacticRuleFromLexicalContext(this.ruleName, this);\n  }\n\n  // ...and that this application has the correct number of arguments.\n  const actual = this.args.length;\n  const expected = ruleInfo.formals.length;\n  if (actual !== expected) {\n    throw errors$8.wrongNumberOfArguments(this.ruleName, expected, actual, this.source);\n  }\n\n  const isBuiltInApplySyntactic =\n    BuiltInRules && ruleInfo === BuiltInRules.rules.applySyntactic;\n  const isBuiltInCaseInsensitive =\n    BuiltInRules && ruleInfo === BuiltInRules.rules.caseInsensitive;\n\n  // If it's an application of 'caseInsensitive', ensure that the argument is a Terminal.\n  if (isBuiltInCaseInsensitive) {\n    if (!(this.args[0] instanceof pexprs$j.Terminal)) {\n      throw errors$8.incorrectArgumentType('a Terminal (e.g. \"abc\")', this.args[0]);\n    }\n  }\n\n  if (isBuiltInApplySyntactic) {\n    const arg = this.args[0];\n    if (!(arg instanceof pexprs$j.Apply)) {\n      throw errors$8.incorrectArgumentType('a syntactic rule application', arg);\n    }\n    if (!isSyntactic(arg.ruleName)) {\n      throw errors$8.applySyntacticWithLexicalRuleApplication(arg);\n    }\n    if (isContextSyntactic) {\n      throw errors$8.unnecessaryExperimentalApplySyntactic(this);\n    }\n  }\n\n  // ...and that all of the argument expressions only have valid applications and have arity 1.\n  // If `this` is an application of the built-in applySyntactic rule, then its arg is\n  // allowed (and expected) to be a syntactic rule, even if we're in a lexical context.\n  this.args.forEach(arg => {\n    arg._assertAllApplicationsAreValid(ruleName, grammar, isBuiltInApplySyntactic);\n    if (arg.getArity() !== 1) {\n      throw errors$8.invalidParameter(this.ruleName, arg);\n    }\n  });\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common$h = common$l;\nconst errors$7 = errors$9;\nconst pexprs$i = pexprsMain;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\npexprs$i.PExpr.prototype.assertChoicesHaveUniformArity = common$h.abstract(\n    'assertChoicesHaveUniformArity'\n);\n\npexprs$i.any.assertChoicesHaveUniformArity =\n  pexprs$i.end.assertChoicesHaveUniformArity =\n  pexprs$i.Terminal.prototype.assertChoicesHaveUniformArity =\n  pexprs$i.Range.prototype.assertChoicesHaveUniformArity =\n  pexprs$i.Param.prototype.assertChoicesHaveUniformArity =\n  pexprs$i.Lex.prototype.assertChoicesHaveUniformArity =\n  pexprs$i.UnicodeChar.prototype.assertChoicesHaveUniformArity =\n    function(ruleName) {\n      // no-op\n    };\n\npexprs$i.Alt.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  if (this.terms.length === 0) {\n    return;\n  }\n  const arity = this.terms[0].getArity();\n  for (let idx = 0; idx < this.terms.length; idx++) {\n    const term = this.terms[idx];\n    term.assertChoicesHaveUniformArity();\n    const otherArity = term.getArity();\n    if (arity !== otherArity) {\n      throw errors$7.inconsistentArity(ruleName, arity, otherArity, term);\n    }\n  }\n};\n\npexprs$i.Extend.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  // Extend is a special case of Alt that's guaranteed to have exactly two\n  // cases: [extensions, origBody].\n  const actualArity = this.terms[0].getArity();\n  const expectedArity = this.terms[1].getArity();\n  if (actualArity !== expectedArity) {\n    throw errors$7.inconsistentArity(ruleName, expectedArity, actualArity, this.terms[0]);\n  }\n};\n\npexprs$i.Seq.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  for (let idx = 0; idx < this.factors.length; idx++) {\n    this.factors[idx].assertChoicesHaveUniformArity(ruleName);\n  }\n};\n\npexprs$i.Iter.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  this.expr.assertChoicesHaveUniformArity(ruleName);\n};\n\npexprs$i.Not.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  // no-op (not required b/c the nested expr doesn't show up in the CST)\n};\n\npexprs$i.Lookahead.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  this.expr.assertChoicesHaveUniformArity(ruleName);\n};\n\npexprs$i.Apply.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  // The arities of the parameter expressions is required to be 1 by\n  // `assertAllApplicationsAreValid()`.\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common$g = common$l;\nconst errors$6 = errors$9;\nconst pexprs$h = pexprsMain;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\npexprs$h.PExpr.prototype.assertIteratedExprsAreNotNullable = common$g.abstract(\n    'assertIteratedExprsAreNotNullable'\n);\n\npexprs$h.any.assertIteratedExprsAreNotNullable =\n  pexprs$h.end.assertIteratedExprsAreNotNullable =\n  pexprs$h.Terminal.prototype.assertIteratedExprsAreNotNullable =\n  pexprs$h.Range.prototype.assertIteratedExprsAreNotNullable =\n  pexprs$h.Param.prototype.assertIteratedExprsAreNotNullable =\n  pexprs$h.UnicodeChar.prototype.assertIteratedExprsAreNotNullable =\n    function(grammar) {\n      // no-op\n    };\n\npexprs$h.Alt.prototype.assertIteratedExprsAreNotNullable = function(grammar) {\n  for (let idx = 0; idx < this.terms.length; idx++) {\n    this.terms[idx].assertIteratedExprsAreNotNullable(grammar);\n  }\n};\n\npexprs$h.Seq.prototype.assertIteratedExprsAreNotNullable = function(grammar) {\n  for (let idx = 0; idx < this.factors.length; idx++) {\n    this.factors[idx].assertIteratedExprsAreNotNullable(grammar);\n  }\n};\n\npexprs$h.Iter.prototype.assertIteratedExprsAreNotNullable = function(grammar) {\n  // Note: this is the implementation of this method for `Star` and `Plus` expressions.\n  // It is overridden for `Opt` below.\n  this.expr.assertIteratedExprsAreNotNullable(grammar);\n  if (this.expr.isNullable(grammar)) {\n    throw errors$6.kleeneExprHasNullableOperand(this, []);\n  }\n};\n\npexprs$h.Opt.prototype.assertIteratedExprsAreNotNullable =\n  pexprs$h.Not.prototype.assertIteratedExprsAreNotNullable =\n  pexprs$h.Lookahead.prototype.assertIteratedExprsAreNotNullable =\n  pexprs$h.Lex.prototype.assertIteratedExprsAreNotNullable =\n    function(grammar) {\n      this.expr.assertIteratedExprsAreNotNullable(grammar);\n    };\n\npexprs$h.Apply.prototype.assertIteratedExprsAreNotNullable = function(grammar) {\n  this.args.forEach(arg => {\n    arg.assertIteratedExprsAreNotNullable(grammar);\n  });\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst {assert: assert$2} = common$l;\nconst errors$5 = errors$9;\nconst util$5 = util$7;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction Interval$3(sourceString, startIdx, endIdx) {\n  this.sourceString = sourceString;\n  this.startIdx = startIdx;\n  this.endIdx = endIdx;\n}\n\nInterval$3.coverage = function(firstInterval, ...intervals) {\n  let {startIdx, endIdx} = firstInterval;\n  for (const interval of intervals) {\n    if (interval.sourceString !== firstInterval.sourceString) {\n      throw errors$5.intervalSourcesDontMatch();\n    } else {\n      startIdx = Math.min(startIdx, interval.startIdx);\n      endIdx = Math.max(endIdx, interval.endIdx);\n    }\n  }\n  return new Interval$3(firstInterval.sourceString, startIdx, endIdx);\n};\n\nInterval$3.prototype = {\n  coverageWith(...intervals) {\n    return Interval$3.coverage(...intervals, this);\n  },\n\n  collapsedLeft() {\n    return new Interval$3(this.sourceString, this.startIdx, this.startIdx);\n  },\n\n  collapsedRight() {\n    return new Interval$3(this.sourceString, this.endIdx, this.endIdx);\n  },\n\n  getLineAndColumn() {\n    return util$5.getLineAndColumn(this.sourceString, this.startIdx);\n  },\n\n  getLineAndColumnMessage() {\n    const range = [this.startIdx, this.endIdx];\n    return util$5.getLineAndColumnMessage(this.sourceString, this.startIdx, range);\n  },\n\n  // Returns an array of 0, 1, or 2 intervals that represents the result of the\n  // interval difference operation.\n  minus(that) {\n    if (this.sourceString !== that.sourceString) {\n      throw errors$5.intervalSourcesDontMatch();\n    } else if (this.startIdx === that.startIdx && this.endIdx === that.endIdx) {\n      // `this` and `that` are the same interval!\n      return [];\n    } else if (this.startIdx < that.startIdx && that.endIdx < this.endIdx) {\n      // `that` splits `this` into two intervals\n      return [\n        new Interval$3(this.sourceString, this.startIdx, that.startIdx),\n        new Interval$3(this.sourceString, that.endIdx, this.endIdx),\n      ];\n    } else if (this.startIdx < that.endIdx && that.endIdx < this.endIdx) {\n      // `that` contains a prefix of `this`\n      return [new Interval$3(this.sourceString, that.endIdx, this.endIdx)];\n    } else if (this.startIdx < that.startIdx && that.startIdx < this.endIdx) {\n      // `that` contains a suffix of `this`\n      return [new Interval$3(this.sourceString, this.startIdx, that.startIdx)];\n    } else {\n      // `that` and `this` do not overlap\n      return [this];\n    }\n  },\n\n  // Returns a new Interval that has the same extent as this one, but which is relative\n  // to `that`, an Interval that fully covers this one.\n  relativeTo(that) {\n    if (this.sourceString !== that.sourceString) {\n      throw errors$5.intervalSourcesDontMatch();\n    }\n    assert$2(\n        this.startIdx >= that.startIdx && this.endIdx <= that.endIdx,\n        'other interval does not cover this one'\n    );\n    return new Interval$3(\n        this.sourceString,\n        this.startIdx - that.startIdx,\n        this.endIdx - that.startIdx\n    );\n  },\n\n  // Returns a new Interval which contains the same contents as this one,\n  // but with whitespace trimmed from both ends.\n  trimmed() {\n    const {contents} = this;\n    const startIdx = this.startIdx + contents.match(/^\\s*/)[0].length;\n    const endIdx = this.endIdx - contents.match(/\\s*$/)[0].length;\n    return new Interval$3(this.sourceString, startIdx, endIdx);\n  },\n\n  subInterval(offset, len) {\n    const newStartIdx = this.startIdx + offset;\n    return new Interval$3(this.sourceString, newStartIdx, newStartIdx + len);\n  },\n};\n\nObject.defineProperties(Interval$3.prototype, {\n  contents: {\n    get() {\n      if (this._contents === undefined) {\n        this._contents = this.sourceString.slice(this.startIdx, this.endIdx);\n      }\n      return this._contents;\n    },\n    enumerable: true,\n  },\n  length: {\n    get() {\n      return this.endIdx - this.startIdx;\n    },\n    enumerable: true,\n  },\n});\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar Interval_1 = Interval$3;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst Interval$2 = Interval_1;\nconst common$f = common$l;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// Unicode characters that are used in the `toString` output.\nconst BALLOT_X = '\\u2717';\nconst CHECK_MARK = '\\u2713';\nconst DOT_OPERATOR = '\\u22C5';\nconst RIGHTWARDS_DOUBLE_ARROW = '\\u21D2';\nconst SYMBOL_FOR_HORIZONTAL_TABULATION = '\\u2409';\nconst SYMBOL_FOR_LINE_FEED = '\\u240A';\nconst SYMBOL_FOR_CARRIAGE_RETURN = '\\u240D';\n\nconst Flags = {\n  succeeded: 1 << 0,\n  isRootNode: 1 << 1,\n  isImplicitSpaces: 1 << 2,\n  isMemoized: 1 << 3,\n  isHeadOfLeftRecursion: 1 << 4,\n  terminatesLR: 1 << 5,\n};\n\nfunction spaces(n) {\n  return common$f.repeat(' ', n).join('');\n}\n\n// Return a string representation of a portion of `input` at offset `pos`.\n// The result will contain exactly `len` characters.\nfunction getInputExcerpt(input, pos, len) {\n  const excerpt = asEscapedString(input.slice(pos, pos + len));\n\n  // Pad the output if necessary.\n  if (excerpt.length < len) {\n    return excerpt + common$f.repeat(' ', len - excerpt.length).join('');\n  }\n  return excerpt;\n}\n\nfunction asEscapedString(obj) {\n  if (typeof obj === 'string') {\n    // Replace non-printable characters with visible symbols.\n    return obj\n        .replace(/ /g, DOT_OPERATOR)\n        .replace(/\\t/g, SYMBOL_FOR_HORIZONTAL_TABULATION)\n        .replace(/\\n/g, SYMBOL_FOR_LINE_FEED)\n        .replace(/\\r/g, SYMBOL_FOR_CARRIAGE_RETURN);\n  }\n  return String(obj);\n}\n\n// ----------------- Trace -----------------\n\nfunction Trace$2(input, pos1, pos2, expr, succeeded, bindings, optChildren) {\n  this.input = input;\n  this.pos = this.pos1 = pos1;\n  this.pos2 = pos2;\n  this.source = new Interval$2(input, pos1, pos2);\n  this.expr = expr;\n  this.bindings = bindings;\n  this.children = optChildren || [];\n  this.terminatingLREntry = null;\n\n  this._flags = succeeded ? Flags.succeeded : 0;\n}\n\n// A value that can be returned from visitor functions to indicate that a\n// node should not be recursed into.\nTrace$2.prototype.SKIP = {};\n\nObject.defineProperty(Trace$2.prototype, 'displayString', {\n  get() {\n    return this.expr.toDisplayString();\n  },\n});\n\n// For convenience, create a getter and setter for the boolean flags in `Flags`.\nObject.keys(Flags).forEach(name => {\n  const mask = Flags[name];\n  Object.defineProperty(Trace$2.prototype, name, {\n    get() {\n      return (this._flags & mask) !== 0;\n    },\n    set(val) {\n      if (val) {\n        this._flags |= mask;\n      } else {\n        this._flags &= ~mask;\n      }\n    },\n  });\n});\n\nTrace$2.prototype.clone = function() {\n  return this.cloneWithExpr(this.expr);\n};\n\nTrace$2.prototype.cloneWithExpr = function(expr) {\n  const ans = new Trace$2(\n      this.input,\n      this.pos,\n      this.pos2,\n      expr,\n      this.succeeded,\n      this.bindings,\n      this.children\n  );\n\n  ans.isHeadOfLeftRecursion = this.isHeadOfLeftRecursion;\n  ans.isImplicitSpaces = this.isImplicitSpaces;\n  ans.isMemoized = this.isMemoized;\n  ans.isRootNode = this.isRootNode;\n  ans.terminatesLR = this.terminatesLR;\n  ans.terminatingLREntry = this.terminatingLREntry;\n  return ans;\n};\n\n// Record the trace information for the terminating condition of the LR loop.\nTrace$2.prototype.recordLRTermination = function(ruleBodyTrace, value) {\n  this.terminatingLREntry = new Trace$2(\n      this.input,\n      this.pos,\n      this.pos2,\n      this.expr,\n      false,\n      [value],\n      [ruleBodyTrace]\n  );\n  this.terminatingLREntry.terminatesLR = true;\n};\n\n// Recursively traverse this trace node and all its descendents, calling a visitor function\n// for each node that is visited. If `vistorObjOrFn` is an object, then its 'enter' property\n// is a function to call before visiting the children of a node, and its 'exit' property is\n// a function to call afterwards. If `visitorObjOrFn` is a function, it represents the 'enter'\n// function.\n//\n// The functions are called with three arguments: the Trace node, its parent Trace, and a number\n// representing the depth of the node in the tree. (The root node has depth 0.) `optThisArg`, if\n// specified, is the value to use for `this` when executing the visitor functions.\nTrace$2.prototype.walk = function(visitorObjOrFn, optThisArg) {\n  let visitor = visitorObjOrFn;\n  if (typeof visitor === 'function') {\n    visitor = {enter: visitor};\n  }\n\n  function _walk(node, parent, depth) {\n    let recurse = true;\n    if (visitor.enter) {\n      if (visitor.enter.call(optThisArg, node, parent, depth) === Trace$2.prototype.SKIP) {\n        recurse = false;\n      }\n    }\n    if (recurse) {\n      node.children.forEach(child => {\n        _walk(child, node, depth + 1);\n      });\n      if (visitor.exit) {\n        visitor.exit.call(optThisArg, node, parent, depth);\n      }\n    }\n  }\n  if (this.isRootNode) {\n    // Don't visit the root node itself, only its children.\n    this.children.forEach(c => {\n      _walk(c, null, 0);\n    });\n  } else {\n    _walk(this, null, 0);\n  }\n};\n\n// Return a string representation of the trace.\n// Sample:\n//     12⋅+⋅2⋅*⋅3 ✓ exp ⇒  \"12\"\n//     12⋅+⋅2⋅*⋅3   ✓ addExp (LR) ⇒  \"12\"\n//     12⋅+⋅2⋅*⋅3       ✗ addExp_plus\nTrace$2.prototype.toString = function() {\n  const sb = new common$f.StringBuffer();\n  this.walk((node, parent, depth) => {\n    if (!node) {\n      return this.SKIP;\n    }\n    const ctorName = node.expr.constructor.name;\n    // Don't print anything for Alt nodes.\n    if (ctorName === 'Alt') {\n      return; // eslint-disable-line consistent-return\n    }\n    sb.append(getInputExcerpt(node.input, node.pos, 10) + spaces(depth * 2 + 1));\n    sb.append((node.succeeded ? CHECK_MARK : BALLOT_X) + ' ' + node.displayString);\n    if (node.isHeadOfLeftRecursion) {\n      sb.append(' (LR)');\n    }\n    if (node.succeeded) {\n      const contents = asEscapedString(node.source.contents);\n      sb.append(' ' + RIGHTWARDS_DOUBLE_ARROW + '  ');\n      sb.append(typeof contents === 'string' ? '\"' + contents + '\"' : contents);\n    }\n    sb.append('\\n');\n  });\n  return sb.contents();\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar Trace_1 = Trace$2;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst Trace$1 = Trace_1;\nconst common$e = common$l;\nconst errors$4 = errors$9;\nconst nodes = nodes$1;\nconst pexprs$g = pexprsMain;\n\nconst {TerminalNode: TerminalNode$1} = nodes;\nconst {NonterminalNode} = nodes;\nconst {IterationNode: IterationNode$1} = nodes;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Evaluate the expression and return `true` if it succeeds, `false` otherwise. This method should\n  only be called directly by `State.prototype.eval(expr)`, which also updates the data structures\n  that are used for tracing. (Making those updates in a method of `State` enables the trace-specific\n  data structures to be \"secrets\" of that class, which is good for modularity.)\n\n  The contract of this method is as follows:\n  * When the return value is `true`,\n    - the state object will have `expr.getArity()` more bindings than it did before the call.\n  * When the return value is `false`,\n    - the state object may have more bindings than it did before the call, and\n    - its input stream's position may be anywhere.\n\n  Note that `State.prototype.eval(expr)`, unlike this method, guarantees that neither the state\n  object's bindings nor its input stream's position will change if the expression fails to match.\n*/\npexprs$g.PExpr.prototype.eval = common$e.abstract('eval'); // function(state) { ... }\n\npexprs$g.any.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  const ch = inputStream.next();\n  if (ch) {\n    state.pushBinding(new TerminalNode$1(ch.length), origPos);\n    return true;\n  } else {\n    state.processFailure(origPos, this);\n    return false;\n  }\n};\n\npexprs$g.end.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  if (inputStream.atEnd()) {\n    state.pushBinding(new TerminalNode$1(0), origPos);\n    return true;\n  } else {\n    state.processFailure(origPos, this);\n    return false;\n  }\n};\n\npexprs$g.Terminal.prototype.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  if (!inputStream.matchString(this.obj)) {\n    state.processFailure(origPos, this);\n    return false;\n  } else {\n    state.pushBinding(new TerminalNode$1(this.obj.length), origPos);\n    return true;\n  }\n};\n\npexprs$g.Range.prototype.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n\n  // A range can operate in one of two modes: matching a single, 16-bit _code unit_,\n  // or matching a _code point_. (Code points over 0xFFFF take up two 16-bit code units.)\n  const cp = this.matchCodePoint ? inputStream.nextCodePoint() : inputStream.nextCharCode();\n\n  // Always compare by code point value to get the correct result in all scenarios.\n  // Note that for strings of length 1, codePointAt(0) and charPointAt(0) are equivalent.\n  if (cp !== undefined && this.from.codePointAt(0) <= cp && cp <= this.to.codePointAt(0)) {\n    state.pushBinding(new TerminalNode$1(String.fromCodePoint(cp).length), origPos);\n    return true;\n  } else {\n    state.processFailure(origPos, this);\n    return false;\n  }\n};\n\npexprs$g.Param.prototype.eval = function(state) {\n  return state.eval(state.currentApplication().args[this.index]);\n};\n\npexprs$g.Lex.prototype.eval = function(state) {\n  state.enterLexifiedContext();\n  const ans = state.eval(this.expr);\n  state.exitLexifiedContext();\n  return ans;\n};\n\npexprs$g.Alt.prototype.eval = function(state) {\n  for (let idx = 0; idx < this.terms.length; idx++) {\n    if (state.eval(this.terms[idx])) {\n      return true;\n    }\n  }\n  return false;\n};\n\npexprs$g.Seq.prototype.eval = function(state) {\n  for (let idx = 0; idx < this.factors.length; idx++) {\n    const factor = this.factors[idx];\n    if (!state.eval(factor)) {\n      return false;\n    }\n  }\n  return true;\n};\n\npexprs$g.Iter.prototype.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  const arity = this.getArity();\n  const cols = [];\n  const colOffsets = [];\n  while (cols.length < arity) {\n    cols.push([]);\n    colOffsets.push([]);\n  }\n\n  let numMatches = 0;\n  let prevPos = origPos;\n  let idx;\n  while (numMatches < this.maxNumMatches && state.eval(this.expr)) {\n    if (inputStream.pos === prevPos) {\n      throw errors$4.kleeneExprHasNullableOperand(this, state._applicationStack);\n    }\n    prevPos = inputStream.pos;\n    numMatches++;\n    const row = state._bindings.splice(state._bindings.length - arity, arity);\n    const rowOffsets = state._bindingOffsets.splice(\n        state._bindingOffsets.length - arity,\n        arity\n    );\n    for (idx = 0; idx < row.length; idx++) {\n      cols[idx].push(row[idx]);\n      colOffsets[idx].push(rowOffsets[idx]);\n    }\n  }\n  if (numMatches < this.minNumMatches) {\n    return false;\n  }\n  let offset = state.posToOffset(origPos);\n  let matchLength = 0;\n  if (numMatches > 0) {\n    const lastCol = cols[arity - 1];\n    const lastColOffsets = colOffsets[arity - 1];\n\n    const endOffset =\n      lastColOffsets[lastColOffsets.length - 1] + lastCol[lastCol.length - 1].matchLength;\n    offset = colOffsets[0][0];\n    matchLength = endOffset - offset;\n  }\n  const isOptional = this instanceof pexprs$g.Opt;\n  for (idx = 0; idx < cols.length; idx++) {\n    state._bindings.push(\n        new IterationNode$1(cols[idx], colOffsets[idx], matchLength, isOptional)\n    );\n    state._bindingOffsets.push(offset);\n  }\n  return true;\n};\n\npexprs$g.Not.prototype.eval = function(state) {\n  /*\n    TODO:\n    - Right now we're just throwing away all of the failures that happen inside a `not`, and\n      recording `this` as a failed expression.\n    - Double negation should be equivalent to lookahead, but that's not the case right now wrt\n      failures. E.g., ~~'foo' produces a failure for ~~'foo', but maybe it should produce\n      a failure for 'foo' instead.\n  */\n\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  state.pushFailuresInfo();\n\n  const ans = state.eval(this.expr);\n\n  state.popFailuresInfo();\n  if (ans) {\n    state.processFailure(origPos, this);\n    return false;\n  }\n\n  inputStream.pos = origPos;\n  return true;\n};\n\npexprs$g.Lookahead.prototype.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  if (state.eval(this.expr)) {\n    inputStream.pos = origPos;\n    return true;\n  } else {\n    return false;\n  }\n};\n\npexprs$g.Apply.prototype.eval = function(state) {\n  const caller = state.currentApplication();\n  const actuals = caller ? caller.args : [];\n  const app = this.substituteParams(actuals);\n\n  const posInfo = state.getCurrentPosInfo();\n  if (posInfo.isActive(app)) {\n    // This rule is already active at this position, i.e., it is left-recursive.\n    return app.handleCycle(state);\n  }\n\n  const memoKey = app.toMemoKey();\n  const memoRec = posInfo.memo[memoKey];\n\n  if (memoRec && posInfo.shouldUseMemoizedResult(memoRec)) {\n    if (state.hasNecessaryInfo(memoRec)) {\n      return state.useMemoizedResult(state.inputStream.pos, memoRec);\n    }\n    delete posInfo.memo[memoKey];\n  }\n  return app.reallyEval(state);\n};\n\npexprs$g.Apply.prototype.handleCycle = function(state) {\n  const posInfo = state.getCurrentPosInfo();\n  const {currentLeftRecursion} = posInfo;\n  const memoKey = this.toMemoKey();\n  let memoRec = posInfo.memo[memoKey];\n\n  if (currentLeftRecursion && currentLeftRecursion.headApplication.toMemoKey() === memoKey) {\n    // We already know about this left recursion, but it's possible there are \"involved\n    // applications\" that we don't already know about, so...\n    memoRec.updateInvolvedApplicationMemoKeys();\n  } else if (!memoRec) {\n    // New left recursion detected! Memoize a failure to try to get a seed parse.\n    memoRec = posInfo.memoize(memoKey, {\n      matchLength: 0,\n      examinedLength: 0,\n      value: false,\n      rightmostFailureOffset: -1,\n    });\n    posInfo.startLeftRecursion(this, memoRec);\n  }\n  return state.useMemoizedResult(state.inputStream.pos, memoRec);\n};\n\npexprs$g.Apply.prototype.reallyEval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  const origPosInfo = state.getCurrentPosInfo();\n  const ruleInfo = state.grammar.rules[this.ruleName];\n  const {body} = ruleInfo;\n  const {description} = ruleInfo;\n\n  state.enterApplication(origPosInfo, this);\n\n  if (description) {\n    state.pushFailuresInfo();\n  }\n\n  // Reset the input stream's examinedLength property so that we can track\n  // the examined length of this particular application.\n  const origInputStreamExaminedLength = inputStream.examinedLength;\n  inputStream.examinedLength = 0;\n\n  let value = this.evalOnce(body, state);\n  const currentLR = origPosInfo.currentLeftRecursion;\n  const memoKey = this.toMemoKey();\n  const isHeadOfLeftRecursion = currentLR && currentLR.headApplication.toMemoKey() === memoKey;\n  let memoRec;\n\n  if (isHeadOfLeftRecursion) {\n    value = this.growSeedResult(body, state, origPos, currentLR, value);\n    origPosInfo.endLeftRecursion();\n    memoRec = currentLR;\n    memoRec.examinedLength = inputStream.examinedLength - origPos;\n    memoRec.rightmostFailureOffset = state._getRightmostFailureOffset();\n    origPosInfo.memoize(memoKey, memoRec); // updates origPosInfo's maxExaminedLength\n  } else if (!currentLR || !currentLR.isInvolved(memoKey)) {\n    // This application is not involved in left recursion, so it's ok to memoize it.\n    memoRec = origPosInfo.memoize(memoKey, {\n      matchLength: inputStream.pos - origPos,\n      examinedLength: inputStream.examinedLength - origPos,\n      value,\n      failuresAtRightmostPosition: state.cloneRecordedFailures(),\n      rightmostFailureOffset: state._getRightmostFailureOffset(),\n    });\n  }\n  const succeeded = !!value;\n\n  if (description) {\n    state.popFailuresInfo();\n    if (!succeeded) {\n      state.processFailure(origPos, this);\n    }\n    if (memoRec) {\n      memoRec.failuresAtRightmostPosition = state.cloneRecordedFailures();\n    }\n  }\n\n  // Record trace information in the memo table, so that it is available if the memoized result\n  // is used later.\n  if (state.isTracing() && memoRec) {\n    const entry = state.getTraceEntry(origPos, this, succeeded, succeeded ? [value] : []);\n    if (isHeadOfLeftRecursion) {\n      common$e.assert(entry.terminatingLREntry != null || !succeeded);\n      entry.isHeadOfLeftRecursion = true;\n    }\n    memoRec.traceEntry = entry;\n  }\n\n  // Fix the input stream's examinedLength -- it should be the maximum examined length\n  // across all applications, not just this one.\n  inputStream.examinedLength = Math.max(\n      inputStream.examinedLength,\n      origInputStreamExaminedLength\n  );\n\n  state.exitApplication(origPosInfo, value);\n\n  return succeeded;\n};\n\npexprs$g.Apply.prototype.evalOnce = function(expr, state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n\n  if (state.eval(expr)) {\n    const arity = expr.getArity();\n    const bindings = state._bindings.splice(state._bindings.length - arity, arity);\n    const offsets = state._bindingOffsets.splice(state._bindingOffsets.length - arity, arity);\n    const matchLength = inputStream.pos - origPos;\n    return new NonterminalNode(this.ruleName, bindings, offsets, matchLength);\n  } else {\n    return false;\n  }\n};\n\npexprs$g.Apply.prototype.growSeedResult = function(body, state, origPos, lrMemoRec, newValue) {\n  if (!newValue) {\n    return false;\n  }\n\n  const {inputStream} = state;\n\n  while (true) {\n    lrMemoRec.matchLength = inputStream.pos - origPos;\n    lrMemoRec.value = newValue;\n    lrMemoRec.failuresAtRightmostPosition = state.cloneRecordedFailures();\n\n    if (state.isTracing()) {\n      // Before evaluating the body again, add a trace node for this application to the memo entry.\n      // Its only child is a copy of the trace node from `newValue`, which will always be the last\n      // element in `state.trace`.\n      const seedTrace = state.trace[state.trace.length - 1];\n      lrMemoRec.traceEntry = new Trace$1(\n          state.input,\n          origPos,\n          inputStream.pos,\n          this,\n          true,\n          [newValue],\n          [seedTrace.clone()]\n      );\n    }\n    inputStream.pos = origPos;\n    newValue = this.evalOnce(body, state);\n    if (inputStream.pos - origPos <= lrMemoRec.matchLength) {\n      break;\n    }\n    if (state.isTracing()) {\n      state.trace.splice(-2, 1); // Drop the trace for the old seed.\n    }\n  }\n  if (state.isTracing()) {\n    // The last entry is for an unused result -- pop it and save it in the \"real\" entry.\n    lrMemoRec.traceEntry.recordLRTermination(state.trace.pop(), newValue);\n  }\n  inputStream.pos = origPos + lrMemoRec.matchLength;\n  return lrMemoRec.value;\n};\n\npexprs$g.UnicodeChar.prototype.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  const ch = inputStream.next();\n  if (ch && this.pattern.test(ch)) {\n    state.pushBinding(new TerminalNode$1(ch.length), origPos);\n    return true;\n  } else {\n    state.processFailure(origPos, this);\n    return false;\n  }\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common$d = common$l;\nconst pexprs$f = pexprsMain;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\npexprs$f.PExpr.prototype.getArity = common$d.abstract('getArity');\n\npexprs$f.any.getArity =\n  pexprs$f.end.getArity =\n  pexprs$f.Terminal.prototype.getArity =\n  pexprs$f.Range.prototype.getArity =\n  pexprs$f.Param.prototype.getArity =\n  pexprs$f.Apply.prototype.getArity =\n  pexprs$f.UnicodeChar.prototype.getArity =\n    function() {\n      return 1;\n    };\n\npexprs$f.Alt.prototype.getArity = function() {\n  // This is ok b/c all terms must have the same arity -- this property is\n  // checked by the Grammar constructor.\n  return this.terms.length === 0 ? 0 : this.terms[0].getArity();\n};\n\npexprs$f.Seq.prototype.getArity = function() {\n  let arity = 0;\n  for (let idx = 0; idx < this.factors.length; idx++) {\n    arity += this.factors[idx].getArity();\n  }\n  return arity;\n};\n\npexprs$f.Iter.prototype.getArity = function() {\n  return this.expr.getArity();\n};\n\npexprs$f.Not.prototype.getArity = function() {\n  return 0;\n};\n\npexprs$f.Lookahead.prototype.getArity = pexprs$f.Lex.prototype.getArity = function() {\n  return this.expr.getArity();\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common$c = common$l;\nconst pexprs$e = pexprsMain;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction getMetaInfo(expr, grammarInterval) {\n  const metaInfo = {};\n  if (expr.source && grammarInterval) {\n    const adjusted = expr.source.relativeTo(grammarInterval);\n    metaInfo.sourceInterval = [adjusted.startIdx, adjusted.endIdx];\n  }\n  return metaInfo;\n}\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\npexprs$e.PExpr.prototype.outputRecipe = common$c.abstract('outputRecipe');\n\npexprs$e.any.outputRecipe = function(formals, grammarInterval) {\n  return ['any', getMetaInfo(this, grammarInterval)];\n};\n\npexprs$e.end.outputRecipe = function(formals, grammarInterval) {\n  return ['end', getMetaInfo(this, grammarInterval)];\n};\n\npexprs$e.Terminal.prototype.outputRecipe = function(formals, grammarInterval) {\n  return ['terminal', getMetaInfo(this, grammarInterval), this.obj];\n};\n\npexprs$e.Range.prototype.outputRecipe = function(formals, grammarInterval) {\n  return ['range', getMetaInfo(this, grammarInterval), this.from, this.to];\n};\n\npexprs$e.Param.prototype.outputRecipe = function(formals, grammarInterval) {\n  return ['param', getMetaInfo(this, grammarInterval), this.index];\n};\n\npexprs$e.Alt.prototype.outputRecipe = function(formals, grammarInterval) {\n  return ['alt', getMetaInfo(this, grammarInterval)].concat(\n      this.terms.map(term => term.outputRecipe(formals, grammarInterval))\n  );\n};\n\npexprs$e.Extend.prototype.outputRecipe = function(formals, grammarInterval) {\n  const extension = this.terms[0]; // [extension, original]\n  return extension.outputRecipe(formals, grammarInterval);\n};\n\npexprs$e.Splice.prototype.outputRecipe = function(formals, grammarInterval) {\n  const beforeTerms = this.terms.slice(0, this.expansionPos);\n  const afterTerms = this.terms.slice(this.expansionPos + 1);\n  return [\n    'splice',\n    getMetaInfo(this, grammarInterval),\n    beforeTerms.map(term => term.outputRecipe(formals, grammarInterval)),\n    afterTerms.map(term => term.outputRecipe(formals, grammarInterval)),\n  ];\n};\n\npexprs$e.Seq.prototype.outputRecipe = function(formals, grammarInterval) {\n  return ['seq', getMetaInfo(this, grammarInterval)].concat(\n      this.factors.map(factor => factor.outputRecipe(formals, grammarInterval))\n  );\n};\n\npexprs$e.Star.prototype.outputRecipe =\n  pexprs$e.Plus.prototype.outputRecipe =\n  pexprs$e.Opt.prototype.outputRecipe =\n  pexprs$e.Not.prototype.outputRecipe =\n  pexprs$e.Lookahead.prototype.outputRecipe =\n  pexprs$e.Lex.prototype.outputRecipe =\n    function(formals, grammarInterval) {\n      return [\n        this.constructor.name.toLowerCase(),\n        getMetaInfo(this, grammarInterval),\n        this.expr.outputRecipe(formals, grammarInterval),\n      ];\n    };\n\npexprs$e.Apply.prototype.outputRecipe = function(formals, grammarInterval) {\n  return [\n    'app',\n    getMetaInfo(this, grammarInterval),\n    this.ruleName,\n    this.args.map(arg => arg.outputRecipe(formals, grammarInterval)),\n  ];\n};\n\npexprs$e.UnicodeChar.prototype.outputRecipe = function(formals, grammarInterval) {\n  return ['unicodeChar', getMetaInfo(this, grammarInterval), this.category];\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common$b = common$l;\nconst pexprs$d = pexprsMain;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Called at grammar creation time to rewrite a rule body, replacing each reference to a formal\n  parameter with a `Param` node. Returns a PExpr -- either a new one, or the original one if\n  it was modified in place.\n*/\npexprs$d.PExpr.prototype.introduceParams = common$b.abstract('introduceParams');\n\npexprs$d.any.introduceParams =\n  pexprs$d.end.introduceParams =\n  pexprs$d.Terminal.prototype.introduceParams =\n  pexprs$d.Range.prototype.introduceParams =\n  pexprs$d.Param.prototype.introduceParams =\n  pexprs$d.UnicodeChar.prototype.introduceParams =\n    function(formals) {\n      return this;\n    };\n\npexprs$d.Alt.prototype.introduceParams = function(formals) {\n  this.terms.forEach((term, idx, terms) => {\n    terms[idx] = term.introduceParams(formals);\n  });\n  return this;\n};\n\npexprs$d.Seq.prototype.introduceParams = function(formals) {\n  this.factors.forEach((factor, idx, factors) => {\n    factors[idx] = factor.introduceParams(formals);\n  });\n  return this;\n};\n\npexprs$d.Iter.prototype.introduceParams =\n  pexprs$d.Not.prototype.introduceParams =\n  pexprs$d.Lookahead.prototype.introduceParams =\n  pexprs$d.Lex.prototype.introduceParams =\n    function(formals) {\n      this.expr = this.expr.introduceParams(formals);\n      return this;\n    };\n\npexprs$d.Apply.prototype.introduceParams = function(formals) {\n  const index = formals.indexOf(this.ruleName);\n  if (index >= 0) {\n    if (this.args.length > 0) {\n      // TODO: Should this be supported? See issue #64.\n      throw new Error('Parameterized rules cannot be passed as arguments to another rule.');\n    }\n    return new pexprs$d.Param(index).withSource(this.source);\n  } else {\n    this.args.forEach((arg, idx, args) => {\n      args[idx] = arg.introduceParams(formals);\n    });\n    return this;\n  }\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common$a = common$l;\nconst pexprs$c = pexprsMain;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n// Returns `true` if this parsing expression may accept without consuming any input.\npexprs$c.PExpr.prototype.isNullable = function(grammar) {\n  return this._isNullable(grammar, Object.create(null));\n};\n\npexprs$c.PExpr.prototype._isNullable = common$a.abstract('_isNullable');\n\npexprs$c.any._isNullable =\n  pexprs$c.Range.prototype._isNullable =\n  pexprs$c.Param.prototype._isNullable =\n  pexprs$c.Plus.prototype._isNullable =\n  pexprs$c.UnicodeChar.prototype._isNullable =\n    function(grammar, memo) {\n      return false;\n    };\n\npexprs$c.end._isNullable = function(grammar, memo) {\n  return true;\n};\n\npexprs$c.Terminal.prototype._isNullable = function(grammar, memo) {\n  if (typeof this.obj === 'string') {\n    // This is an over-simplification: it's only correct if the input is a string. If it's an array\n    // or an object, then the empty string parsing expression is not nullable.\n    return this.obj === '';\n  } else {\n    return false;\n  }\n};\n\npexprs$c.Alt.prototype._isNullable = function(grammar, memo) {\n  return this.terms.length === 0 || this.terms.some(term => term._isNullable(grammar, memo));\n};\n\npexprs$c.Seq.prototype._isNullable = function(grammar, memo) {\n  return this.factors.every(factor => factor._isNullable(grammar, memo));\n};\n\npexprs$c.Star.prototype._isNullable =\n  pexprs$c.Opt.prototype._isNullable =\n  pexprs$c.Not.prototype._isNullable =\n  pexprs$c.Lookahead.prototype._isNullable =\n    function(grammar, memo) {\n      return true;\n    };\n\npexprs$c.Lex.prototype._isNullable = function(grammar, memo) {\n  return this.expr._isNullable(grammar, memo);\n};\n\npexprs$c.Apply.prototype._isNullable = function(grammar, memo) {\n  const key = this.toMemoKey();\n  if (!Object.prototype.hasOwnProperty.call(memo, key)) {\n    const {body} = grammar.rules[this.ruleName];\n    const inlined = body.substituteParams(this.args);\n    memo[key] = false; // Prevent infinite recursion for recursive rules.\n    memo[key] = inlined._isNullable(grammar, memo);\n  }\n  return memo[key];\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common$9 = common$l;\nconst pexprs$b = pexprsMain;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Returns a PExpr that results from recursively replacing every formal parameter (i.e., instance\n  of `Param`) inside this PExpr with its actual value from `actuals` (an Array).\n\n  The receiver must not be modified; a new PExpr must be returned if any replacement is necessary.\n*/\n// function(actuals) { ... }\npexprs$b.PExpr.prototype.substituteParams = common$9.abstract('substituteParams');\n\npexprs$b.any.substituteParams =\n  pexprs$b.end.substituteParams =\n  pexprs$b.Terminal.prototype.substituteParams =\n  pexprs$b.Range.prototype.substituteParams =\n  pexprs$b.UnicodeChar.prototype.substituteParams =\n    function(actuals) {\n      return this;\n    };\n\npexprs$b.Param.prototype.substituteParams = function(actuals) {\n  return actuals[this.index];\n};\n\npexprs$b.Alt.prototype.substituteParams = function(actuals) {\n  return new pexprs$b.Alt(this.terms.map(term => term.substituteParams(actuals)));\n};\n\npexprs$b.Seq.prototype.substituteParams = function(actuals) {\n  return new pexprs$b.Seq(this.factors.map(factor => factor.substituteParams(actuals)));\n};\n\npexprs$b.Iter.prototype.substituteParams =\n  pexprs$b.Not.prototype.substituteParams =\n  pexprs$b.Lookahead.prototype.substituteParams =\n  pexprs$b.Lex.prototype.substituteParams =\n    function(actuals) {\n      return new this.constructor(this.expr.substituteParams(actuals));\n    };\n\npexprs$b.Apply.prototype.substituteParams = function(actuals) {\n  if (this.args.length === 0) {\n    // Avoid making a copy of this application, as an optimization\n    return this;\n  } else {\n    const args = this.args.map(arg => arg.substituteParams(actuals));\n    return new pexprs$b.Apply(this.ruleName, args);\n  }\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common$8 = common$l;\nconst pexprs$a = pexprsMain;\n\nconst {copyWithoutDuplicates} = common$8;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction isRestrictedJSIdentifier(str) {\n  return /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(str);\n}\n\nfunction resolveDuplicatedNames(argumentNameList) {\n  // `count` is used to record the number of times each argument name occurs in the list,\n  // this is useful for checking duplicated argument name. It maps argument names to ints.\n  const count = Object.create(null);\n  argumentNameList.forEach(argName => {\n    count[argName] = (count[argName] || 0) + 1;\n  });\n\n  // Append subscripts ('_1', '_2', ...) to duplicate argument names.\n  Object.keys(count).forEach(dupArgName => {\n    if (count[dupArgName] <= 1) {\n      return;\n    }\n\n    // This name shows up more than once, so add subscripts.\n    let subscript = 1;\n    argumentNameList.forEach((argName, idx) => {\n      if (argName === dupArgName) {\n        argumentNameList[idx] = argName + '_' + subscript++;\n      }\n    });\n  });\n}\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Returns a list of strings that will be used as the default argument names for its receiver\n  (a pexpr) in a semantic action. This is used exclusively by the Semantics Editor.\n\n  `firstArgIndex` is the 1-based index of the first argument name that will be generated for this\n  pexpr. It enables us to name arguments positionally, e.g., if the second argument is a\n  non-alphanumeric terminal like \"+\", it will be named '$2'.\n\n  `noDupCheck` is true if the caller of `toArgumentNameList` is not a top level caller. It enables\n  us to avoid nested duplication subscripts appending, e.g., '_1_1', '_1_2', by only checking\n  duplicates at the top level.\n\n  Here is a more elaborate example that illustrates how this method works:\n  `(a \"+\" b).toArgumentNameList(1)` evaluates to `['a', '$2', 'b']` with the following recursive\n  calls:\n\n    (a).toArgumentNameList(1) -> ['a'],\n    (\"+\").toArgumentNameList(2) -> ['$2'],\n    (b).toArgumentNameList(3) -> ['b']\n\n  Notes:\n  * This method must only be called on well-formed expressions, e.g., the receiver must\n    not have any Alt sub-expressions with inconsistent arities.\n  * e.getArity() === e.toArgumentNameList(1).length\n*/\n// function(firstArgIndex, noDupCheck) { ... }\npexprs$a.PExpr.prototype.toArgumentNameList = common$8.abstract('toArgumentNameList');\n\npexprs$a.any.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return ['any'];\n};\n\npexprs$a.end.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return ['end'];\n};\n\npexprs$a.Terminal.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  if (typeof this.obj === 'string' && /^[_a-zA-Z0-9]+$/.test(this.obj)) {\n    // If this terminal is a valid suffix for a JS identifier, just prepend it with '_'\n    return ['_' + this.obj];\n  } else {\n    // Otherwise, name it positionally.\n    return ['$' + firstArgIndex];\n  }\n};\n\npexprs$a.Range.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  let argName = this.from + '_to_' + this.to;\n  // If the `argName` is not valid then try to prepend a `_`.\n  if (!isRestrictedJSIdentifier(argName)) {\n    argName = '_' + argName;\n  }\n  // If the `argName` still not valid after prepending a `_`, then name it positionally.\n  if (!isRestrictedJSIdentifier(argName)) {\n    argName = '$' + firstArgIndex;\n  }\n  return [argName];\n};\n\npexprs$a.Alt.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  // `termArgNameLists` is an array of arrays where each row is the\n  // argument name list that corresponds to a term in this alternation.\n  const termArgNameLists = this.terms.map(term =>\n    term.toArgumentNameList(firstArgIndex, true)\n  );\n\n  const argumentNameList = [];\n  const numArgs = termArgNameLists[0].length;\n  for (let colIdx = 0; colIdx < numArgs; colIdx++) {\n    const col = [];\n    for (let rowIdx = 0; rowIdx < this.terms.length; rowIdx++) {\n      col.push(termArgNameLists[rowIdx][colIdx]);\n    }\n    const uniqueNames = copyWithoutDuplicates(col);\n    argumentNameList.push(uniqueNames.join('_or_'));\n  }\n\n  if (!noDupCheck) {\n    resolveDuplicatedNames(argumentNameList);\n  }\n  return argumentNameList;\n};\n\npexprs$a.Seq.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  // Generate the argument name list, without worrying about duplicates.\n  let argumentNameList = [];\n  this.factors.forEach(factor => {\n    const factorArgumentNameList = factor.toArgumentNameList(firstArgIndex, true);\n    argumentNameList = argumentNameList.concat(factorArgumentNameList);\n\n    // Shift the firstArgIndex to take this factor's argument names into account.\n    firstArgIndex += factorArgumentNameList.length;\n  });\n  if (!noDupCheck) {\n    resolveDuplicatedNames(argumentNameList);\n  }\n  return argumentNameList;\n};\n\npexprs$a.Iter.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  const argumentNameList = this.expr\n      .toArgumentNameList(firstArgIndex, noDupCheck)\n      .map(exprArgumentString =>\n      exprArgumentString[exprArgumentString.length - 1] === 's' ?\n        exprArgumentString + 'es' :\n        exprArgumentString + 's'\n      );\n  if (!noDupCheck) {\n    resolveDuplicatedNames(argumentNameList);\n  }\n  return argumentNameList;\n};\n\npexprs$a.Opt.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return this.expr.toArgumentNameList(firstArgIndex, noDupCheck).map(argName => {\n    return 'opt' + argName[0].toUpperCase() + argName.slice(1);\n  });\n};\n\npexprs$a.Not.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return [];\n};\n\npexprs$a.Lookahead.prototype.toArgumentNameList = pexprs$a.Lex.prototype.toArgumentNameList =\n  function(firstArgIndex, noDupCheck) {\n    return this.expr.toArgumentNameList(firstArgIndex, noDupCheck);\n  };\n\npexprs$a.Apply.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return [this.ruleName];\n};\n\npexprs$a.UnicodeChar.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return ['$' + firstArgIndex];\n};\n\npexprs$a.Param.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return ['param' + this.index];\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common$7 = common$l;\nconst pexprs$9 = pexprsMain;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n// Returns a string representing the PExpr, for use as a UI label, etc.\npexprs$9.PExpr.prototype.toDisplayString = common$7.abstract('toDisplayString');\n\npexprs$9.Alt.prototype.toDisplayString = pexprs$9.Seq.prototype.toDisplayString = function() {\n  if (this.source) {\n    return this.source.trimmed().contents;\n  }\n  return '[' + this.constructor.name + ']';\n};\n\npexprs$9.any.toDisplayString =\n  pexprs$9.end.toDisplayString =\n  pexprs$9.Iter.prototype.toDisplayString =\n  pexprs$9.Not.prototype.toDisplayString =\n  pexprs$9.Lookahead.prototype.toDisplayString =\n  pexprs$9.Lex.prototype.toDisplayString =\n  pexprs$9.Terminal.prototype.toDisplayString =\n  pexprs$9.Range.prototype.toDisplayString =\n  pexprs$9.Param.prototype.toDisplayString =\n    function() {\n      return this.toString();\n    };\n\npexprs$9.Apply.prototype.toDisplayString = function() {\n  if (this.args.length > 0) {\n    const ps = this.args.map(arg => arg.toDisplayString());\n    return this.ruleName + '<' + ps.join(',') + '>';\n  } else {\n    return this.ruleName;\n  }\n};\n\npexprs$9.UnicodeChar.prototype.toDisplayString = function() {\n  return 'Unicode [' + this.category + '] character';\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst Failure$1 = Failure_1;\nconst common$6 = common$l;\nconst pexprs$8 = pexprsMain;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\npexprs$8.PExpr.prototype.toFailure = common$6.abstract('toFailure');\n\npexprs$8.any.toFailure = function(grammar) {\n  return new Failure$1(this, 'any object', 'description');\n};\n\npexprs$8.end.toFailure = function(grammar) {\n  return new Failure$1(this, 'end of input', 'description');\n};\n\npexprs$8.Terminal.prototype.toFailure = function(grammar) {\n  return new Failure$1(this, this.obj, 'string');\n};\n\npexprs$8.Range.prototype.toFailure = function(grammar) {\n  // TODO: come up with something better\n  return new Failure$1(this, JSON.stringify(this.from) + '..' + JSON.stringify(this.to), 'code');\n};\n\npexprs$8.Not.prototype.toFailure = function(grammar) {\n  const description =\n    this.expr === pexprs$8.any ? 'nothing' : 'not ' + this.expr.toFailure(grammar);\n  return new Failure$1(this, description, 'description');\n};\n\npexprs$8.Lookahead.prototype.toFailure = function(grammar) {\n  return this.expr.toFailure(grammar);\n};\n\npexprs$8.Apply.prototype.toFailure = function(grammar) {\n  let {description} = grammar.rules[this.ruleName];\n  if (!description) {\n    const article = /^[aeiouAEIOU]/.test(this.ruleName) ? 'an' : 'a';\n    description = article + ' ' + this.ruleName;\n  }\n  return new Failure$1(this, description, 'description');\n};\n\npexprs$8.UnicodeChar.prototype.toFailure = function(grammar) {\n  return new Failure$1(this, 'a Unicode [' + this.category + '] character', 'description');\n};\n\npexprs$8.Alt.prototype.toFailure = function(grammar) {\n  const fs = this.terms.map(t => t.toFailure(grammar));\n  const description = '(' + fs.join(' or ') + ')';\n  return new Failure$1(this, description, 'description');\n};\n\npexprs$8.Seq.prototype.toFailure = function(grammar) {\n  const fs = this.factors.map(f => f.toFailure(grammar));\n  const description = '(' + fs.join(' ') + ')';\n  return new Failure$1(this, description, 'description');\n};\n\npexprs$8.Iter.prototype.toFailure = function(grammar) {\n  const description = '(' + this.expr.toFailure(grammar) + this.operator + ')';\n  return new Failure$1(this, description, 'description');\n};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common$5 = common$l;\nconst pexprs$7 = pexprsMain;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  e1.toString() === e2.toString() ==> e1 and e2 are semantically equivalent.\n  Note that this is not an iff (<==>): e.g.,\n  (~\"b\" \"a\").toString() !== (\"a\").toString(), even though\n  ~\"b\" \"a\" and \"a\" are interchangeable in any grammar,\n  both in terms of the languages they accept and their arities.\n*/\npexprs$7.PExpr.prototype.toString = common$5.abstract('toString');\n\npexprs$7.any.toString = function() {\n  return 'any';\n};\n\npexprs$7.end.toString = function() {\n  return 'end';\n};\n\npexprs$7.Terminal.prototype.toString = function() {\n  return JSON.stringify(this.obj);\n};\n\npexprs$7.Range.prototype.toString = function() {\n  return JSON.stringify(this.from) + '..' + JSON.stringify(this.to);\n};\n\npexprs$7.Param.prototype.toString = function() {\n  return '$' + this.index;\n};\n\npexprs$7.Lex.prototype.toString = function() {\n  return '#(' + this.expr.toString() + ')';\n};\n\npexprs$7.Alt.prototype.toString = function() {\n  return this.terms.length === 1 ?\n    this.terms[0].toString() :\n    '(' + this.terms.map(term => term.toString()).join(' | ') + ')';\n};\n\npexprs$7.Seq.prototype.toString = function() {\n  return this.factors.length === 1 ?\n    this.factors[0].toString() :\n    '(' + this.factors.map(factor => factor.toString()).join(' ') + ')';\n};\n\npexprs$7.Iter.prototype.toString = function() {\n  return this.expr + this.operator;\n};\n\npexprs$7.Not.prototype.toString = function() {\n  return '~' + this.expr;\n};\n\npexprs$7.Lookahead.prototype.toString = function() {\n  return '&' + this.expr;\n};\n\npexprs$7.Apply.prototype.toString = function() {\n  if (this.args.length > 0) {\n    const ps = this.args.map(arg => arg.toString());\n    return this.ruleName + '<' + ps.join(',') + '>';\n  } else {\n    return this.ruleName;\n  }\n};\n\npexprs$7.UnicodeChar.prototype.toString = function() {\n  return '\\\\p{' + this.category + '}';\n};\n\n// --------------------------------------------------------------------\n// Re-export classes\n// --------------------------------------------------------------------\n\nvar pexprs$6 = pexprsMain;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst Failure = Failure_1;\nconst {TerminalNode} = nodes$1;\nconst {assert: assert$1} = common$l;\nconst {PExpr, Terminal} = pexprs$6;\n\nclass CaseInsensitiveTerminal$1 extends PExpr {\n  constructor(param) {\n    super();\n    this.obj = param;\n  }\n\n  _getString(state) {\n    const terminal = state.currentApplication().args[this.obj.index];\n    assert$1(terminal instanceof Terminal, 'expected a Terminal expression');\n    return terminal.obj;\n  }\n\n  // Implementation of the PExpr API\n\n  allowsSkippingPrecedingSpace() {\n    return true;\n  }\n\n  eval(state) {\n    const {inputStream} = state;\n    const origPos = inputStream.pos;\n    const matchStr = this._getString(state);\n    if (!inputStream.matchString(matchStr, true)) {\n      state.processFailure(origPos, this);\n      return false;\n    } else {\n      state.pushBinding(new TerminalNode(matchStr.length), origPos);\n      return true;\n    }\n  }\n\n  getArity() {\n    return 1;\n  }\n\n  substituteParams(actuals) {\n    return new CaseInsensitiveTerminal$1(this.obj.substituteParams(actuals));\n  }\n\n  toDisplayString() {\n    return this.obj.toDisplayString() + ' (case-insensitive)';\n  }\n\n  toFailure(grammar) {\n    return new Failure(\n        this,\n        this.obj.toFailure(grammar) + ' (case-insensitive)',\n        'description'\n    );\n  }\n\n  _isNullable(grammar, memo) {\n    return this.obj._isNullable(grammar, memo);\n  }\n}\n\nvar CaseInsensitiveTerminal_1 = CaseInsensitiveTerminal$1;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst Interval$1 = Interval_1;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction InputStream$3(source) {\n  this.source = source;\n  this.pos = 0;\n  this.examinedLength = 0;\n}\n\nInputStream$3.prototype = {\n  atEnd() {\n    const ans = this.pos === this.source.length;\n    this.examinedLength = Math.max(this.examinedLength, this.pos + 1);\n    return ans;\n  },\n\n  next() {\n    const ans = this.source[this.pos++];\n    this.examinedLength = Math.max(this.examinedLength, this.pos);\n    return ans;\n  },\n\n  nextCharCode() {\n    const nextChar = this.next();\n    return nextChar && nextChar.charCodeAt(0);\n  },\n\n  nextCodePoint() {\n    const cp = this.source.slice(this.pos++).codePointAt(0);\n    // If the code point is beyond plane 0, it takes up two characters.\n    if (cp > 0xffff) {\n      this.pos += 1;\n    }\n    this.examinedLength = Math.max(this.examinedLength, this.pos);\n    return cp;\n  },\n\n  matchString(s, optIgnoreCase) {\n    let idx;\n    if (optIgnoreCase) {\n      /*\n        Case-insensitive comparison is a tricky business. Some notable gotchas include the\n        \"Turkish I\" problem (http://www.i18nguy.com/unicode/turkish-i18n.html) and the fact\n        that the German Esszet (ß) turns into \"SS\" in upper case.\n\n        This is intended to be a locale-invariant comparison, which means it may not obey\n        locale-specific expectations (e.g. \"i\" => \"İ\").\n       */\n      for (idx = 0; idx < s.length; idx++) {\n        const actual = this.next();\n        const expected = s[idx];\n        if (actual == null || actual.toUpperCase() !== expected.toUpperCase()) {\n          return false;\n        }\n      }\n      return true;\n    }\n    // Default is case-sensitive comparison.\n    for (idx = 0; idx < s.length; idx++) {\n      if (this.next() !== s[idx]) {\n        return false;\n      }\n    }\n    return true;\n  },\n\n  sourceSlice(startIdx, endIdx) {\n    return this.source.slice(startIdx, endIdx);\n  },\n\n  interval(startIdx, optEndIdx) {\n    return new Interval$1(this.source, startIdx, optEndIdx ? optEndIdx : this.pos);\n  },\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar InputStream_1 = InputStream$3;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst common$4 = common$l;\nconst util$4 = util$7;\nconst Interval = Interval_1;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction MatchResult$2(\n    matcher,\n    input,\n    startExpr,\n    cst,\n    cstOffset,\n    rightmostFailurePosition,\n    optRecordedFailures\n) {\n  this.matcher = matcher;\n  this.input = input;\n  this.startExpr = startExpr;\n  this._cst = cst;\n  this._cstOffset = cstOffset;\n  this._rightmostFailurePosition = rightmostFailurePosition;\n  this._rightmostFailures = optRecordedFailures;\n\n  if (this.failed()) {\n    /* eslint-disable no-invalid-this */\n    common$4.defineLazyProperty(this, 'message', function() {\n      const detail = 'Expected ' + this.getExpectedText();\n      return (\n        util$4.getLineAndColumnMessage(this.input, this.getRightmostFailurePosition()) + detail\n      );\n    });\n    common$4.defineLazyProperty(this, 'shortMessage', function() {\n      const detail = 'expected ' + this.getExpectedText();\n      const errorInfo = util$4.getLineAndColumn(this.input, this.getRightmostFailurePosition());\n      return 'Line ' + errorInfo.lineNum + ', col ' + errorInfo.colNum + ': ' + detail;\n    });\n    /* eslint-enable no-invalid-this */\n  }\n}\n\nMatchResult$2.prototype.succeeded = function() {\n  return !!this._cst;\n};\n\nMatchResult$2.prototype.failed = function() {\n  return !this.succeeded();\n};\n\nMatchResult$2.prototype.getRightmostFailurePosition = function() {\n  return this._rightmostFailurePosition;\n};\n\nMatchResult$2.prototype.getRightmostFailures = function() {\n  if (!this._rightmostFailures) {\n    this.matcher.setInput(this.input);\n    const matchResultWithFailures = this.matcher._match(\n        this.startExpr,\n        false,\n        this.getRightmostFailurePosition()\n    );\n    this._rightmostFailures = matchResultWithFailures.getRightmostFailures();\n  }\n  return this._rightmostFailures;\n};\n\nMatchResult$2.prototype.toString = function() {\n  return this.succeeded() ?\n    '[match succeeded]' :\n    '[match failed at position ' + this.getRightmostFailurePosition() + ']';\n};\n\n// Return a string summarizing the expected contents of the input stream when\n// the match failure occurred.\nMatchResult$2.prototype.getExpectedText = function() {\n  if (this.succeeded()) {\n    throw new Error('cannot get expected text of a successful MatchResult');\n  }\n\n  const sb = new common$4.StringBuffer();\n  let failures = this.getRightmostFailures();\n\n  // Filter out the fluffy failures to make the default error messages more useful\n  failures = failures.filter(failure => !failure.isFluffy());\n\n  for (let idx = 0; idx < failures.length; idx++) {\n    if (idx > 0) {\n      if (idx === failures.length - 1) {\n        sb.append(failures.length > 2 ? ', or ' : ' or ');\n      } else {\n        sb.append(', ');\n      }\n    }\n    sb.append(failures[idx].toString());\n  }\n  return sb.contents();\n};\n\nMatchResult$2.prototype.getInterval = function() {\n  const pos = this.getRightmostFailurePosition();\n  return new Interval(this.input, pos, pos);\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar MatchResult_1 = MatchResult$2;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction PosInfo$1() {\n  this.applicationMemoKeyStack = []; // active applications at this position\n  this.memo = {};\n  this.maxExaminedLength = 0;\n  this.maxRightmostFailureOffset = -1;\n  this.currentLeftRecursion = undefined;\n}\n\nPosInfo$1.prototype = {\n  isActive(application) {\n    return this.applicationMemoKeyStack.indexOf(application.toMemoKey()) >= 0;\n  },\n\n  enter(application) {\n    this.applicationMemoKeyStack.push(application.toMemoKey());\n  },\n\n  exit() {\n    this.applicationMemoKeyStack.pop();\n  },\n\n  startLeftRecursion(headApplication, memoRec) {\n    memoRec.isLeftRecursion = true;\n    memoRec.headApplication = headApplication;\n    memoRec.nextLeftRecursion = this.currentLeftRecursion;\n    this.currentLeftRecursion = memoRec;\n\n    const {applicationMemoKeyStack} = this;\n    const indexOfFirstInvolvedRule =\n      applicationMemoKeyStack.indexOf(headApplication.toMemoKey()) + 1;\n    const involvedApplicationMemoKeys = applicationMemoKeyStack.slice(\n        indexOfFirstInvolvedRule\n    );\n\n    memoRec.isInvolved = function(applicationMemoKey) {\n      return involvedApplicationMemoKeys.indexOf(applicationMemoKey) >= 0;\n    };\n\n    memoRec.updateInvolvedApplicationMemoKeys = function() {\n      for (let idx = indexOfFirstInvolvedRule; idx < applicationMemoKeyStack.length; idx++) {\n        const applicationMemoKey = applicationMemoKeyStack[idx];\n        if (!this.isInvolved(applicationMemoKey)) {\n          involvedApplicationMemoKeys.push(applicationMemoKey);\n        }\n      }\n    };\n  },\n\n  endLeftRecursion() {\n    this.currentLeftRecursion = this.currentLeftRecursion.nextLeftRecursion;\n  },\n\n  // Note: this method doesn't get called for the \"head\" of a left recursion -- for LR heads,\n  // the memoized result (which starts out being a failure) is always used.\n  shouldUseMemoizedResult(memoRec) {\n    if (!memoRec.isLeftRecursion) {\n      return true;\n    }\n    const {applicationMemoKeyStack} = this;\n    for (let idx = 0; idx < applicationMemoKeyStack.length; idx++) {\n      const applicationMemoKey = applicationMemoKeyStack[idx];\n      if (memoRec.isInvolved(applicationMemoKey)) {\n        return false;\n      }\n    }\n    return true;\n  },\n\n  memoize(memoKey, memoRec) {\n    this.memo[memoKey] = memoRec;\n    this.maxExaminedLength = Math.max(this.maxExaminedLength, memoRec.examinedLength);\n    this.maxRightmostFailureOffset = Math.max(\n        this.maxRightmostFailureOffset,\n        memoRec.rightmostFailureOffset\n    );\n    return memoRec;\n  },\n\n  clearObsoleteEntries(pos, invalidatedIdx) {\n    if (pos + this.maxExaminedLength <= invalidatedIdx) {\n      // Optimization: none of the rule applications that were memoized here examined the\n      // interval of the input that changed, so nothing has to be invalidated.\n      return;\n    }\n\n    const {memo} = this;\n    this.maxExaminedLength = 0;\n    this.maxRightmostFailureOffset = -1;\n    Object.keys(memo).forEach(k => {\n      const memoRec = memo[k];\n      if (pos + memoRec.examinedLength > invalidatedIdx) {\n        delete memo[k];\n      } else {\n        this.maxExaminedLength = Math.max(this.maxExaminedLength, memoRec.examinedLength);\n        this.maxRightmostFailureOffset = Math.max(\n            this.maxRightmostFailureOffset,\n            memoRec.rightmostFailureOffset\n        );\n      }\n    });\n  },\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar PosInfo_1 = PosInfo$1;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst InputStream$2 = InputStream_1;\nconst MatchResult$1 = MatchResult_1;\nconst PosInfo = PosInfo_1;\nconst Trace = Trace_1;\nconst pexprs$5 = pexprs$6;\nconst util$3 = util$7;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nlet builtInApplySyntacticBody;\n\nutil$3.awaitBuiltInRules(builtInRules => {\n  builtInApplySyntacticBody = builtInRules.rules.applySyntactic.body;\n});\n\nconst applySpaces = new pexprs$5.Apply('spaces');\n\nfunction MatchState$1(matcher, startExpr, optPositionToRecordFailures) {\n  this.matcher = matcher;\n  this.startExpr = startExpr;\n\n  this.grammar = matcher.grammar;\n  this.input = matcher.input;\n  this.inputStream = new InputStream$2(matcher.input);\n  this.memoTable = matcher.memoTable;\n\n  this._bindings = [];\n  this._bindingOffsets = [];\n  this._applicationStack = [];\n  this._posStack = [0];\n  this.inLexifiedContextStack = [false];\n\n  this.rightmostFailurePosition = -1;\n  this._rightmostFailurePositionStack = [];\n  this._recordedFailuresStack = [];\n\n  if (optPositionToRecordFailures !== undefined) {\n    this.positionToRecordFailures = optPositionToRecordFailures;\n    this.recordedFailures = Object.create(null);\n  }\n}\n\nMatchState$1.prototype = {\n  posToOffset(pos) {\n    return pos - this._posStack[this._posStack.length - 1];\n  },\n\n  enterApplication(posInfo, app) {\n    this._posStack.push(this.inputStream.pos);\n    this._applicationStack.push(app);\n    this.inLexifiedContextStack.push(false);\n    posInfo.enter(app);\n    this._rightmostFailurePositionStack.push(this.rightmostFailurePosition);\n    this.rightmostFailurePosition = -1;\n  },\n\n  exitApplication(posInfo, optNode) {\n    const origPos = this._posStack.pop();\n    this._applicationStack.pop();\n    this.inLexifiedContextStack.pop();\n    posInfo.exit();\n\n    this.rightmostFailurePosition = Math.max(\n        this.rightmostFailurePosition,\n        this._rightmostFailurePositionStack.pop()\n    );\n\n    if (optNode) {\n      this.pushBinding(optNode, origPos);\n    }\n  },\n\n  enterLexifiedContext() {\n    this.inLexifiedContextStack.push(true);\n  },\n\n  exitLexifiedContext() {\n    this.inLexifiedContextStack.pop();\n  },\n\n  currentApplication() {\n    return this._applicationStack[this._applicationStack.length - 1];\n  },\n\n  inSyntacticContext() {\n    const currentApplication = this.currentApplication();\n    if (currentApplication) {\n      return currentApplication.isSyntactic() && !this.inLexifiedContext();\n    } else {\n      // The top-level context is syntactic if the start application is.\n      return this.startExpr.factors[0].isSyntactic();\n    }\n  },\n\n  inLexifiedContext() {\n    return this.inLexifiedContextStack[this.inLexifiedContextStack.length - 1];\n  },\n\n  skipSpaces() {\n    this.pushFailuresInfo();\n    this.eval(applySpaces);\n    this.popBinding();\n    this.popFailuresInfo();\n    return this.inputStream.pos;\n  },\n\n  skipSpacesIfInSyntacticContext() {\n    return this.inSyntacticContext() ? this.skipSpaces() : this.inputStream.pos;\n  },\n\n  maybeSkipSpacesBefore(expr) {\n    if (expr.allowsSkippingPrecedingSpace() && expr !== applySpaces) {\n      return this.skipSpacesIfInSyntacticContext();\n    } else {\n      return this.inputStream.pos;\n    }\n  },\n\n  pushBinding(node, origPos) {\n    this._bindings.push(node);\n    this._bindingOffsets.push(this.posToOffset(origPos));\n  },\n\n  popBinding() {\n    this._bindings.pop();\n    this._bindingOffsets.pop();\n  },\n\n  numBindings() {\n    return this._bindings.length;\n  },\n\n  truncateBindings(newLength) {\n    // Yes, this is this really faster than setting the `length` property (tested with\n    // bin/es5bench on Node v6.1.0).\n    // Update 2021-10-25: still true on v14.15.5 — it's ~20% speedup on es5bench.\n    while (this._bindings.length > newLength) {\n      this.popBinding();\n    }\n  },\n\n  getCurrentPosInfo() {\n    return this.getPosInfo(this.inputStream.pos);\n  },\n\n  getPosInfo(pos) {\n    let posInfo = this.memoTable[pos];\n    if (!posInfo) {\n      posInfo = this.memoTable[pos] = new PosInfo();\n    }\n    return posInfo;\n  },\n\n  processFailure(pos, expr) {\n    this.rightmostFailurePosition = Math.max(this.rightmostFailurePosition, pos);\n\n    if (this.recordedFailures && pos === this.positionToRecordFailures) {\n      const app = this.currentApplication();\n      if (app) {\n        // Substitute parameters with the actual pexprs that were passed to\n        // the current rule.\n        expr = expr.substituteParams(app.args);\n      }\n\n      this.recordFailure(expr.toFailure(this.grammar), false);\n    }\n  },\n\n  recordFailure(failure, shouldCloneIfNew) {\n    const key = failure.toKey();\n    if (!this.recordedFailures[key]) {\n      this.recordedFailures[key] = shouldCloneIfNew ? failure.clone() : failure;\n    } else if (this.recordedFailures[key].isFluffy() && !failure.isFluffy()) {\n      this.recordedFailures[key].clearFluffy();\n    }\n  },\n\n  recordFailures(failures, shouldCloneIfNew) {\n    Object.keys(failures).forEach(key => {\n      this.recordFailure(failures[key], shouldCloneIfNew);\n    });\n  },\n\n  cloneRecordedFailures() {\n    if (!this.recordedFailures) {\n      return undefined;\n    }\n\n    const ans = Object.create(null);\n    Object.keys(this.recordedFailures).forEach(key => {\n      ans[key] = this.recordedFailures[key].clone();\n    });\n    return ans;\n  },\n\n  getRightmostFailurePosition() {\n    return this.rightmostFailurePosition;\n  },\n\n  _getRightmostFailureOffset() {\n    return this.rightmostFailurePosition >= 0 ?\n      this.posToOffset(this.rightmostFailurePosition) :\n      -1;\n  },\n\n  // Returns the memoized trace entry for `expr` at `pos`, if one exists, `null` otherwise.\n  getMemoizedTraceEntry(pos, expr) {\n    const posInfo = this.memoTable[pos];\n    if (posInfo && expr instanceof pexprs$5.Apply) {\n      const memoRec = posInfo.memo[expr.toMemoKey()];\n      if (memoRec && memoRec.traceEntry) {\n        const entry = memoRec.traceEntry.cloneWithExpr(expr);\n        entry.isMemoized = true;\n        return entry;\n      }\n    }\n    return null;\n  },\n\n  // Returns a new trace entry, with the currently active trace array as its children.\n  getTraceEntry(pos, expr, succeeded, bindings) {\n    if (expr instanceof pexprs$5.Apply) {\n      const app = this.currentApplication();\n      const actuals = app ? app.args : [];\n      expr = expr.substituteParams(actuals);\n    }\n    return (\n      this.getMemoizedTraceEntry(pos, expr) ||\n      new Trace(this.input, pos, this.inputStream.pos, expr, succeeded, bindings, this.trace)\n    );\n  },\n\n  isTracing() {\n    return !!this.trace;\n  },\n\n  hasNecessaryInfo(memoRec) {\n    if (this.trace && !memoRec.traceEntry) {\n      return false;\n    }\n\n    if (\n      this.recordedFailures &&\n      this.inputStream.pos + memoRec.rightmostFailureOffset === this.positionToRecordFailures\n    ) {\n      return !!memoRec.failuresAtRightmostPosition;\n    }\n\n    return true;\n  },\n\n  useMemoizedResult(origPos, memoRec) {\n    if (this.trace) {\n      this.trace.push(memoRec.traceEntry);\n    }\n\n    const memoRecRightmostFailurePosition =\n      this.inputStream.pos + memoRec.rightmostFailureOffset;\n    this.rightmostFailurePosition = Math.max(\n        this.rightmostFailurePosition,\n        memoRecRightmostFailurePosition\n    );\n    if (\n      this.recordedFailures &&\n      this.positionToRecordFailures === memoRecRightmostFailurePosition &&\n      memoRec.failuresAtRightmostPosition\n    ) {\n      this.recordFailures(memoRec.failuresAtRightmostPosition, true);\n    }\n\n    this.inputStream.examinedLength = Math.max(\n        this.inputStream.examinedLength,\n        memoRec.examinedLength + origPos\n    );\n\n    if (memoRec.value) {\n      this.inputStream.pos += memoRec.matchLength;\n      this.pushBinding(memoRec.value, origPos);\n      return true;\n    }\n    return false;\n  },\n\n  // Evaluate `expr` and return `true` if it succeeded, `false` otherwise. On success, `bindings`\n  // will have `expr.getArity()` more elements than before, and the input stream's position may\n  // have increased. On failure, `bindings` and position will be unchanged.\n  eval(expr) {\n    const {inputStream} = this;\n    const origNumBindings = this._bindings.length;\n\n    let origRecordedFailures;\n    if (this.recordedFailures) {\n      origRecordedFailures = this.recordedFailures;\n      this.recordedFailures = Object.create(null);\n    }\n\n    const origPos = inputStream.pos;\n    const memoPos = this.maybeSkipSpacesBefore(expr);\n\n    let origTrace;\n    if (this.trace) {\n      origTrace = this.trace;\n      this.trace = [];\n    }\n\n    // Do the actual evaluation.\n    const ans = expr.eval(this);\n\n    if (this.trace) {\n      const bindings = this._bindings.slice(origNumBindings);\n      const traceEntry = this.getTraceEntry(memoPos, expr, ans, bindings);\n      traceEntry.isImplicitSpaces = expr === applySpaces;\n      traceEntry.isRootNode = expr === this.startExpr;\n      origTrace.push(traceEntry);\n      this.trace = origTrace;\n    }\n\n    if (ans) {\n      if (this.recordedFailures && inputStream.pos === this.positionToRecordFailures) {\n        Object.keys(this.recordedFailures).forEach(key => {\n          this.recordedFailures[key].makeFluffy();\n        });\n      }\n    } else {\n      // Reset the position and the bindings.\n      inputStream.pos = origPos;\n      this.truncateBindings(origNumBindings);\n    }\n\n    if (this.recordedFailures) {\n      this.recordFailures(origRecordedFailures, false);\n    }\n\n    // The built-in applySyntactic rule needs special handling: we want to skip\n    // trailing spaces, just as with the top-level application of a syntactic rule.\n    if (expr === builtInApplySyntacticBody) {\n      this.skipSpaces();\n    }\n\n    return ans;\n  },\n\n  getMatchResult() {\n    this.eval(this.startExpr);\n    let rightmostFailures;\n    if (this.recordedFailures) {\n      rightmostFailures = Object.keys(this.recordedFailures).map(\n          key => this.recordedFailures[key]\n      );\n    }\n    const cst = this._bindings[0];\n    if (cst) {\n      cst.grammar = this.grammar;\n    }\n    return new MatchResult$1(\n        this.matcher,\n        this.input,\n        this.startExpr,\n        cst,\n        this._bindingOffsets[0],\n        this.rightmostFailurePosition,\n        rightmostFailures\n    );\n  },\n\n  getTrace() {\n    this.trace = [];\n    const matchResult = this.getMatchResult();\n\n    // The trace node for the start rule is always the last entry. If it is a syntactic rule,\n    // the first entry is for an application of 'spaces'.\n    // TODO(pdubroy): Clean this up by introducing a special `Match<startAppl>` rule, which will\n    // ensure that there is always a single root trace node.\n    const rootTrace = this.trace[this.trace.length - 1];\n    rootTrace.result = matchResult;\n    return rootTrace;\n  },\n\n  pushFailuresInfo() {\n    this._rightmostFailurePositionStack.push(this.rightmostFailurePosition);\n    this._recordedFailuresStack.push(this.recordedFailures);\n  },\n\n  popFailuresInfo() {\n    this.rightmostFailurePosition = this._rightmostFailurePositionStack.pop();\n    this.recordedFailures = this._recordedFailuresStack.pop();\n  },\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar MatchState_1 = MatchState$1;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst MatchState = MatchState_1;\n\nconst pexprs$4 = pexprs$6;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction Matcher$1(grammar) {\n  this.grammar = grammar;\n  this.memoTable = [];\n  this.input = '';\n}\n\nMatcher$1.prototype.getInput = function() {\n  return this.input;\n};\n\nMatcher$1.prototype.setInput = function(str) {\n  if (this.input !== str) {\n    this.replaceInputRange(0, this.input.length, str);\n  }\n  return this;\n};\n\nMatcher$1.prototype.replaceInputRange = function(startIdx, endIdx, str) {\n  const currentInput = this.input;\n  if (\n    startIdx < 0 ||\n    startIdx > currentInput.length ||\n    endIdx < 0 ||\n    endIdx > currentInput.length ||\n    startIdx > endIdx\n  ) {\n    throw new Error('Invalid indices: ' + startIdx + ' and ' + endIdx);\n  }\n\n  // update input\n  this.input = currentInput.slice(0, startIdx) + str + currentInput.slice(endIdx);\n\n  // update memo table (similar to the above)\n  const restOfMemoTable = this.memoTable.slice(endIdx);\n  this.memoTable.length = startIdx;\n  for (let idx = 0; idx < str.length; idx++) {\n    this.memoTable.push(undefined);\n  }\n  restOfMemoTable.forEach(function(posInfo) {\n    this.memoTable.push(posInfo);\n  }, this);\n\n  // Invalidate memoRecs\n  for (let pos = 0; pos < startIdx; pos++) {\n    const posInfo = this.memoTable[pos];\n    if (posInfo) {\n      posInfo.clearObsoleteEntries(pos, startIdx);\n    }\n  }\n\n  return this;\n};\n\nMatcher$1.prototype.match = function(optStartApplicationStr) {\n  return this._match(this._getStartExpr(optStartApplicationStr), false);\n};\n\nMatcher$1.prototype.trace = function(optStartApplicationStr) {\n  return this._match(this._getStartExpr(optStartApplicationStr), true);\n};\n\nMatcher$1.prototype._match = function(startExpr, tracing, optPositionToRecordFailures) {\n  const state = new MatchState(this, startExpr, optPositionToRecordFailures);\n  return tracing ? state.getTrace() : state.getMatchResult();\n};\n\n/*\n  Returns the starting expression for this Matcher's associated grammar. If `optStartApplicationStr`\n  is specified, it is a string expressing a rule application in the grammar. If not specified, the\n  grammar's default start rule will be used.\n*/\nMatcher$1.prototype._getStartExpr = function(optStartApplicationStr) {\n  const applicationStr = optStartApplicationStr || this.grammar.defaultStartRule;\n  if (!applicationStr) {\n    throw new Error('Missing start rule argument -- the grammar has no default start rule.');\n  }\n\n  const startApp = this.grammar.parseApplication(applicationStr);\n  return new pexprs$4.Seq([startApp, pexprs$4.end]);\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar Matcher_1 = Matcher$1;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst InputStream$1 = InputStream_1;\nconst {IterationNode} = nodes$1;\nconst MatchResult = MatchResult_1;\nconst common$3 = common$l;\nconst errors$3 = errors$9;\nconst util$2 = util$7;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nconst globalActionStack = [];\n\nconst hasOwnProperty = (x, prop) => Object.prototype.hasOwnProperty.call(x, prop);\n\n// ----------------- Wrappers -----------------\n\n// Wrappers decorate CST nodes with all of the functionality (i.e., operations and attributes)\n// provided by a Semantics (see below). `Wrapper` is the abstract superclass of all wrappers. A\n// `Wrapper` must have `_node` and `_semantics` instance variables, which refer to the CST node and\n// Semantics (resp.) for which it was created, and a `_childWrappers` instance variable which is\n// used to cache the wrapper instances that are created for its child nodes. Setting these instance\n// variables is the responsibility of the constructor of each Semantics-specific subclass of\n// `Wrapper`.\nclass Wrapper {\n  constructor(node, sourceInterval, baseInterval) {\n    this._node = node;\n    this.source = sourceInterval;\n\n    // The interval that the childOffsets of `node` are relative to. It should be the source\n    // of the closest Nonterminal node.\n    this._baseInterval = baseInterval;\n\n    if (node.isNonterminal()) {\n      common$3.assert(sourceInterval === baseInterval);\n    }\n    this._childWrappers = [];\n  }\n\n  toString() {\n    return '[semantics wrapper for ' + this._node.grammar.name + ']';\n  }\n\n  _forgetMemoizedResultFor(attributeName) {\n    // Remove the memoized attribute from the cstNode and all its children.\n    delete this._node[this._semantics.attributeKeys[attributeName]];\n    this.children.forEach(child => {\n      child._forgetMemoizedResultFor(attributeName);\n    });\n  }\n\n  // Returns the wrapper of the specified child node. Child wrappers are created lazily and\n  // cached in the parent wrapper's `_childWrappers` instance variable.\n  child(idx) {\n    if (!(0 <= idx && idx < this._node.numChildren())) {\n      // TODO: Consider throwing an exception here.\n      return undefined;\n    }\n    let childWrapper = this._childWrappers[idx];\n    if (!childWrapper) {\n      const childNode = this._node.childAt(idx);\n      const offset = this._node.childOffsets[idx];\n\n      const source = this._baseInterval.subInterval(offset, childNode.matchLength);\n      const base = childNode.isNonterminal() ? source : this._baseInterval;\n      childWrapper = this._childWrappers[idx] = this._semantics.wrap(childNode, source, base);\n    }\n    return childWrapper;\n  }\n\n  // Returns an array containing the wrappers of all of the children of the node associated\n  // with this wrapper.\n  _children() {\n    // Force the creation of all child wrappers\n    for (let idx = 0; idx < this._node.numChildren(); idx++) {\n      this.child(idx);\n    }\n    return this._childWrappers;\n  }\n\n  // Returns `true` if the CST node associated with this wrapper corresponds to an iteration\n  // expression, i.e., a Kleene-*, Kleene-+, or an optional. Returns `false` otherwise.\n  isIteration() {\n    return this._node.isIteration();\n  }\n\n  // Returns `true` if the CST node associated with this wrapper is a terminal node, `false`\n  // otherwise.\n  isTerminal() {\n    return this._node.isTerminal();\n  }\n\n  // Returns `true` if the CST node associated with this wrapper is a nonterminal node, `false`\n  // otherwise.\n  isNonterminal() {\n    return this._node.isNonterminal();\n  }\n\n  // Returns `true` if the CST node associated with this wrapper is a nonterminal node\n  // corresponding to a syntactic rule, `false` otherwise.\n  isSyntactic() {\n    return this.isNonterminal() && this._node.isSyntactic();\n  }\n\n  // Returns `true` if the CST node associated with this wrapper is a nonterminal node\n  // corresponding to a lexical rule, `false` otherwise.\n  isLexical() {\n    return this.isNonterminal() && this._node.isLexical();\n  }\n\n  // Returns `true` if the CST node associated with this wrapper is an iterator node\n  // having either one or no child (? operator), `false` otherwise.\n  // Otherwise, throws an exception.\n  isOptional() {\n    return this._node.isOptional();\n  }\n\n  // Create a new _iter wrapper in the same semantics as this wrapper.\n  iteration(optChildWrappers) {\n    const childWrappers = optChildWrappers || [];\n\n    const childNodes = childWrappers.map(c => c._node);\n    const iter = new IterationNode(childNodes, [], -1, false);\n\n    const wrapper = this._semantics.wrap(iter, null, null);\n    wrapper._childWrappers = childWrappers;\n    return wrapper;\n  }\n\n  // Returns an array containing the children of this CST node.\n  get children() {\n    return this._children();\n  }\n\n  // Returns the name of grammar rule that created this CST node.\n  get ctorName() {\n    return this._node.ctorName;\n  }\n\n  // TODO: Remove this eventually (deprecated in v0.12).\n  get interval() {\n    throw new Error('The `interval` property is deprecated -- use `source` instead');\n  }\n\n  // Returns the number of children of this CST node.\n  get numChildren() {\n    return this._node.numChildren();\n  }\n\n  // Returns the contents of the input stream consumed by this CST node.\n  get sourceString() {\n    return this.source.contents;\n  }\n}\n\n// ----------------- Semantics -----------------\n\n// A Semantics is a container for a family of Operations and Attributes for a given grammar.\n// Semantics enable modularity (different clients of a grammar can create their set of operations\n// and attributes in isolation) and extensibility even when operations and attributes are mutually-\n// recursive. This constructor should not be called directly except from\n// `Semantics.createSemantics`. The normal ways to create a Semantics, given a grammar 'g', are\n// `g.createSemantics()` and `g.extendSemantics(parentSemantics)`.\nfunction Semantics$2(grammar, superSemantics) {\n  const self = this;\n  this.grammar = grammar;\n  this.checkedActionDicts = false;\n\n  // Constructor for wrapper instances, which are passed as the arguments to the semantic actions\n  // of an operation or attribute. Operations and attributes require double dispatch: the semantic\n  // action is chosen based on both the node's type and the semantics. Wrappers ensure that\n  // the `execute` method is called with the correct (most specific) semantics object as an\n  // argument.\n  this.Wrapper = class extends (superSemantics ? superSemantics.Wrapper : Wrapper) {\n    constructor(node, sourceInterval, baseInterval) {\n      super(node, sourceInterval, baseInterval);\n      self.checkActionDictsIfHaventAlready();\n      this._semantics = self;\n    }\n  };\n\n  this.super = superSemantics;\n  if (superSemantics) {\n    if (!(grammar.equals(this.super.grammar) || grammar._inheritsFrom(this.super.grammar))) {\n      throw new Error(\n          \"Cannot extend a semantics for grammar '\" +\n          this.super.grammar.name +\n          \"' for use with grammar '\" +\n          grammar.name +\n          \"' (not a sub-grammar)\"\n      );\n    }\n    this.operations = Object.create(this.super.operations);\n    this.attributes = Object.create(this.super.attributes);\n    this.attributeKeys = Object.create(null);\n\n    // Assign unique symbols for each of the attributes inherited from the super-semantics so that\n    // they are memoized independently.\n    // eslint-disable-next-line guard-for-in\n    for (const attributeName in this.attributes) {\n      Object.defineProperty(this.attributeKeys, attributeName, {\n        value: util$2.uniqueId(attributeName),\n      });\n    }\n  } else {\n    this.operations = Object.create(null);\n    this.attributes = Object.create(null);\n    this.attributeKeys = Object.create(null);\n  }\n}\n\nSemantics$2.prototype.toString = function() {\n  return '[semantics for ' + this.grammar.name + ']';\n};\n\nSemantics$2.prototype.checkActionDictsIfHaventAlready = function() {\n  if (!this.checkedActionDicts) {\n    this.checkActionDicts();\n    this.checkedActionDicts = true;\n  }\n};\n\n// Checks that the action dictionaries for all operations and attributes in this semantics,\n// including the ones that were inherited from the super-semantics, agree with the grammar.\n// Throws an exception if one or more of them doesn't.\nSemantics$2.prototype.checkActionDicts = function() {\n  let name;\n  // eslint-disable-next-line guard-for-in\n  for (name in this.operations) {\n    this.operations[name].checkActionDict(this.grammar);\n  }\n  // eslint-disable-next-line guard-for-in\n  for (name in this.attributes) {\n    this.attributes[name].checkActionDict(this.grammar);\n  }\n};\n\nSemantics$2.prototype.toRecipe = function(semanticsOnly) {\n  function hasSuperSemantics(s) {\n    return s.super !== Semantics$2.BuiltInSemantics._getSemantics();\n  }\n\n  let str = '(function(g) {\\n';\n  if (hasSuperSemantics(this)) {\n    str += '  var semantics = ' + this.super.toRecipe(true) + '(g';\n\n    const superSemanticsGrammar = this.super.grammar;\n    let relatedGrammar = this.grammar;\n    while (relatedGrammar !== superSemanticsGrammar) {\n      str += '.superGrammar';\n      relatedGrammar = relatedGrammar.superGrammar;\n    }\n\n    str += ');\\n';\n    str += '  return g.extendSemantics(semantics)';\n  } else {\n    str += '  return g.createSemantics()';\n  }\n  ['Operation', 'Attribute'].forEach(type => {\n    const semanticOperations = this[type.toLowerCase() + 's'];\n    Object.keys(semanticOperations).forEach(name => {\n      const {actionDict, formals, builtInDefault} = semanticOperations[name];\n\n      let signature = name;\n      if (formals.length > 0) {\n        signature += '(' + formals.join(', ') + ')';\n      }\n\n      let method;\n      if (hasSuperSemantics(this) && this.super[type.toLowerCase() + 's'][name]) {\n        method = 'extend' + type;\n      } else {\n        method = 'add' + type;\n      }\n      str += '\\n    .' + method + '(' + JSON.stringify(signature) + ', {';\n\n      const srcArray = [];\n      Object.keys(actionDict).forEach(actionName => {\n        if (actionDict[actionName] !== builtInDefault) {\n          let source = actionDict[actionName].toString().trim();\n\n          // Convert method shorthand to plain old function syntax.\n          // https://github.com/harc/ohm/issues/263\n          source = source.replace(/^.*\\(/, 'function(');\n\n          srcArray.push('\\n      ' + JSON.stringify(actionName) + ': ' + source);\n        }\n      });\n      str += srcArray.join(',') + '\\n    })';\n    });\n  });\n  str += ';\\n  })';\n\n  if (!semanticsOnly) {\n    str =\n      '(function() {\\n' +\n      '  var grammar = this.fromRecipe(' +\n      this.grammar.toRecipe() +\n      ');\\n' +\n      '  var semantics = ' +\n      str +\n      '(grammar);\\n' +\n      '  return semantics;\\n' +\n      '});\\n';\n  }\n\n  return str;\n};\n\nfunction parseSignature$1(signature, type) {\n  if (!Semantics$2.prototypeGrammar) {\n    // The Operations and Attributes grammar won't be available while Ohm is loading,\n    // but we can get away the following simplification b/c none of the operations\n    // that are used while loading take arguments.\n    common$3.assert(signature.indexOf('(') === -1);\n    return {\n      name: signature,\n      formals: [],\n    };\n  }\n\n  const r = Semantics$2.prototypeGrammar.match(\n      signature,\n    type === 'operation' ? 'OperationSignature' : 'AttributeSignature'\n  );\n  if (r.failed()) {\n    throw new Error(r.message);\n  }\n\n  return Semantics$2.prototypeGrammarSemantics(r).parse();\n}\n\nfunction newDefaultAction(type, name, doIt) {\n  return function(...children) {\n    const thisThing = this._semantics.operations[name] || this._semantics.attributes[name];\n    const args = thisThing.formals.map(formal => this.args[formal]);\n\n    if (!this.isIteration() && children.length === 1) {\n      // This CST node corresponds to a non-terminal in the grammar (e.g., AddExpr). The fact that\n      // we got here means that this action dictionary doesn't have an action for this particular\n      // non-terminal or a generic `_nonterminal` action.\n      // As a convenience, if this node only has one child, we just return the result of applying\n      // this operation / attribute to the child node.\n      return doIt.apply(children[0], args);\n    } else {\n      // Otherwise, we throw an exception to let the programmer know that we don't know what\n      // to do with this node.\n      throw errors$3.missingSemanticAction(this.ctorName, name, type, globalActionStack);\n    }\n  };\n}\n\nSemantics$2.prototype.addOperationOrAttribute = function(type, signature, actionDict) {\n  const typePlural = type + 's';\n\n  const parsedNameAndFormalArgs = parseSignature$1(signature, type);\n  const {name} = parsedNameAndFormalArgs;\n  const {formals} = parsedNameAndFormalArgs;\n\n  // TODO: check that there are no duplicate formal arguments\n\n  this.assertNewName(name, type);\n\n  // Create the action dictionary for this operation / attribute that contains a `_default` action\n  // which defines the default behavior of iteration, terminal, and non-terminal nodes...\n  const builtInDefault = newDefaultAction(type, name, doIt);\n  const realActionDict = {_default: builtInDefault};\n  // ... and add in the actions supplied by the programmer, which may override some or all of the\n  // default ones.\n  Object.keys(actionDict).forEach(name => {\n    realActionDict[name] = actionDict[name];\n  });\n\n  const entry =\n    type === 'operation' ?\n      new Operation(name, formals, realActionDict, builtInDefault) :\n      new Attribute(name, realActionDict, builtInDefault);\n\n  // The following check is not strictly necessary (it will happen later anyway) but it's better to\n  // catch errors early.\n  entry.checkActionDict(this.grammar);\n\n  this[typePlural][name] = entry;\n\n  function doIt(...args) {\n    // Dispatch to most specific version of this operation / attribute -- it may have been\n    // overridden by a sub-semantics.\n    const thisThing = this._semantics[typePlural][name];\n\n    // Check that the caller passed the correct number of arguments.\n    if (arguments.length !== thisThing.formals.length) {\n      throw new Error(\n          'Invalid number of arguments passed to ' +\n          name +\n          ' ' +\n          type +\n          ' (expected ' +\n          thisThing.formals.length +\n          ', got ' +\n          arguments.length +\n          ')'\n      );\n    }\n\n    // Create an \"arguments object\" from the arguments that were passed to this\n    // operation / attribute.\n    const argsObj = Object.create(null);\n    for (const [idx, val] of Object.entries(args)) {\n      const formal = thisThing.formals[idx];\n      argsObj[formal] = val;\n    }\n\n    const oldArgs = this.args;\n    this.args = argsObj;\n    const ans = thisThing.execute(this._semantics, this);\n    this.args = oldArgs;\n    return ans;\n  }\n\n  if (type === 'operation') {\n    this.Wrapper.prototype[name] = doIt;\n    this.Wrapper.prototype[name].toString = function() {\n      return '[' + name + ' operation]';\n    };\n  } else {\n    Object.defineProperty(this.Wrapper.prototype, name, {\n      get: doIt,\n      configurable: true, // So the property can be deleted.\n    });\n    Object.defineProperty(this.attributeKeys, name, {\n      value: util$2.uniqueId(name),\n    });\n  }\n};\n\nSemantics$2.prototype.extendOperationOrAttribute = function(type, name, actionDict) {\n  const typePlural = type + 's';\n\n  // Make sure that `name` really is just a name, i.e., that it doesn't also contain formals.\n  parseSignature$1(name, 'attribute');\n\n  if (!(this.super && name in this.super[typePlural])) {\n    throw new Error(\n        'Cannot extend ' +\n        type +\n        \" '\" +\n        name +\n        \"': did not inherit an \" +\n        type +\n        ' with that name'\n    );\n  }\n  if (hasOwnProperty(this[typePlural], name)) {\n    throw new Error('Cannot extend ' + type + \" '\" + name + \"' again\");\n  }\n\n  // Create a new operation / attribute whose actionDict delegates to the super operation /\n  // attribute's actionDict, and which has all the keys from `inheritedActionDict`.\n  const inheritedFormals = this[typePlural][name].formals;\n  const inheritedActionDict = this[typePlural][name].actionDict;\n  const newActionDict = Object.create(inheritedActionDict);\n  Object.keys(actionDict).forEach(name => {\n    newActionDict[name] = actionDict[name];\n  });\n\n  this[typePlural][name] =\n    type === 'operation' ?\n      new Operation(name, inheritedFormals, newActionDict) :\n      new Attribute(name, newActionDict);\n\n  // The following check is not strictly necessary (it will happen later anyway) but it's better to\n  // catch errors early.\n  this[typePlural][name].checkActionDict(this.grammar);\n};\n\nSemantics$2.prototype.assertNewName = function(name, type) {\n  if (hasOwnProperty(Wrapper.prototype, name)) {\n    throw new Error('Cannot add ' + type + \" '\" + name + \"': that's a reserved name\");\n  }\n  if (name in this.operations) {\n    throw new Error(\n        'Cannot add ' + type + \" '\" + name + \"': an operation with that name already exists\"\n    );\n  }\n  if (name in this.attributes) {\n    throw new Error(\n        'Cannot add ' + type + \" '\" + name + \"': an attribute with that name already exists\"\n    );\n  }\n};\n\n// Returns a wrapper for the given CST `node` in this semantics.\n// If `node` is already a wrapper, returns `node` itself.  // TODO: why is this needed?\nSemantics$2.prototype.wrap = function(node, source, optBaseInterval) {\n  const baseInterval = optBaseInterval || source;\n  return node instanceof this.Wrapper ? node : new this.Wrapper(node, source, baseInterval);\n};\n\n// Creates a new Semantics instance for `grammar`, inheriting operations and attributes from\n// `optSuperSemantics`, if it is specified. Returns a function that acts as a proxy for the new\n// Semantics instance. When that function is invoked with a CST node as an argument, it returns\n// a wrapper for that node which gives access to the operations and attributes provided by this\n// semantics.\nSemantics$2.createSemantics = function(grammar, optSuperSemantics) {\n  const s = new Semantics$2(\n      grammar,\n    optSuperSemantics !== undefined ?\n      optSuperSemantics :\n      Semantics$2.BuiltInSemantics._getSemantics()\n  );\n\n  // To enable clients to invoke a semantics like a function, return a function that acts as a proxy\n  // for `s`, which is the real `Semantics` instance.\n  const proxy = function ASemantics(matchResult) {\n    if (!(matchResult instanceof MatchResult)) {\n      throw new TypeError(\n          'Semantics expected a MatchResult, but got ' +\n          common$3.unexpectedObjToString(matchResult)\n      );\n    }\n    if (matchResult.failed()) {\n      throw new TypeError('cannot apply Semantics to ' + matchResult.toString());\n    }\n\n    const cst = matchResult._cst;\n    if (cst.grammar !== grammar) {\n      throw new Error(\n          \"Cannot use a MatchResult from grammar '\" +\n          cst.grammar.name +\n          \"' with a semantics for '\" +\n          grammar.name +\n          \"'\"\n      );\n    }\n    const inputStream = new InputStream$1(matchResult.input);\n    return s.wrap(cst, inputStream.interval(matchResult._cstOffset, matchResult.input.length));\n  };\n\n  // Forward public methods from the proxy to the semantics instance.\n  proxy.addOperation = function(signature, actionDict) {\n    s.addOperationOrAttribute('operation', signature, actionDict);\n    return proxy;\n  };\n  proxy.extendOperation = function(name, actionDict) {\n    s.extendOperationOrAttribute('operation', name, actionDict);\n    return proxy;\n  };\n  proxy.addAttribute = function(name, actionDict) {\n    s.addOperationOrAttribute('attribute', name, actionDict);\n    return proxy;\n  };\n  proxy.extendAttribute = function(name, actionDict) {\n    s.extendOperationOrAttribute('attribute', name, actionDict);\n    return proxy;\n  };\n  proxy._getActionDict = function(operationOrAttributeName) {\n    const action =\n      s.operations[operationOrAttributeName] || s.attributes[operationOrAttributeName];\n    if (!action) {\n      throw new Error(\n          '\"' +\n          operationOrAttributeName +\n          '\" is not a valid operation or attribute ' +\n          'name in this semantics for \"' +\n          grammar.name +\n          '\"'\n      );\n    }\n    return action.actionDict;\n  };\n  proxy._remove = function(operationOrAttributeName) {\n    let semantic;\n    if (operationOrAttributeName in s.operations) {\n      semantic = s.operations[operationOrAttributeName];\n      delete s.operations[operationOrAttributeName];\n    } else if (operationOrAttributeName in s.attributes) {\n      semantic = s.attributes[operationOrAttributeName];\n      delete s.attributes[operationOrAttributeName];\n    }\n    delete s.Wrapper.prototype[operationOrAttributeName];\n    return semantic;\n  };\n  proxy.getOperationNames = function() {\n    return Object.keys(s.operations);\n  };\n  proxy.getAttributeNames = function() {\n    return Object.keys(s.attributes);\n  };\n  proxy.getGrammar = function() {\n    return s.grammar;\n  };\n  proxy.toRecipe = function(semanticsOnly) {\n    return s.toRecipe(semanticsOnly);\n  };\n\n  // Make the proxy's toString() work.\n  proxy.toString = s.toString.bind(s);\n\n  // Returns the semantics for the proxy.\n  proxy._getSemantics = function() {\n    return s;\n  };\n\n  return proxy;\n};\n\n// ----------------- Operation -----------------\n\n// An Operation represents a function to be applied to a concrete syntax tree (CST) -- it's very\n// similar to a Visitor (http://en.wikipedia.org/wiki/Visitor_pattern). An operation is executed by\n// recursively walking the CST, and at each node, invoking the matching semantic action from\n// `actionDict`. See `Operation.prototype.execute` for details of how a CST node's matching semantic\n// action is found.\nclass Operation {\n  constructor(name, formals, actionDict, builtInDefault) {\n    this.name = name;\n    this.formals = formals;\n    this.actionDict = actionDict;\n    this.builtInDefault = builtInDefault;\n  }\n\n  checkActionDict(grammar) {\n    grammar._checkTopDownActionDict(this.typeName, this.name, this.actionDict);\n  }\n\n  // Execute this operation on the CST node associated with `nodeWrapper` in the context of the\n  // given Semantics instance.\n  execute(semantics, nodeWrapper) {\n    try {\n      // Look for a semantic action whose name matches the node's constructor name, which is either\n      // the name of a rule in the grammar, or '_terminal' (for a terminal node), or '_iter' (for an\n      // iteration node).\n      const {ctorName} = nodeWrapper._node;\n      let actionFn = this.actionDict[ctorName];\n      if (actionFn) {\n        globalActionStack.push([this, ctorName]);\n        return actionFn.apply(nodeWrapper, nodeWrapper._children());\n      }\n\n      // The action dictionary does not contain a semantic action for this specific type of node.\n      // If this is a nonterminal node and the programmer has provided a `_nonterminal` semantic\n      // action, we invoke it:\n      if (nodeWrapper.isNonterminal()) {\n        actionFn = this.actionDict._nonterminal;\n        if (actionFn) {\n          globalActionStack.push([this, '_nonterminal', ctorName]);\n          return actionFn.apply(nodeWrapper, nodeWrapper._children());\n        }\n      }\n\n      // Otherwise, we invoke the '_default' semantic action.\n      globalActionStack.push([this, 'default action', ctorName]);\n      return this.actionDict._default.apply(nodeWrapper, nodeWrapper._children());\n    } finally {\n      globalActionStack.pop();\n    }\n  }\n}\n\nOperation.prototype.typeName = 'operation';\n\n// ----------------- Attribute -----------------\n\n// Attributes are Operations whose results are memoized. This means that, for any given semantics,\n// the semantic action for a CST node will be invoked no more than once.\nclass Attribute extends Operation {\n  constructor(name, actionDict, builtInDefault) {\n    super(name, [], actionDict, builtInDefault);\n  }\n\n  execute(semantics, nodeWrapper) {\n    const node = nodeWrapper._node;\n    const key = semantics.attributeKeys[this.name];\n    if (!hasOwnProperty(node, key)) {\n      // The following is a super-send -- isn't JS beautiful? :/\n      node[key] = Operation.prototype.execute.call(this, semantics, nodeWrapper);\n    }\n    return node[key];\n  }\n}\n\nAttribute.prototype.typeName = 'attribute';\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar Semantics_1 = Semantics$2;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst CaseInsensitiveTerminal = CaseInsensitiveTerminal_1;\nconst Matcher = Matcher_1;\nconst Semantics$1 = Semantics_1;\nconst common$2 = common$l;\nconst errors$2 = errors$9;\nconst pexprs$3 = pexprs$6;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nconst SPECIAL_ACTION_NAMES = ['_iter', '_terminal', '_nonterminal', '_default'];\n\nfunction getSortedRuleValues(grammar) {\n  return Object.keys(grammar.rules)\n      .sort()\n      .map(name => grammar.rules[name]);\n}\n\n// Until ES2019, JSON was not a valid subset of JavaScript because U+2028 (line separator)\n// and U+2029 (paragraph separator) are allowed in JSON string literals, but not in JS.\n// This function properly encodes those two characters so that the resulting string is\n// represents both valid JSON, and valid JavaScript (for ES2018 and below).\n// See https://v8.dev/features/subsume-json for more details.\nconst jsonToJS = str => str.replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\n\nfunction Grammar$4(name, superGrammar, rules, optDefaultStartRule) {\n  this.name = name;\n  this.superGrammar = superGrammar;\n  this.rules = rules;\n  if (optDefaultStartRule) {\n    if (!(optDefaultStartRule in rules)) {\n      throw new Error(\n          \"Invalid start rule: '\" +\n          optDefaultStartRule +\n          \"' is not a rule in grammar '\" +\n          name +\n          \"'\"\n      );\n    }\n    this.defaultStartRule = optDefaultStartRule;\n  }\n}\n\nlet ohmGrammar$2;\nlet buildGrammar$1;\n\n// This method is called from main.js once Ohm has loaded.\nGrammar$4.initApplicationParser = function(grammar, builderFn) {\n  ohmGrammar$2 = grammar;\n  buildGrammar$1 = builderFn;\n};\n\nGrammar$4.prototype = {\n  matcher() {\n    return new Matcher(this);\n  },\n\n  // Return true if the grammar is a built-in grammar, otherwise false.\n  // NOTE: This might give an unexpected result if called before BuiltInRules is defined!\n  isBuiltIn() {\n    return this === Grammar$4.ProtoBuiltInRules || this === Grammar$4.BuiltInRules;\n  },\n\n  equals(g) {\n    if (this === g) {\n      return true;\n    }\n    // Do the cheapest comparisons first.\n    if (\n      g == null ||\n      this.name !== g.name ||\n      this.defaultStartRule !== g.defaultStartRule ||\n      !(this.superGrammar === g.superGrammar || this.superGrammar.equals(g.superGrammar))\n    ) {\n      return false;\n    }\n    const myRules = getSortedRuleValues(this);\n    const otherRules = getSortedRuleValues(g);\n    return (\n      myRules.length === otherRules.length &&\n      myRules.every((rule, i) => {\n        return (\n          rule.description === otherRules[i].description &&\n          rule.formals.join(',') === otherRules[i].formals.join(',') &&\n          rule.body.toString() === otherRules[i].body.toString()\n        );\n      })\n    );\n  },\n\n  match(input, optStartApplication) {\n    const m = this.matcher();\n    m.replaceInputRange(0, 0, input);\n    return m.match(optStartApplication);\n  },\n\n  trace(input, optStartApplication) {\n    const m = this.matcher();\n    m.replaceInputRange(0, 0, input);\n    return m.trace(optStartApplication);\n  },\n\n  createSemantics() {\n    return Semantics$1.createSemantics(this);\n  },\n\n  extendSemantics(superSemantics) {\n    return Semantics$1.createSemantics(this, superSemantics._getSemantics());\n  },\n\n  // Check that every key in `actionDict` corresponds to a semantic action, and that it maps to\n  // a function of the correct arity. If not, throw an exception.\n  _checkTopDownActionDict(what, name, actionDict) {\n    const problems = [];\n\n    // eslint-disable-next-line guard-for-in\n    for (const k in actionDict) {\n      const v = actionDict[k];\n      const isSpecialAction = SPECIAL_ACTION_NAMES.includes(k);\n\n      if (!isSpecialAction && !(k in this.rules)) {\n        problems.push(`'${k}' is not a valid semantic action for '${this.name}'`);\n        continue;\n      }\n      if (typeof v !== 'function') {\n        problems.push(`'${k}' must be a function in an action dictionary for '${this.name}'`);\n        continue;\n      }\n      const actual = v.length;\n      const expected = this._topDownActionArity(k);\n      if (actual !== expected) {\n        let details;\n        if (k === '_iter' || k === '_nonterminal') {\n          details =\n            `it should use a rest parameter, e.g. \\`${k}(...children) {}\\`. ` +\n            'NOTE: this is new in Ohm v16 — see https://ohmjs.org/d/ati for details.';\n        } else {\n          details = `expected ${expected}, got ${actual}`;\n        }\n        problems.push(`Semantic action '${k}' has the wrong arity: ${details}`);\n      }\n    }\n    if (problems.length > 0) {\n      const prettyProblems = problems.map(problem => '- ' + problem);\n      const error = new Error(\n          [\n            `Found errors in the action dictionary of the '${name}' ${what}:`,\n            ...prettyProblems,\n          ].join('\\n')\n      );\n      error.problems = problems;\n      throw error;\n    }\n  },\n\n  // Return the expected arity for a semantic action named `actionName`, which\n  // is either a rule name or a special action name like '_nonterminal'.\n  _topDownActionArity(actionName) {\n    // All special actions have an expected arity of 0, though all but _terminal\n    // are expected to use the rest parameter syntax (e.g. `_iter(...children)`).\n    // This is considered to have arity 0, i.e. `((...args) => {}).length` is 0.\n    return SPECIAL_ACTION_NAMES.includes(actionName) ?\n      0 :\n      this.rules[actionName].body.getArity();\n  },\n\n  _inheritsFrom(grammar) {\n    let g = this.superGrammar;\n    while (g) {\n      if (g.equals(grammar, true)) {\n        return true;\n      }\n      g = g.superGrammar;\n    }\n    return false;\n  },\n\n  toRecipe(superGrammarExpr = undefined) {\n    const metaInfo = {};\n    // Include the grammar source if it is available.\n    if (this.source) {\n      metaInfo.source = this.source.contents;\n    }\n\n    let startRule = null;\n    if (this.defaultStartRule) {\n      startRule = this.defaultStartRule;\n    }\n\n    const rules = {};\n    Object.keys(this.rules).forEach(ruleName => {\n      const ruleInfo = this.rules[ruleName];\n      const {body} = ruleInfo;\n      const isDefinition = !this.superGrammar || !this.superGrammar.rules[ruleName];\n\n      let operation;\n      if (isDefinition) {\n        operation = 'define';\n      } else {\n        operation = body instanceof pexprs$3.Extend ? 'extend' : 'override';\n      }\n\n      const metaInfo = {};\n      if (ruleInfo.source && this.source) {\n        const adjusted = ruleInfo.source.relativeTo(this.source);\n        metaInfo.sourceInterval = [adjusted.startIdx, adjusted.endIdx];\n      }\n\n      const description = isDefinition ? ruleInfo.description : null;\n      const bodyRecipe = body.outputRecipe(ruleInfo.formals, this.source);\n\n      rules[ruleName] = [\n        operation, // \"define\"/\"extend\"/\"override\"\n        metaInfo,\n        description,\n        ruleInfo.formals,\n        bodyRecipe,\n      ];\n    });\n\n    // If the caller provided an expression to use for the supergrammar, use that.\n    // Otherwise, if the supergrammar is a user grammar, use its recipe inline.\n    let superGrammarOutput = 'null';\n    if (superGrammarExpr) {\n      superGrammarOutput = superGrammarExpr;\n    } else if (this.superGrammar && !this.superGrammar.isBuiltIn()) {\n      superGrammarOutput = this.superGrammar.toRecipe();\n    }\n\n    const recipeElements = [\n      ...['grammar', metaInfo, this.name].map(JSON.stringify),\n      superGrammarOutput,\n      ...[startRule, rules].map(JSON.stringify),\n    ];\n    return jsonToJS(`[${recipeElements.join(',')}]`);\n  },\n\n  // TODO: Come up with better names for these methods.\n  // TODO: Write the analog of these methods for inherited attributes.\n  toOperationActionDictionaryTemplate() {\n    return this._toOperationOrAttributeActionDictionaryTemplate();\n  },\n  toAttributeActionDictionaryTemplate() {\n    return this._toOperationOrAttributeActionDictionaryTemplate();\n  },\n\n  _toOperationOrAttributeActionDictionaryTemplate() {\n    // TODO: add the super-grammar's templates at the right place, e.g., a case for AddExpr_plus\n    // should appear next to other cases of AddExpr.\n\n    const sb = new common$2.StringBuffer();\n    sb.append('{');\n\n    let first = true;\n    // eslint-disable-next-line guard-for-in\n    for (const ruleName in this.rules) {\n      const {body} = this.rules[ruleName];\n      if (first) {\n        first = false;\n      } else {\n        sb.append(',');\n      }\n      sb.append('\\n');\n      sb.append('  ');\n      this.addSemanticActionTemplate(ruleName, body, sb);\n    }\n\n    sb.append('\\n}');\n    return sb.contents();\n  },\n\n  addSemanticActionTemplate(ruleName, body, sb) {\n    sb.append(ruleName);\n    sb.append(': function(');\n    const arity = this._topDownActionArity(ruleName);\n    sb.append(common$2.repeat('_', arity).join(', '));\n    sb.append(') {\\n');\n    sb.append('  }');\n  },\n\n  // Parse a string which expresses a rule application in this grammar, and return the\n  // resulting Apply node.\n  parseApplication(str) {\n    let app;\n    if (str.indexOf('<') === -1) {\n      // simple application\n      app = new pexprs$3.Apply(str);\n    } else {\n      // parameterized application\n      const cst = ohmGrammar$2.match(str, 'Base_application');\n      app = buildGrammar$1(cst, {});\n    }\n\n    // Ensure that the application is valid.\n    if (!(app.ruleName in this.rules)) {\n      throw errors$2.undeclaredRule(app.ruleName, this.name);\n    }\n    const {formals} = this.rules[app.ruleName];\n    if (formals.length !== app.args.length) {\n      const {source} = this.rules[app.ruleName];\n      throw errors$2.wrongNumberOfParameters(\n          app.ruleName,\n          formals.length,\n          app.args.length,\n          source\n      );\n    }\n    return app;\n  },\n};\n\n// The following grammar contains a few rules that couldn't be written  in \"userland\".\n// At the bottom of src/main.js, we create a sub-grammar of this grammar that's called\n// `BuiltInRules`. That grammar contains several convenience rules, e.g., `letter` and\n// `digit`, and is implicitly the super-grammar of any grammar whose super-grammar\n// isn't specified.\nGrammar$4.ProtoBuiltInRules = new Grammar$4(\n    'ProtoBuiltInRules', // name\n    undefined, // supergrammar\n    {\n      any: {\n        body: pexprs$3.any,\n        formals: [],\n        description: 'any character',\n        primitive: true,\n      },\n      end: {\n        body: pexprs$3.end,\n        formals: [],\n        description: 'end of input',\n        primitive: true,\n      },\n\n      caseInsensitive: {\n        body: new CaseInsensitiveTerminal(new pexprs$3.Param(0)),\n        formals: ['str'],\n        primitive: true,\n      },\n      lower: {\n        body: new pexprs$3.UnicodeChar('Ll'),\n        formals: [],\n        description: 'a lowercase letter',\n        primitive: true,\n      },\n      upper: {\n        body: new pexprs$3.UnicodeChar('Lu'),\n        formals: [],\n        description: 'an uppercase letter',\n        primitive: true,\n      },\n      // Union of Lt (titlecase), Lm (modifier), and Lo (other), i.e. any letter not in Ll or Lu.\n      unicodeLtmo: {\n        body: new pexprs$3.UnicodeChar('Ltmo'),\n        formals: [],\n        description: 'a Unicode character in Lt, Lm, or Lo',\n        primitive: true,\n      },\n\n      // These rules are not truly primitive (they could be written in userland) but are defined\n      // here for bootstrapping purposes.\n      spaces: {\n        body: new pexprs$3.Star(new pexprs$3.Apply('space')),\n        formals: [],\n      },\n      space: {\n        body: new pexprs$3.Range('\\x00', ' '),\n        formals: [],\n        description: 'a space',\n      },\n    }\n);\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar Grammar_1 = Grammar$4;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst Grammar$3 = Grammar_1;\nconst InputStream = InputStream_1;\nconst common$1 = common$l;\nconst errors$1 = errors$9;\nconst pexprs$2 = pexprs$6;\n\n// --------------------------------------------------------------------\n// Private Stuff\n// --------------------------------------------------------------------\n\n// Constructors\n\nfunction GrammarDecl$1(name) {\n  this.name = name;\n}\n\n// Helpers\n\nGrammarDecl$1.prototype.sourceInterval = function(startIdx, endIdx) {\n  return this.source.subInterval(startIdx, endIdx - startIdx);\n};\n\nGrammarDecl$1.prototype.ensureSuperGrammar = function() {\n  if (!this.superGrammar) {\n    this.withSuperGrammar(\n      // TODO: The conditional expression below is an ugly hack. It's kind of ok because\n      // I doubt anyone will ever try to declare a grammar called `BuiltInRules`. Still,\n      // we should try to find a better way to do this.\n      this.name === 'BuiltInRules' ? Grammar$3.ProtoBuiltInRules : Grammar$3.BuiltInRules\n    );\n  }\n  return this.superGrammar;\n};\n\nGrammarDecl$1.prototype.ensureSuperGrammarRuleForOverriding = function(name, source) {\n  const ruleInfo = this.ensureSuperGrammar().rules[name];\n  if (!ruleInfo) {\n    throw errors$1.cannotOverrideUndeclaredRule(name, this.superGrammar.name, source);\n  }\n  return ruleInfo;\n};\n\nGrammarDecl$1.prototype.installOverriddenOrExtendedRule = function(\n    name,\n    formals,\n    body,\n    source\n) {\n  const duplicateParameterNames = common$1.getDuplicates(formals);\n  if (duplicateParameterNames.length > 0) {\n    throw errors$1.duplicateParameterNames(name, duplicateParameterNames, source);\n  }\n  const ruleInfo = this.ensureSuperGrammar().rules[name];\n  const expectedFormals = ruleInfo.formals;\n  const expectedNumFormals = expectedFormals ? expectedFormals.length : 0;\n  if (formals.length !== expectedNumFormals) {\n    throw errors$1.wrongNumberOfParameters(name, expectedNumFormals, formals.length, source);\n  }\n  return this.install(name, formals, body, ruleInfo.description, source);\n};\n\nGrammarDecl$1.prototype.install = function(name, formals, body, description, source) {\n  this.rules[name] = {\n    body: body.introduceParams(formals),\n    formals,\n    description,\n    source,\n  };\n  return this;\n};\n\n// Stuff that you should only do once\n\nGrammarDecl$1.prototype.withSuperGrammar = function(superGrammar) {\n  if (this.superGrammar) {\n    throw new Error('the super grammar of a GrammarDecl cannot be set more than once');\n  }\n  this.superGrammar = superGrammar;\n  this.rules = Object.create(superGrammar.rules);\n\n  // Grammars with an explicit supergrammar inherit a default start rule.\n  if (!superGrammar.isBuiltIn()) {\n    this.defaultStartRule = superGrammar.defaultStartRule;\n  }\n  return this;\n};\n\nGrammarDecl$1.prototype.withDefaultStartRule = function(ruleName) {\n  this.defaultStartRule = ruleName;\n  return this;\n};\n\nGrammarDecl$1.prototype.withSource = function(source) {\n  this.source = new InputStream(source).interval(0, source.length);\n  return this;\n};\n\n// Creates a Grammar instance, and if it passes the sanity checks, returns it.\nGrammarDecl$1.prototype.build = function() {\n  const grammar = new Grammar$3(\n      this.name,\n      this.ensureSuperGrammar(),\n      this.rules,\n      this.defaultStartRule\n  );\n\n  // TODO: change the pexpr.prototype.assert... methods to make them add\n  // exceptions to an array that's provided as an arg. Then we'll be able to\n  // show more than one error of the same type at a time.\n  // TODO: include the offending pexpr in the errors, that way we can show\n  // the part of the source that caused it.\n  const grammarErrors = [];\n  let grammarHasInvalidApplications = false;\n  Object.keys(grammar.rules).forEach(ruleName => {\n    const {body} = grammar.rules[ruleName];\n    try {\n      body.assertChoicesHaveUniformArity(ruleName);\n    } catch (e) {\n      grammarErrors.push(e);\n    }\n    try {\n      body.assertAllApplicationsAreValid(ruleName, grammar);\n    } catch (e) {\n      grammarErrors.push(e);\n      grammarHasInvalidApplications = true;\n    }\n  });\n  if (!grammarHasInvalidApplications) {\n    // The following check can only be done if the grammar has no invalid applications.\n    Object.keys(grammar.rules).forEach(ruleName => {\n      const {body} = grammar.rules[ruleName];\n      try {\n        body.assertIteratedExprsAreNotNullable(grammar, []);\n      } catch (e) {\n        grammarErrors.push(e);\n      }\n    });\n  }\n  if (grammarErrors.length > 0) {\n    errors$1.throwErrors(grammarErrors);\n  }\n  if (this.source) {\n    grammar.source = this.source;\n  }\n\n  return grammar;\n};\n\n// Rule declarations\n\nGrammarDecl$1.prototype.define = function(name, formals, body, description, source) {\n  this.ensureSuperGrammar();\n  if (this.superGrammar.rules[name]) {\n    throw errors$1.duplicateRuleDeclaration(name, this.name, this.superGrammar.name, source);\n  } else if (this.rules[name]) {\n    throw errors$1.duplicateRuleDeclaration(name, this.name, this.name, source);\n  }\n  const duplicateParameterNames = common$1.getDuplicates(formals);\n  if (duplicateParameterNames.length > 0) {\n    throw errors$1.duplicateParameterNames(name, duplicateParameterNames, source);\n  }\n  return this.install(name, formals, body, description, source);\n};\n\nGrammarDecl$1.prototype.override = function(name, formals, body, descIgnored, source) {\n  this.ensureSuperGrammarRuleForOverriding(name, source);\n  this.installOverriddenOrExtendedRule(name, formals, body, source);\n  return this;\n};\n\nGrammarDecl$1.prototype.extend = function(name, formals, fragment, descIgnored, source) {\n  const ruleInfo = this.ensureSuperGrammar().rules[name];\n  if (!ruleInfo) {\n    throw errors$1.cannotExtendUndeclaredRule(name, this.superGrammar.name, source);\n  }\n  const body = new pexprs$2.Extend(this.superGrammar, name, fragment);\n  body.source = fragment.source;\n  this.installOverriddenOrExtendedRule(name, formals, body, source);\n  return this;\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar GrammarDecl_1 = GrammarDecl$1;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst Grammar$2 = Grammar_1;\nconst GrammarDecl = GrammarDecl_1;\nconst pexprs$1 = pexprs$6;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction Builder$2() {}\n\nBuilder$2.prototype = {\n  currentDecl: null,\n  currentRuleName: null,\n\n  newGrammar(name) {\n    return new GrammarDecl(name);\n  },\n\n  grammar(metaInfo, name, superGrammar, defaultStartRule, rules) {\n    const gDecl = new GrammarDecl(name);\n    if (superGrammar) {\n      // `superGrammar` may be a recipe (i.e. an Array), or an actual grammar instance.\n      gDecl.withSuperGrammar(\n        superGrammar instanceof Grammar$2 ? superGrammar : this.fromRecipe(superGrammar)\n      );\n    }\n    if (defaultStartRule) {\n      gDecl.withDefaultStartRule(defaultStartRule);\n    }\n    if (metaInfo && metaInfo.source) {\n      gDecl.withSource(metaInfo.source);\n    }\n\n    this.currentDecl = gDecl;\n    Object.keys(rules).forEach(ruleName => {\n      this.currentRuleName = ruleName;\n      const ruleRecipe = rules[ruleName];\n\n      const action = ruleRecipe[0]; // define/extend/override\n      const metaInfo = ruleRecipe[1];\n      const description = ruleRecipe[2];\n      const formals = ruleRecipe[3];\n      const body = this.fromRecipe(ruleRecipe[4]);\n\n      let source;\n      if (gDecl.source && metaInfo && metaInfo.sourceInterval) {\n        source = gDecl.source.subInterval(\n            metaInfo.sourceInterval[0],\n            metaInfo.sourceInterval[1] - metaInfo.sourceInterval[0]\n        );\n      }\n      gDecl[action](ruleName, formals, body, description, source);\n    });\n    this.currentRuleName = this.currentDecl = null;\n    return gDecl.build();\n  },\n\n  terminal(x) {\n    return new pexprs$1.Terminal(x);\n  },\n\n  range(from, to) {\n    return new pexprs$1.Range(from, to);\n  },\n\n  param(index) {\n    return new pexprs$1.Param(index);\n  },\n\n  alt(...termArgs) {\n    let terms = [];\n    for (let arg of termArgs) {\n      if (!(arg instanceof pexprs$1.PExpr)) {\n        arg = this.fromRecipe(arg);\n      }\n      if (arg instanceof pexprs$1.Alt) {\n        terms = terms.concat(arg.terms);\n      } else {\n        terms.push(arg);\n      }\n    }\n    return terms.length === 1 ? terms[0] : new pexprs$1.Alt(terms);\n  },\n\n  seq(...factorArgs) {\n    let factors = [];\n    for (let arg of factorArgs) {\n      if (!(arg instanceof pexprs$1.PExpr)) {\n        arg = this.fromRecipe(arg);\n      }\n      if (arg instanceof pexprs$1.Seq) {\n        factors = factors.concat(arg.factors);\n      } else {\n        factors.push(arg);\n      }\n    }\n    return factors.length === 1 ? factors[0] : new pexprs$1.Seq(factors);\n  },\n\n  star(expr) {\n    if (!(expr instanceof pexprs$1.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new pexprs$1.Star(expr);\n  },\n\n  plus(expr) {\n    if (!(expr instanceof pexprs$1.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new pexprs$1.Plus(expr);\n  },\n\n  opt(expr) {\n    if (!(expr instanceof pexprs$1.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new pexprs$1.Opt(expr);\n  },\n\n  not(expr) {\n    if (!(expr instanceof pexprs$1.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new pexprs$1.Not(expr);\n  },\n\n  la(expr) {\n    // TODO: temporary to still be able to read old recipes\n    return this.lookahead(expr);\n  },\n\n  lookahead(expr) {\n    if (!(expr instanceof pexprs$1.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new pexprs$1.Lookahead(expr);\n  },\n\n  lex(expr) {\n    if (!(expr instanceof pexprs$1.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new pexprs$1.Lex(expr);\n  },\n\n  app(ruleName, optParams) {\n    if (optParams && optParams.length > 0) {\n      optParams = optParams.map(function(param) {\n        return param instanceof pexprs$1.PExpr ? param : this.fromRecipe(param);\n      }, this);\n    }\n    return new pexprs$1.Apply(ruleName, optParams);\n  },\n\n  // Note that unlike other methods in this class, this method cannot be used as a\n  // convenience constructor. It only works with recipes, because it relies on\n  // `this.currentDecl` and `this.currentRuleName` being set.\n  splice(beforeTerms, afterTerms) {\n    return new pexprs$1.Splice(\n        this.currentDecl.superGrammar,\n        this.currentRuleName,\n        beforeTerms.map(term => this.fromRecipe(term)),\n        afterTerms.map(term => this.fromRecipe(term))\n    );\n  },\n\n  fromRecipe(recipe) {\n    // the meta-info of 'grammar' is processed in Builder.grammar\n    const args = recipe[0] === 'grammar' ? recipe.slice(1) : recipe.slice(2);\n    const result = this[recipe[0]](...args);\n\n    const metaInfo = recipe[1];\n    if (metaInfo) {\n      if (metaInfo.sourceInterval && this.currentDecl) {\n        result.withSource(this.currentDecl.sourceInterval(...metaInfo.sourceInterval));\n      }\n    }\n    return result;\n  },\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar Builder_1 = Builder$2;\n\nvar name = \"ohm-js\";\nvar version$2 = \"16.6.0\";\nvar description = \"An object-oriented language for parsing and pattern matching\";\nvar repository = \"https://github.com/harc/ohm\";\nvar keywords = [\n\t\"parser\",\n\t\"compiler\",\n\t\"pattern matching\",\n\t\"pattern-matching\",\n\t\"ometa\",\n\t\"ometa/js\",\n\t\"ometa-js\",\n\t\"ometajs\",\n\t\"rapid\",\n\t\"prototyping\"\n];\nvar homepage = \"https://ohmjs.org\";\nvar bugs = \"https://github.com/harc/ohm/issues\";\nvar main = \"index.js\";\nvar module = \"dist/ohm.esm.js\";\nvar files = [\n\t\"src\",\n\t\"dist\",\n\t\"extras\",\n\t\"third_party\",\n\t\"index.d.ts\"\n];\nvar types = \"index.d.ts\";\nvar scripts = {\n\tprebootstrap: \"bash scripts/prebootstrap\",\n\tbootstrap: \"bash scripts/bootstrap --test || (echo 'Bootstrap failed.' && mv -v dist/ohm-grammar.js.old dist/ohm-grammar.js && mv -v dist/built-in-rules.js.old dist/built-in-rules.js && mv -v dist/operations-and-attributes.js.old dist/operations-and-attributes.js)\",\n\tbuild: \"yarn build-debug && webpack --mode=production\",\n\t\"build-debug\": \"webpack --mode=development && yarn build-esm && node scripts/generate-types.mjs\",\n\t\"build-esm\": \"rollup -c rollup.config.mjs\",\n\tclean: \"rm -f dist/ohm.js dist/ohm.min.js\",\n\tlint: \"eslint . --ignore-path ../.eslintignore\",\n\tformat: \"prettier . --write --ignore-path ../.prettierignore --config ../.prettierrc && eslint . --ignore-path ../.eslintignore --fix\",\n\ttest: \"ava && ava --config ava-ts.config.js test/test-typings.ts\",\n\t\"test-watch\": \"ava --watch\",\n\t\"pre-commit\": \"yarn run lint && yarn run build && yarn run test\",\n\tprepublishOnly: \"bash scripts/prepublishOnly\",\n\tprepack: \"cp ../../README.md . && yarn build\",\n\tpostpack: \"rm README.md\",\n\tpostpublish: \"echo '👉  Now go to https://github.com/harc/ohm/releases and create a release.'\",\n\t\"unsafe-bootstrap\": \"bash scripts/bootstrap\",\n\t\"update-contributors\": \"bash scripts/update-contributors\",\n\twatch: \"webpack --mode=development --watch\"\n};\nvar license = \"MIT\";\nvar author = \"Alex Warth <alexwarth@gmail.com> (http://tinlizzie.org/~awarth)\";\nvar contributors = [\n\t\"Patrick Dubroy <pdubroy@gmail.com>\",\n\t\"Meixian Li <lmeixian@gmail.com>\",\n\t\"Marko Röder <m.roeder@photon-software.de>\",\n\t\"Tony Garnock-Jones <tonygarnockjones@gmail.com>\",\n\t\"Saketh Kasibatla <sake.kasi@gmail.com>\",\n\t\"Lionel Landwerlin <llandwerlin@gmail.com>\",\n\t\"Jason Merrill <jwmerrill@gmail.com>\",\n\t\"Ray Toal <rtoal@lmu.edu>\",\n\t\"Yoshiki Ohshima <Yoshiki.Ohshima@acm.org>\",\n\t\"megabuz <3299889+megabuz@users.noreply.github.com>\",\n\t\"Jonathan Edwards <JonathanMEdwards@gmail.com>\",\n\t\"Milan Lajtoš <milan.lajtos@me.com>\",\n\t\"Neil Jewers <njjewers@uwaterloo.ca>\",\n\t\"stagas <gstagas@gmail.com>\",\n\t\"AngryPowman <angrypowman@qq.com>\",\n\t\"Arthur Carabott <arthurc@gmail.com>\",\n\t\"Casey Olson <casey.m.olson@gmail.com>\",\n\t\"Daniel Tomlinson <DanielTomlinson@me.com>\",\n\t\"Ian Harris <ian@fofgof.xyz>\",\n\t\"Justin Chase <justin.m.chase@gmail.com>\",\n\t\"Leslie Ying <acetophore@users.noreply.github.com>\",\n\t\"Luca Guzzon <luca.guzzon@gmail.com>\",\n\t\"Mike Niebling <(none)>\",\n\t\"Patrick Dubroy <patrick@sourcegraph.com>\",\n\t\"Pierre Donias <pierre.donias@gmail.com>\",\n\t\"Stan Rozenraukh <stan@stanistan.com>\",\n\t\"Stephan Seidt <stephan.seidt@gmail.com>\",\n\t\"Steve Phillips <steve@tryingtobeawesome.com>\",\n\t\"Szymon Kaliski <kaliskiszymon@gmail.com>\",\n\t\"Thomas Nyberg <tomnyberg@gmail.com>\",\n\t\"Vse Mozhet Byt <vsemozhetbyt@gmail.com>\",\n\t\"Wil Chung <10446+iamwilhelm@users.noreply.github.com>\",\n\t\"Zachary Sakowitz <zsakowitz@gmail.com>\",\n\t\"abego <ub@abego-software.de>\",\n\t\"acslk <d_vd415@hotmail.com>\",\n\t\"codeZeilen <codeZeilen@users.noreply.github.com>\",\n\t\"kassadin <kassadin@foxmail.com>\",\n\t\"owch <bowenrainyday@gmail.com>\",\n\t\"sfinnie <scott.finnie@gmail.com>\"\n];\nvar dependencies = {\n};\nvar devDependencies = {\n\t\"@ohm-js/cli\": \"^1.0.0\",\n\t\"@rollup/plugin-commonjs\": \"^21.0.1\",\n\t\"@rollup/plugin-json\": \"^4.1.0\",\n\t\"@rollup/plugin-node-resolve\": \"^13.1.3\",\n\tava: \"^3.15.0\",\n\t\"ava-spec\": \"^1.1.1\",\n\tdedent: \"^0.7.0\",\n\teslint: \"^7.9.0\",\n\t\"eslint-config-google\": \"^0.14.0\",\n\t\"eslint-plugin-ava\": \"^11.0.0\",\n\t\"eslint-plugin-camelcase-ohm\": \"^0.2.1\",\n\t\"eslint-plugin-no-extension-in-require\": \"^0.2.0\",\n\thusky: \"^4.2.5\",\n\tjsdom: \"^9.9.1\",\n\tjson: \"^9.0.6\",\n\tmarkscript: \"^0.5.0\",\n\t\"node-static\": \"^0.7.11\",\n\t\"ohm-grammar-ecmascript\": \"^1.0.0\",\n\trollup: \"^2.63.0\",\n\t\"ts-loader\": \"^8.0.4\",\n\t\"ts-node\": \"^9.0.0\",\n\ttypescript: \"^4.0.3\",\n\t\"walk-sync\": \"^2.2.0\",\n\twebpack: \"^4.44.2\",\n\t\"webpack-cli\": \"^3.3.12\"\n};\nvar engines = {\n\tnode: \">=0.12.1\"\n};\nvar require$$0 = {\n\tname: name,\n\tversion: version$2,\n\tdescription: description,\n\trepository: repository,\n\tkeywords: keywords,\n\thomepage: homepage,\n\tbugs: bugs,\n\tmain: main,\n\tmodule: module,\n\tfiles: files,\n\ttypes: types,\n\tscripts: scripts,\n\tlicense: license,\n\tauthor: author,\n\tcontributors: contributors,\n\tdependencies: dependencies,\n\tdevDependencies: devDependencies,\n\tengines: engines\n};\n\n/* global __GLOBAL_OHM_VERSION__ */\n\n// When running under Node, read the version from package.json. For the browser,\n// use a special global variable defined in the build process (see webpack.config.js).\nvar version$1 =\n  typeof __GLOBAL_OHM_VERSION__ === 'string' ?\n    __GLOBAL_OHM_VERSION__ :\n    require$$0.version;\n\nvar makeRecipe$5 = {};\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst Builder$1 = Builder_1;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction makeRecipe$4(recipe) {\n  if (typeof recipe === 'function') {\n    return recipe.call(new Builder$1());\n  } else {\n    if (typeof recipe === 'string') {\n      // stringified JSON recipe\n      recipe = JSON.parse(recipe);\n    }\n    return new Builder$1().fromRecipe(recipe);\n  }\n}\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmakeRecipe$5.makeRecipe = makeRecipe$4;\n\nvar {makeRecipe: makeRecipe$3} = makeRecipe$5;\nvar builtInRules = makeRecipe$3([\"grammar\",{\"source\":\"BuiltInRules {\\n\\n  alnum  (an alpha-numeric character)\\n    = letter\\n    | digit\\n\\n  letter  (a letter)\\n    = lower\\n    | upper\\n    | unicodeLtmo\\n\\n  digit  (a digit)\\n    = \\\"0\\\"..\\\"9\\\"\\n\\n  hexDigit  (a hexadecimal digit)\\n    = digit\\n    | \\\"a\\\"..\\\"f\\\"\\n    | \\\"A\\\"..\\\"F\\\"\\n\\n  ListOf<elem, sep>\\n    = NonemptyListOf<elem, sep>\\n    | EmptyListOf<elem, sep>\\n\\n  NonemptyListOf<elem, sep>\\n    = elem (sep elem)*\\n\\n  EmptyListOf<elem, sep>\\n    = /* nothing */\\n\\n  listOf<elem, sep>\\n    = nonemptyListOf<elem, sep>\\n    | emptyListOf<elem, sep>\\n\\n  nonemptyListOf<elem, sep>\\n    = elem (sep elem)*\\n\\n  emptyListOf<elem, sep>\\n    = /* nothing */\\n\\n  // Allows a syntactic rule application within a lexical context.\\n  applySyntactic<app> = app\\n}\"},\"BuiltInRules\",null,null,{\"alnum\":[\"define\",{\"sourceInterval\":[18,78]},\"an alpha-numeric character\",[],[\"alt\",{\"sourceInterval\":[60,78]},[\"app\",{\"sourceInterval\":[60,66]},\"letter\",[]],[\"app\",{\"sourceInterval\":[73,78]},\"digit\",[]]]],\"letter\":[\"define\",{\"sourceInterval\":[82,142]},\"a letter\",[],[\"alt\",{\"sourceInterval\":[107,142]},[\"app\",{\"sourceInterval\":[107,112]},\"lower\",[]],[\"app\",{\"sourceInterval\":[119,124]},\"upper\",[]],[\"app\",{\"sourceInterval\":[131,142]},\"unicodeLtmo\",[]]]],\"digit\":[\"define\",{\"sourceInterval\":[146,177]},\"a digit\",[],[\"range\",{\"sourceInterval\":[169,177]},\"0\",\"9\"]],\"hexDigit\":[\"define\",{\"sourceInterval\":[181,254]},\"a hexadecimal digit\",[],[\"alt\",{\"sourceInterval\":[219,254]},[\"app\",{\"sourceInterval\":[219,224]},\"digit\",[]],[\"range\",{\"sourceInterval\":[231,239]},\"a\",\"f\"],[\"range\",{\"sourceInterval\":[246,254]},\"A\",\"F\"]]],\"ListOf\":[\"define\",{\"sourceInterval\":[258,336]},null,[\"elem\",\"sep\"],[\"alt\",{\"sourceInterval\":[282,336]},[\"app\",{\"sourceInterval\":[282,307]},\"NonemptyListOf\",[[\"param\",{\"sourceInterval\":[297,301]},0],[\"param\",{\"sourceInterval\":[303,306]},1]]],[\"app\",{\"sourceInterval\":[314,336]},\"EmptyListOf\",[[\"param\",{\"sourceInterval\":[326,330]},0],[\"param\",{\"sourceInterval\":[332,335]},1]]]]],\"NonemptyListOf\":[\"define\",{\"sourceInterval\":[340,388]},null,[\"elem\",\"sep\"],[\"seq\",{\"sourceInterval\":[372,388]},[\"param\",{\"sourceInterval\":[372,376]},0],[\"star\",{\"sourceInterval\":[377,388]},[\"seq\",{\"sourceInterval\":[378,386]},[\"param\",{\"sourceInterval\":[378,381]},1],[\"param\",{\"sourceInterval\":[382,386]},0]]]]],\"EmptyListOf\":[\"define\",{\"sourceInterval\":[392,434]},null,[\"elem\",\"sep\"],[\"seq\",{\"sourceInterval\":[438,438]}]],\"listOf\":[\"define\",{\"sourceInterval\":[438,516]},null,[\"elem\",\"sep\"],[\"alt\",{\"sourceInterval\":[462,516]},[\"app\",{\"sourceInterval\":[462,487]},\"nonemptyListOf\",[[\"param\",{\"sourceInterval\":[477,481]},0],[\"param\",{\"sourceInterval\":[483,486]},1]]],[\"app\",{\"sourceInterval\":[494,516]},\"emptyListOf\",[[\"param\",{\"sourceInterval\":[506,510]},0],[\"param\",{\"sourceInterval\":[512,515]},1]]]]],\"nonemptyListOf\":[\"define\",{\"sourceInterval\":[520,568]},null,[\"elem\",\"sep\"],[\"seq\",{\"sourceInterval\":[552,568]},[\"param\",{\"sourceInterval\":[552,556]},0],[\"star\",{\"sourceInterval\":[557,568]},[\"seq\",{\"sourceInterval\":[558,566]},[\"param\",{\"sourceInterval\":[558,561]},1],[\"param\",{\"sourceInterval\":[562,566]},0]]]]],\"emptyListOf\":[\"define\",{\"sourceInterval\":[572,682]},null,[\"elem\",\"sep\"],[\"seq\",{\"sourceInterval\":[685,685]}]],\"applySyntactic\":[\"define\",{\"sourceInterval\":[685,710]},null,[\"app\"],[\"param\",{\"sourceInterval\":[707,710]},0]]}]);\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst Grammar$1 = Grammar_1;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nGrammar$1.BuiltInRules = builtInRules;\n\nvar {makeRecipe: makeRecipe$2} = makeRecipe$5;\nvar operationsAndAttributes = makeRecipe$2([\"grammar\",{\"source\":\"OperationsAndAttributes {\\n\\n  AttributeSignature =\\n    name\\n\\n  OperationSignature =\\n    name Formals?\\n\\n  Formals\\n    = \\\"(\\\" ListOf<name, \\\",\\\"> \\\")\\\"\\n\\n  name  (a name)\\n    = nameFirst nameRest*\\n\\n  nameFirst\\n    = \\\"_\\\"\\n    | letter\\n\\n  nameRest\\n    = \\\"_\\\"\\n    | alnum\\n\\n}\"},\"OperationsAndAttributes\",null,\"AttributeSignature\",{\"AttributeSignature\":[\"define\",{\"sourceInterval\":[29,58]},null,[],[\"app\",{\"sourceInterval\":[54,58]},\"name\",[]]],\"OperationSignature\":[\"define\",{\"sourceInterval\":[62,100]},null,[],[\"seq\",{\"sourceInterval\":[87,100]},[\"app\",{\"sourceInterval\":[87,91]},\"name\",[]],[\"opt\",{\"sourceInterval\":[92,100]},[\"app\",{\"sourceInterval\":[92,99]},\"Formals\",[]]]]],\"Formals\":[\"define\",{\"sourceInterval\":[104,143]},null,[],[\"seq\",{\"sourceInterval\":[118,143]},[\"terminal\",{\"sourceInterval\":[118,121]},\"(\"],[\"app\",{\"sourceInterval\":[122,139]},\"ListOf\",[[\"app\",{\"sourceInterval\":[129,133]},\"name\",[]],[\"terminal\",{\"sourceInterval\":[135,138]},\",\"]]],[\"terminal\",{\"sourceInterval\":[140,143]},\")\"]]],\"name\":[\"define\",{\"sourceInterval\":[147,187]},\"a name\",[],[\"seq\",{\"sourceInterval\":[168,187]},[\"app\",{\"sourceInterval\":[168,177]},\"nameFirst\",[]],[\"star\",{\"sourceInterval\":[178,187]},[\"app\",{\"sourceInterval\":[178,186]},\"nameRest\",[]]]]],\"nameFirst\":[\"define\",{\"sourceInterval\":[191,223]},null,[],[\"alt\",{\"sourceInterval\":[207,223]},[\"terminal\",{\"sourceInterval\":[207,210]},\"_\"],[\"app\",{\"sourceInterval\":[217,223]},\"letter\",[]]]],\"nameRest\":[\"define\",{\"sourceInterval\":[227,257]},null,[],[\"alt\",{\"sourceInterval\":[242,257]},[\"terminal\",{\"sourceInterval\":[242,245]},\"_\"],[\"app\",{\"sourceInterval\":[252,257]},\"alnum\",[]]]]}]);\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst Semantics = Semantics_1;\nconst util$1 = util$7;\n\n// ----------------- Deferred initialization -----------------\n\nutil$1.awaitBuiltInRules(builtInRules => {\n  const operationsAndAttributesGrammar = operationsAndAttributes;\n  initBuiltInSemantics(builtInRules);\n  initPrototypeParser(operationsAndAttributesGrammar); // requires BuiltInSemantics\n});\n\nfunction initBuiltInSemantics(builtInRules) {\n  const actions = {\n    empty() {\n      return this.iteration();\n    },\n    nonEmpty(first, _, rest) {\n      return this.iteration([first].concat(rest.children));\n    },\n  };\n\n  Semantics.BuiltInSemantics = Semantics.createSemantics(builtInRules, null).addOperation(\n      'asIteration',\n      {\n        emptyListOf: actions.empty,\n        nonemptyListOf: actions.nonEmpty,\n        EmptyListOf: actions.empty,\n        NonemptyListOf: actions.nonEmpty,\n      }\n  );\n}\n\nfunction initPrototypeParser(grammar) {\n  Semantics.prototypeGrammarSemantics = grammar.createSemantics().addOperation('parse', {\n    AttributeSignature(name) {\n      return {\n        name: name.parse(),\n        formals: [],\n      };\n    },\n    OperationSignature(name, optFormals) {\n      return {\n        name: name.parse(),\n        formals: optFormals.children.map(c => c.parse())[0] || [],\n      };\n    },\n    Formals(oparen, fs, cparen) {\n      return fs.asIteration().children.map(c => c.parse());\n    },\n    name(first, rest) {\n      return this.sourceString;\n    },\n  });\n  Semantics.prototypeGrammar = grammar;\n}\n\nvar {makeRecipe: makeRecipe$1} = makeRecipe$5;\nvar ohmGrammar$1 = makeRecipe$1([\"grammar\",{\"source\":\"Ohm {\\n\\n  Grammars\\n    = Grammar*\\n\\n  Grammar\\n    = ident SuperGrammar? \\\"{\\\" Rule* \\\"}\\\"\\n\\n  SuperGrammar\\n    = \\\"<:\\\" ident\\n\\n  Rule\\n    = ident Formals? ruleDescr? \\\"=\\\"  RuleBody  -- define\\n    | ident Formals?            \\\":=\\\" OverrideRuleBody  -- override\\n    | ident Formals?            \\\"+=\\\" RuleBody  -- extend\\n\\n  RuleBody\\n    = \\\"|\\\"? NonemptyListOf<TopLevelTerm, \\\"|\\\">\\n\\n  TopLevelTerm\\n    = Seq caseName  -- inline\\n    | Seq\\n\\n  OverrideRuleBody\\n    = \\\"|\\\"? NonemptyListOf<OverrideTopLevelTerm, \\\"|\\\">\\n\\n  OverrideTopLevelTerm\\n    = \\\"...\\\"  -- superSplice\\n    | TopLevelTerm\\n\\n  Formals\\n    = \\\"<\\\" ListOf<ident, \\\",\\\"> \\\">\\\"\\n\\n  Params\\n    = \\\"<\\\" ListOf<Seq, \\\",\\\"> \\\">\\\"\\n\\n  Alt\\n    = NonemptyListOf<Seq, \\\"|\\\">\\n\\n  Seq\\n    = Iter*\\n\\n  Iter\\n    = Pred \\\"*\\\"  -- star\\n    | Pred \\\"+\\\"  -- plus\\n    | Pred \\\"?\\\"  -- opt\\n    | Pred\\n\\n  Pred\\n    = \\\"~\\\" Lex  -- not\\n    | \\\"&\\\" Lex  -- lookahead\\n    | Lex\\n\\n  Lex\\n    = \\\"#\\\" Base  -- lex\\n    | Base\\n\\n  Base\\n    = ident Params? ~(ruleDescr? \\\"=\\\" | \\\":=\\\" | \\\"+=\\\")  -- application\\n    | oneCharTerminal \\\"..\\\" oneCharTerminal           -- range\\n    | terminal                                       -- terminal\\n    | \\\"(\\\" Alt \\\")\\\"                                    -- paren\\n\\n  ruleDescr  (a rule description)\\n    = \\\"(\\\" ruleDescrText \\\")\\\"\\n\\n  ruleDescrText\\n    = (~\\\")\\\" any)*\\n\\n  caseName\\n    = \\\"--\\\" (~\\\"\\\\n\\\" space)* name (~\\\"\\\\n\\\" space)* (\\\"\\\\n\\\" | &\\\"}\\\")\\n\\n  name  (a name)\\n    = nameFirst nameRest*\\n\\n  nameFirst\\n    = \\\"_\\\"\\n    | letter\\n\\n  nameRest\\n    = \\\"_\\\"\\n    | alnum\\n\\n  ident  (an identifier)\\n    = name\\n\\n  terminal\\n    = \\\"\\\\\\\"\\\" terminalChar* \\\"\\\\\\\"\\\"\\n\\n  oneCharTerminal\\n    = \\\"\\\\\\\"\\\" terminalChar \\\"\\\\\\\"\\\"\\n\\n  terminalChar\\n    = escapeChar\\n      | ~\\\"\\\\\\\\\\\" ~\\\"\\\\\\\"\\\" ~\\\"\\\\n\\\" \\\"\\\\u{0}\\\"..\\\"\\\\u{10FFFF}\\\"\\n\\n  escapeChar  (an escape sequence)\\n    = \\\"\\\\\\\\\\\\\\\\\\\"                                     -- backslash\\n    | \\\"\\\\\\\\\\\\\\\"\\\"                                     -- doubleQuote\\n    | \\\"\\\\\\\\\\\\'\\\"                                     -- singleQuote\\n    | \\\"\\\\\\\\b\\\"                                      -- backspace\\n    | \\\"\\\\\\\\n\\\"                                      -- lineFeed\\n    | \\\"\\\\\\\\r\\\"                                      -- carriageReturn\\n    | \\\"\\\\\\\\t\\\"                                      -- tab\\n    | \\\"\\\\\\\\u{\\\" hexDigit hexDigit? hexDigit?\\n             hexDigit? hexDigit? hexDigit? \\\"}\\\"   -- unicodeCodePoint\\n    | \\\"\\\\\\\\u\\\" hexDigit hexDigit hexDigit hexDigit  -- unicodeEscape\\n    | \\\"\\\\\\\\x\\\" hexDigit hexDigit                    -- hexEscape\\n\\n  space\\n   += comment\\n\\n  comment\\n    = \\\"//\\\" (~\\\"\\\\n\\\" any)* &(\\\"\\\\n\\\" | end)  -- singleLine\\n    | \\\"/*\\\" (~\\\"*/\\\" any)* \\\"*/\\\"  -- multiLine\\n\\n  tokens = token*\\n\\n  token = caseName | comment | ident | operator | punctuation | terminal | any\\n\\n  operator = \\\"<:\\\" | \\\"=\\\" | \\\":=\\\" | \\\"+=\\\" | \\\"*\\\" | \\\"+\\\" | \\\"?\\\" | \\\"~\\\" | \\\"&\\\"\\n\\n  punctuation = \\\"<\\\" | \\\">\\\" | \\\",\\\" | \\\"--\\\"\\n}\"},\"Ohm\",null,\"Grammars\",{\"Grammars\":[\"define\",{\"sourceInterval\":[9,32]},null,[],[\"star\",{\"sourceInterval\":[24,32]},[\"app\",{\"sourceInterval\":[24,31]},\"Grammar\",[]]]],\"Grammar\":[\"define\",{\"sourceInterval\":[36,83]},null,[],[\"seq\",{\"sourceInterval\":[50,83]},[\"app\",{\"sourceInterval\":[50,55]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[56,69]},[\"app\",{\"sourceInterval\":[56,68]},\"SuperGrammar\",[]]],[\"terminal\",{\"sourceInterval\":[70,73]},\"{\"],[\"star\",{\"sourceInterval\":[74,79]},[\"app\",{\"sourceInterval\":[74,78]},\"Rule\",[]]],[\"terminal\",{\"sourceInterval\":[80,83]},\"}\"]]],\"SuperGrammar\":[\"define\",{\"sourceInterval\":[87,116]},null,[],[\"seq\",{\"sourceInterval\":[106,116]},[\"terminal\",{\"sourceInterval\":[106,110]},\"<:\"],[\"app\",{\"sourceInterval\":[111,116]},\"ident\",[]]]],\"Rule_define\":[\"define\",{\"sourceInterval\":[131,181]},null,[],[\"seq\",{\"sourceInterval\":[131,170]},[\"app\",{\"sourceInterval\":[131,136]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[137,145]},[\"app\",{\"sourceInterval\":[137,144]},\"Formals\",[]]],[\"opt\",{\"sourceInterval\":[146,156]},[\"app\",{\"sourceInterval\":[146,155]},\"ruleDescr\",[]]],[\"terminal\",{\"sourceInterval\":[157,160]},\"=\"],[\"app\",{\"sourceInterval\":[162,170]},\"RuleBody\",[]]]],\"Rule_override\":[\"define\",{\"sourceInterval\":[188,248]},null,[],[\"seq\",{\"sourceInterval\":[188,235]},[\"app\",{\"sourceInterval\":[188,193]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[194,202]},[\"app\",{\"sourceInterval\":[194,201]},\"Formals\",[]]],[\"terminal\",{\"sourceInterval\":[214,218]},\":=\"],[\"app\",{\"sourceInterval\":[219,235]},\"OverrideRuleBody\",[]]]],\"Rule_extend\":[\"define\",{\"sourceInterval\":[255,305]},null,[],[\"seq\",{\"sourceInterval\":[255,294]},[\"app\",{\"sourceInterval\":[255,260]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[261,269]},[\"app\",{\"sourceInterval\":[261,268]},\"Formals\",[]]],[\"terminal\",{\"sourceInterval\":[281,285]},\"+=\"],[\"app\",{\"sourceInterval\":[286,294]},\"RuleBody\",[]]]],\"Rule\":[\"define\",{\"sourceInterval\":[120,305]},null,[],[\"alt\",{\"sourceInterval\":[131,305]},[\"app\",{\"sourceInterval\":[131,170]},\"Rule_define\",[]],[\"app\",{\"sourceInterval\":[188,235]},\"Rule_override\",[]],[\"app\",{\"sourceInterval\":[255,294]},\"Rule_extend\",[]]]],\"RuleBody\":[\"define\",{\"sourceInterval\":[309,362]},null,[],[\"seq\",{\"sourceInterval\":[324,362]},[\"opt\",{\"sourceInterval\":[324,328]},[\"terminal\",{\"sourceInterval\":[324,327]},\"|\"]],[\"app\",{\"sourceInterval\":[329,362]},\"NonemptyListOf\",[[\"app\",{\"sourceInterval\":[344,356]},\"TopLevelTerm\",[]],[\"terminal\",{\"sourceInterval\":[358,361]},\"|\"]]]]],\"TopLevelTerm_inline\":[\"define\",{\"sourceInterval\":[385,408]},null,[],[\"seq\",{\"sourceInterval\":[385,397]},[\"app\",{\"sourceInterval\":[385,388]},\"Seq\",[]],[\"app\",{\"sourceInterval\":[389,397]},\"caseName\",[]]]],\"TopLevelTerm\":[\"define\",{\"sourceInterval\":[366,418]},null,[],[\"alt\",{\"sourceInterval\":[385,418]},[\"app\",{\"sourceInterval\":[385,397]},\"TopLevelTerm_inline\",[]],[\"app\",{\"sourceInterval\":[415,418]},\"Seq\",[]]]],\"OverrideRuleBody\":[\"define\",{\"sourceInterval\":[422,491]},null,[],[\"seq\",{\"sourceInterval\":[445,491]},[\"opt\",{\"sourceInterval\":[445,449]},[\"terminal\",{\"sourceInterval\":[445,448]},\"|\"]],[\"app\",{\"sourceInterval\":[450,491]},\"NonemptyListOf\",[[\"app\",{\"sourceInterval\":[465,485]},\"OverrideTopLevelTerm\",[]],[\"terminal\",{\"sourceInterval\":[487,490]},\"|\"]]]]],\"OverrideTopLevelTerm_superSplice\":[\"define\",{\"sourceInterval\":[522,543]},null,[],[\"terminal\",{\"sourceInterval\":[522,527]},\"...\"]],\"OverrideTopLevelTerm\":[\"define\",{\"sourceInterval\":[495,562]},null,[],[\"alt\",{\"sourceInterval\":[522,562]},[\"app\",{\"sourceInterval\":[522,527]},\"OverrideTopLevelTerm_superSplice\",[]],[\"app\",{\"sourceInterval\":[550,562]},\"TopLevelTerm\",[]]]],\"Formals\":[\"define\",{\"sourceInterval\":[566,606]},null,[],[\"seq\",{\"sourceInterval\":[580,606]},[\"terminal\",{\"sourceInterval\":[580,583]},\"<\"],[\"app\",{\"sourceInterval\":[584,602]},\"ListOf\",[[\"app\",{\"sourceInterval\":[591,596]},\"ident\",[]],[\"terminal\",{\"sourceInterval\":[598,601]},\",\"]]],[\"terminal\",{\"sourceInterval\":[603,606]},\">\"]]],\"Params\":[\"define\",{\"sourceInterval\":[610,647]},null,[],[\"seq\",{\"sourceInterval\":[623,647]},[\"terminal\",{\"sourceInterval\":[623,626]},\"<\"],[\"app\",{\"sourceInterval\":[627,643]},\"ListOf\",[[\"app\",{\"sourceInterval\":[634,637]},\"Seq\",[]],[\"terminal\",{\"sourceInterval\":[639,642]},\",\"]]],[\"terminal\",{\"sourceInterval\":[644,647]},\">\"]]],\"Alt\":[\"define\",{\"sourceInterval\":[651,685]},null,[],[\"app\",{\"sourceInterval\":[661,685]},\"NonemptyListOf\",[[\"app\",{\"sourceInterval\":[676,679]},\"Seq\",[]],[\"terminal\",{\"sourceInterval\":[681,684]},\"|\"]]]],\"Seq\":[\"define\",{\"sourceInterval\":[689,704]},null,[],[\"star\",{\"sourceInterval\":[699,704]},[\"app\",{\"sourceInterval\":[699,703]},\"Iter\",[]]]],\"Iter_star\":[\"define\",{\"sourceInterval\":[719,736]},null,[],[\"seq\",{\"sourceInterval\":[719,727]},[\"app\",{\"sourceInterval\":[719,723]},\"Pred\",[]],[\"terminal\",{\"sourceInterval\":[724,727]},\"*\"]]],\"Iter_plus\":[\"define\",{\"sourceInterval\":[743,760]},null,[],[\"seq\",{\"sourceInterval\":[743,751]},[\"app\",{\"sourceInterval\":[743,747]},\"Pred\",[]],[\"terminal\",{\"sourceInterval\":[748,751]},\"+\"]]],\"Iter_opt\":[\"define\",{\"sourceInterval\":[767,783]},null,[],[\"seq\",{\"sourceInterval\":[767,775]},[\"app\",{\"sourceInterval\":[767,771]},\"Pred\",[]],[\"terminal\",{\"sourceInterval\":[772,775]},\"?\"]]],\"Iter\":[\"define\",{\"sourceInterval\":[708,794]},null,[],[\"alt\",{\"sourceInterval\":[719,794]},[\"app\",{\"sourceInterval\":[719,727]},\"Iter_star\",[]],[\"app\",{\"sourceInterval\":[743,751]},\"Iter_plus\",[]],[\"app\",{\"sourceInterval\":[767,775]},\"Iter_opt\",[]],[\"app\",{\"sourceInterval\":[790,794]},\"Pred\",[]]]],\"Pred_not\":[\"define\",{\"sourceInterval\":[809,824]},null,[],[\"seq\",{\"sourceInterval\":[809,816]},[\"terminal\",{\"sourceInterval\":[809,812]},\"~\"],[\"app\",{\"sourceInterval\":[813,816]},\"Lex\",[]]]],\"Pred_lookahead\":[\"define\",{\"sourceInterval\":[831,852]},null,[],[\"seq\",{\"sourceInterval\":[831,838]},[\"terminal\",{\"sourceInterval\":[831,834]},\"&\"],[\"app\",{\"sourceInterval\":[835,838]},\"Lex\",[]]]],\"Pred\":[\"define\",{\"sourceInterval\":[798,862]},null,[],[\"alt\",{\"sourceInterval\":[809,862]},[\"app\",{\"sourceInterval\":[809,816]},\"Pred_not\",[]],[\"app\",{\"sourceInterval\":[831,838]},\"Pred_lookahead\",[]],[\"app\",{\"sourceInterval\":[859,862]},\"Lex\",[]]]],\"Lex_lex\":[\"define\",{\"sourceInterval\":[876,892]},null,[],[\"seq\",{\"sourceInterval\":[876,884]},[\"terminal\",{\"sourceInterval\":[876,879]},\"#\"],[\"app\",{\"sourceInterval\":[880,884]},\"Base\",[]]]],\"Lex\":[\"define\",{\"sourceInterval\":[866,903]},null,[],[\"alt\",{\"sourceInterval\":[876,903]},[\"app\",{\"sourceInterval\":[876,884]},\"Lex_lex\",[]],[\"app\",{\"sourceInterval\":[899,903]},\"Base\",[]]]],\"Base_application\":[\"define\",{\"sourceInterval\":[918,979]},null,[],[\"seq\",{\"sourceInterval\":[918,963]},[\"app\",{\"sourceInterval\":[918,923]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[924,931]},[\"app\",{\"sourceInterval\":[924,930]},\"Params\",[]]],[\"not\",{\"sourceInterval\":[932,963]},[\"alt\",{\"sourceInterval\":[934,962]},[\"seq\",{\"sourceInterval\":[934,948]},[\"opt\",{\"sourceInterval\":[934,944]},[\"app\",{\"sourceInterval\":[934,943]},\"ruleDescr\",[]]],[\"terminal\",{\"sourceInterval\":[945,948]},\"=\"]],[\"terminal\",{\"sourceInterval\":[951,955]},\":=\"],[\"terminal\",{\"sourceInterval\":[958,962]},\"+=\"]]]]],\"Base_range\":[\"define\",{\"sourceInterval\":[986,1041]},null,[],[\"seq\",{\"sourceInterval\":[986,1022]},[\"app\",{\"sourceInterval\":[986,1001]},\"oneCharTerminal\",[]],[\"terminal\",{\"sourceInterval\":[1002,1006]},\"..\"],[\"app\",{\"sourceInterval\":[1007,1022]},\"oneCharTerminal\",[]]]],\"Base_terminal\":[\"define\",{\"sourceInterval\":[1048,1106]},null,[],[\"app\",{\"sourceInterval\":[1048,1056]},\"terminal\",[]]],\"Base_paren\":[\"define\",{\"sourceInterval\":[1113,1168]},null,[],[\"seq\",{\"sourceInterval\":[1113,1124]},[\"terminal\",{\"sourceInterval\":[1113,1116]},\"(\"],[\"app\",{\"sourceInterval\":[1117,1120]},\"Alt\",[]],[\"terminal\",{\"sourceInterval\":[1121,1124]},\")\"]]],\"Base\":[\"define\",{\"sourceInterval\":[907,1168]},null,[],[\"alt\",{\"sourceInterval\":[918,1168]},[\"app\",{\"sourceInterval\":[918,963]},\"Base_application\",[]],[\"app\",{\"sourceInterval\":[986,1022]},\"Base_range\",[]],[\"app\",{\"sourceInterval\":[1048,1056]},\"Base_terminal\",[]],[\"app\",{\"sourceInterval\":[1113,1124]},\"Base_paren\",[]]]],\"ruleDescr\":[\"define\",{\"sourceInterval\":[1172,1231]},\"a rule description\",[],[\"seq\",{\"sourceInterval\":[1210,1231]},[\"terminal\",{\"sourceInterval\":[1210,1213]},\"(\"],[\"app\",{\"sourceInterval\":[1214,1227]},\"ruleDescrText\",[]],[\"terminal\",{\"sourceInterval\":[1228,1231]},\")\"]]],\"ruleDescrText\":[\"define\",{\"sourceInterval\":[1235,1266]},null,[],[\"star\",{\"sourceInterval\":[1255,1266]},[\"seq\",{\"sourceInterval\":[1256,1264]},[\"not\",{\"sourceInterval\":[1256,1260]},[\"terminal\",{\"sourceInterval\":[1257,1260]},\")\"]],[\"app\",{\"sourceInterval\":[1261,1264]},\"any\",[]]]]],\"caseName\":[\"define\",{\"sourceInterval\":[1270,1338]},null,[],[\"seq\",{\"sourceInterval\":[1285,1338]},[\"terminal\",{\"sourceInterval\":[1285,1289]},\"--\"],[\"star\",{\"sourceInterval\":[1290,1304]},[\"seq\",{\"sourceInterval\":[1291,1302]},[\"not\",{\"sourceInterval\":[1291,1296]},[\"terminal\",{\"sourceInterval\":[1292,1296]},\"\\n\"]],[\"app\",{\"sourceInterval\":[1297,1302]},\"space\",[]]]],[\"app\",{\"sourceInterval\":[1305,1309]},\"name\",[]],[\"star\",{\"sourceInterval\":[1310,1324]},[\"seq\",{\"sourceInterval\":[1311,1322]},[\"not\",{\"sourceInterval\":[1311,1316]},[\"terminal\",{\"sourceInterval\":[1312,1316]},\"\\n\"]],[\"app\",{\"sourceInterval\":[1317,1322]},\"space\",[]]]],[\"alt\",{\"sourceInterval\":[1326,1337]},[\"terminal\",{\"sourceInterval\":[1326,1330]},\"\\n\"],[\"lookahead\",{\"sourceInterval\":[1333,1337]},[\"terminal\",{\"sourceInterval\":[1334,1337]},\"}\"]]]]],\"name\":[\"define\",{\"sourceInterval\":[1342,1382]},\"a name\",[],[\"seq\",{\"sourceInterval\":[1363,1382]},[\"app\",{\"sourceInterval\":[1363,1372]},\"nameFirst\",[]],[\"star\",{\"sourceInterval\":[1373,1382]},[\"app\",{\"sourceInterval\":[1373,1381]},\"nameRest\",[]]]]],\"nameFirst\":[\"define\",{\"sourceInterval\":[1386,1418]},null,[],[\"alt\",{\"sourceInterval\":[1402,1418]},[\"terminal\",{\"sourceInterval\":[1402,1405]},\"_\"],[\"app\",{\"sourceInterval\":[1412,1418]},\"letter\",[]]]],\"nameRest\":[\"define\",{\"sourceInterval\":[1422,1452]},null,[],[\"alt\",{\"sourceInterval\":[1437,1452]},[\"terminal\",{\"sourceInterval\":[1437,1440]},\"_\"],[\"app\",{\"sourceInterval\":[1447,1452]},\"alnum\",[]]]],\"ident\":[\"define\",{\"sourceInterval\":[1456,1489]},\"an identifier\",[],[\"app\",{\"sourceInterval\":[1485,1489]},\"name\",[]]],\"terminal\":[\"define\",{\"sourceInterval\":[1493,1531]},null,[],[\"seq\",{\"sourceInterval\":[1508,1531]},[\"terminal\",{\"sourceInterval\":[1508,1512]},\"\\\"\"],[\"star\",{\"sourceInterval\":[1513,1526]},[\"app\",{\"sourceInterval\":[1513,1525]},\"terminalChar\",[]]],[\"terminal\",{\"sourceInterval\":[1527,1531]},\"\\\"\"]]],\"oneCharTerminal\":[\"define\",{\"sourceInterval\":[1535,1579]},null,[],[\"seq\",{\"sourceInterval\":[1557,1579]},[\"terminal\",{\"sourceInterval\":[1557,1561]},\"\\\"\"],[\"app\",{\"sourceInterval\":[1562,1574]},\"terminalChar\",[]],[\"terminal\",{\"sourceInterval\":[1575,1579]},\"\\\"\"]]],\"terminalChar\":[\"define\",{\"sourceInterval\":[1583,1660]},null,[],[\"alt\",{\"sourceInterval\":[1602,1660]},[\"app\",{\"sourceInterval\":[1602,1612]},\"escapeChar\",[]],[\"seq\",{\"sourceInterval\":[1621,1660]},[\"not\",{\"sourceInterval\":[1621,1626]},[\"terminal\",{\"sourceInterval\":[1622,1626]},\"\\\\\"]],[\"not\",{\"sourceInterval\":[1627,1632]},[\"terminal\",{\"sourceInterval\":[1628,1632]},\"\\\"\"]],[\"not\",{\"sourceInterval\":[1633,1638]},[\"terminal\",{\"sourceInterval\":[1634,1638]},\"\\n\"]],[\"range\",{\"sourceInterval\":[1639,1660]},\"\\u0000\",\"􏿿\"]]]],\"escapeChar_backslash\":[\"define\",{\"sourceInterval\":[1703,1758]},null,[],[\"terminal\",{\"sourceInterval\":[1703,1709]},\"\\\\\\\\\"]],\"escapeChar_doubleQuote\":[\"define\",{\"sourceInterval\":[1765,1822]},null,[],[\"terminal\",{\"sourceInterval\":[1765,1771]},\"\\\\\\\"\"]],\"escapeChar_singleQuote\":[\"define\",{\"sourceInterval\":[1829,1886]},null,[],[\"terminal\",{\"sourceInterval\":[1829,1835]},\"\\\\'\"]],\"escapeChar_backspace\":[\"define\",{\"sourceInterval\":[1893,1948]},null,[],[\"terminal\",{\"sourceInterval\":[1893,1898]},\"\\\\b\"]],\"escapeChar_lineFeed\":[\"define\",{\"sourceInterval\":[1955,2009]},null,[],[\"terminal\",{\"sourceInterval\":[1955,1960]},\"\\\\n\"]],\"escapeChar_carriageReturn\":[\"define\",{\"sourceInterval\":[2016,2076]},null,[],[\"terminal\",{\"sourceInterval\":[2016,2021]},\"\\\\r\"]],\"escapeChar_tab\":[\"define\",{\"sourceInterval\":[2083,2132]},null,[],[\"terminal\",{\"sourceInterval\":[2083,2088]},\"\\\\t\"]],\"escapeChar_unicodeCodePoint\":[\"define\",{\"sourceInterval\":[2139,2243]},null,[],[\"seq\",{\"sourceInterval\":[2139,2221]},[\"terminal\",{\"sourceInterval\":[2139,2145]},\"\\\\u{\"],[\"app\",{\"sourceInterval\":[2146,2154]},\"hexDigit\",[]],[\"opt\",{\"sourceInterval\":[2155,2164]},[\"app\",{\"sourceInterval\":[2155,2163]},\"hexDigit\",[]]],[\"opt\",{\"sourceInterval\":[2165,2174]},[\"app\",{\"sourceInterval\":[2165,2173]},\"hexDigit\",[]]],[\"opt\",{\"sourceInterval\":[2188,2197]},[\"app\",{\"sourceInterval\":[2188,2196]},\"hexDigit\",[]]],[\"opt\",{\"sourceInterval\":[2198,2207]},[\"app\",{\"sourceInterval\":[2198,2206]},\"hexDigit\",[]]],[\"opt\",{\"sourceInterval\":[2208,2217]},[\"app\",{\"sourceInterval\":[2208,2216]},\"hexDigit\",[]]],[\"terminal\",{\"sourceInterval\":[2218,2221]},\"}\"]]],\"escapeChar_unicodeEscape\":[\"define\",{\"sourceInterval\":[2250,2309]},null,[],[\"seq\",{\"sourceInterval\":[2250,2291]},[\"terminal\",{\"sourceInterval\":[2250,2255]},\"\\\\u\"],[\"app\",{\"sourceInterval\":[2256,2264]},\"hexDigit\",[]],[\"app\",{\"sourceInterval\":[2265,2273]},\"hexDigit\",[]],[\"app\",{\"sourceInterval\":[2274,2282]},\"hexDigit\",[]],[\"app\",{\"sourceInterval\":[2283,2291]},\"hexDigit\",[]]]],\"escapeChar_hexEscape\":[\"define\",{\"sourceInterval\":[2316,2371]},null,[],[\"seq\",{\"sourceInterval\":[2316,2339]},[\"terminal\",{\"sourceInterval\":[2316,2321]},\"\\\\x\"],[\"app\",{\"sourceInterval\":[2322,2330]},\"hexDigit\",[]],[\"app\",{\"sourceInterval\":[2331,2339]},\"hexDigit\",[]]]],\"escapeChar\":[\"define\",{\"sourceInterval\":[1664,2371]},\"an escape sequence\",[],[\"alt\",{\"sourceInterval\":[1703,2371]},[\"app\",{\"sourceInterval\":[1703,1709]},\"escapeChar_backslash\",[]],[\"app\",{\"sourceInterval\":[1765,1771]},\"escapeChar_doubleQuote\",[]],[\"app\",{\"sourceInterval\":[1829,1835]},\"escapeChar_singleQuote\",[]],[\"app\",{\"sourceInterval\":[1893,1898]},\"escapeChar_backspace\",[]],[\"app\",{\"sourceInterval\":[1955,1960]},\"escapeChar_lineFeed\",[]],[\"app\",{\"sourceInterval\":[2016,2021]},\"escapeChar_carriageReturn\",[]],[\"app\",{\"sourceInterval\":[2083,2088]},\"escapeChar_tab\",[]],[\"app\",{\"sourceInterval\":[2139,2221]},\"escapeChar_unicodeCodePoint\",[]],[\"app\",{\"sourceInterval\":[2250,2291]},\"escapeChar_unicodeEscape\",[]],[\"app\",{\"sourceInterval\":[2316,2339]},\"escapeChar_hexEscape\",[]]]],\"space\":[\"extend\",{\"sourceInterval\":[2375,2394]},null,[],[\"app\",{\"sourceInterval\":[2387,2394]},\"comment\",[]]],\"comment_singleLine\":[\"define\",{\"sourceInterval\":[2412,2458]},null,[],[\"seq\",{\"sourceInterval\":[2412,2443]},[\"terminal\",{\"sourceInterval\":[2412,2416]},\"//\"],[\"star\",{\"sourceInterval\":[2417,2429]},[\"seq\",{\"sourceInterval\":[2418,2427]},[\"not\",{\"sourceInterval\":[2418,2423]},[\"terminal\",{\"sourceInterval\":[2419,2423]},\"\\n\"]],[\"app\",{\"sourceInterval\":[2424,2427]},\"any\",[]]]],[\"lookahead\",{\"sourceInterval\":[2430,2443]},[\"alt\",{\"sourceInterval\":[2432,2442]},[\"terminal\",{\"sourceInterval\":[2432,2436]},\"\\n\"],[\"app\",{\"sourceInterval\":[2439,2442]},\"end\",[]]]]]],\"comment_multiLine\":[\"define\",{\"sourceInterval\":[2465,2501]},null,[],[\"seq\",{\"sourceInterval\":[2465,2487]},[\"terminal\",{\"sourceInterval\":[2465,2469]},\"/*\"],[\"star\",{\"sourceInterval\":[2470,2482]},[\"seq\",{\"sourceInterval\":[2471,2480]},[\"not\",{\"sourceInterval\":[2471,2476]},[\"terminal\",{\"sourceInterval\":[2472,2476]},\"*/\"]],[\"app\",{\"sourceInterval\":[2477,2480]},\"any\",[]]]],[\"terminal\",{\"sourceInterval\":[2483,2487]},\"*/\"]]],\"comment\":[\"define\",{\"sourceInterval\":[2398,2501]},null,[],[\"alt\",{\"sourceInterval\":[2412,2501]},[\"app\",{\"sourceInterval\":[2412,2443]},\"comment_singleLine\",[]],[\"app\",{\"sourceInterval\":[2465,2487]},\"comment_multiLine\",[]]]],\"tokens\":[\"define\",{\"sourceInterval\":[2505,2520]},null,[],[\"star\",{\"sourceInterval\":[2514,2520]},[\"app\",{\"sourceInterval\":[2514,2519]},\"token\",[]]]],\"token\":[\"define\",{\"sourceInterval\":[2524,2600]},null,[],[\"alt\",{\"sourceInterval\":[2532,2600]},[\"app\",{\"sourceInterval\":[2532,2540]},\"caseName\",[]],[\"app\",{\"sourceInterval\":[2543,2550]},\"comment\",[]],[\"app\",{\"sourceInterval\":[2553,2558]},\"ident\",[]],[\"app\",{\"sourceInterval\":[2561,2569]},\"operator\",[]],[\"app\",{\"sourceInterval\":[2572,2583]},\"punctuation\",[]],[\"app\",{\"sourceInterval\":[2586,2594]},\"terminal\",[]],[\"app\",{\"sourceInterval\":[2597,2600]},\"any\",[]]]],\"operator\":[\"define\",{\"sourceInterval\":[2604,2669]},null,[],[\"alt\",{\"sourceInterval\":[2615,2669]},[\"terminal\",{\"sourceInterval\":[2615,2619]},\"<:\"],[\"terminal\",{\"sourceInterval\":[2622,2625]},\"=\"],[\"terminal\",{\"sourceInterval\":[2628,2632]},\":=\"],[\"terminal\",{\"sourceInterval\":[2635,2639]},\"+=\"],[\"terminal\",{\"sourceInterval\":[2642,2645]},\"*\"],[\"terminal\",{\"sourceInterval\":[2648,2651]},\"+\"],[\"terminal\",{\"sourceInterval\":[2654,2657]},\"?\"],[\"terminal\",{\"sourceInterval\":[2660,2663]},\"~\"],[\"terminal\",{\"sourceInterval\":[2666,2669]},\"&\"]]],\"punctuation\":[\"define\",{\"sourceInterval\":[2673,2709]},null,[],[\"alt\",{\"sourceInterval\":[2687,2709]},[\"terminal\",{\"sourceInterval\":[2687,2690]},\"<\"],[\"terminal\",{\"sourceInterval\":[2693,2696]},\">\"],[\"terminal\",{\"sourceInterval\":[2699,2702]},\",\"],[\"terminal\",{\"sourceInterval\":[2705,2709]},\"--\"]]]}]);\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst Builder = Builder_1;\nconst Grammar = Grammar_1;\nconst Namespace = Namespace_1;\nconst common = common$l;\nconst errors = errors$9;\nconst pexprs = pexprs$6;\nconst util = util$7;\nconst version = version$1;\nconst {makeRecipe} = makeRecipe$5;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// The metagrammar, i.e. the grammar for Ohm grammars. Initialized at the\n// bottom of this file because loading the grammar requires Ohm itself.\nlet ohmGrammar;\n\nconst superSplicePlaceholder = Object.create(pexprs.PExpr.prototype);\n\nconst isBuffer = obj =>\n  !!obj.constructor &&\n  typeof obj.constructor.isBuffer === 'function' &&\n  obj.constructor.isBuffer(obj);\n\n// Returns a Grammar instance (i.e., an object with a `match` method) for\n// `tree`, which is the concrete syntax tree of a user-written grammar.\n// The grammar will be assigned into `namespace` under the name of the grammar\n// as specified in the source.\nfunction buildGrammar(match, namespace, optOhmGrammarForTesting) {\n  const builder = new Builder();\n  let decl;\n  let currentRuleName;\n  let currentRuleFormals;\n  let overriding = false;\n  const metaGrammar = optOhmGrammarForTesting || ohmGrammar;\n\n  // A visitor that produces a Grammar instance from the CST.\n  const helpers = metaGrammar.createSemantics().addOperation('visit', {\n    Grammars(grammarIter) {\n      return grammarIter.children.map(c => c.visit());\n    },\n    Grammar(id, s, _open, rules, _close) {\n      const grammarName = id.visit();\n      decl = builder.newGrammar(grammarName, namespace);\n      s.child(0) && s.child(0).visit();\n      rules.children.map(c => c.visit());\n      const g = decl.build();\n      g.source = this.source.trimmed();\n      if (grammarName in namespace) {\n        throw errors.duplicateGrammarDeclaration(g, namespace);\n      }\n      namespace[grammarName] = g;\n      return g;\n    },\n\n    SuperGrammar(_, n) {\n      const superGrammarName = n.visit();\n      if (superGrammarName === 'null') {\n        decl.withSuperGrammar(null);\n      } else {\n        if (!namespace || !(superGrammarName in namespace)) {\n          throw errors.undeclaredGrammar(superGrammarName, namespace, n.source);\n        }\n        decl.withSuperGrammar(namespace[superGrammarName]);\n      }\n    },\n\n    Rule_define(n, fs, d, _, b) {\n      currentRuleName = n.visit();\n      currentRuleFormals = fs.children.map(c => c.visit())[0] || [];\n      // If there is no default start rule yet, set it now. This must be done before visiting\n      // the body, because it might contain an inline rule definition.\n      if (!decl.defaultStartRule && decl.ensureSuperGrammar() !== Grammar.ProtoBuiltInRules) {\n        decl.withDefaultStartRule(currentRuleName);\n      }\n      const body = b.visit();\n      const description = d.children.map(c => c.visit())[0];\n      const source = this.source.trimmed();\n      return decl.define(currentRuleName, currentRuleFormals, body, description, source);\n    },\n    Rule_override(n, fs, _, b) {\n      currentRuleName = n.visit();\n      currentRuleFormals = fs.children.map(c => c.visit())[0] || [];\n\n      const source = this.source.trimmed();\n      decl.ensureSuperGrammarRuleForOverriding(currentRuleName, source);\n\n      overriding = true;\n      const body = b.visit();\n      overriding = false;\n      return decl.override(currentRuleName, currentRuleFormals, body, null, source);\n    },\n    Rule_extend(n, fs, _, b) {\n      currentRuleName = n.visit();\n      currentRuleFormals = fs.children.map(c => c.visit())[0] || [];\n      const body = b.visit();\n      const source = this.source.trimmed();\n      return decl.extend(currentRuleName, currentRuleFormals, body, null, source);\n    },\n    RuleBody(_, terms) {\n      return builder.alt(...terms.visit()).withSource(this.source);\n    },\n    OverrideRuleBody(_, terms) {\n      const args = terms.visit();\n\n      // Check if the super-splice operator (`...`) appears in the terms.\n      const expansionPos = args.indexOf(superSplicePlaceholder);\n      if (expansionPos >= 0) {\n        const beforeTerms = args.slice(0, expansionPos);\n        const afterTerms = args.slice(expansionPos + 1);\n\n        // Ensure it appears no more than once.\n        afterTerms.forEach(t => {\n          if (t === superSplicePlaceholder) throw errors.multipleSuperSplices(t);\n        });\n\n        return new pexprs.Splice(\n            decl.superGrammar,\n            currentRuleName,\n            beforeTerms,\n            afterTerms\n        ).withSource(this.source);\n      } else {\n        return builder.alt(...args).withSource(this.source);\n      }\n    },\n    Formals(opointy, fs, cpointy) {\n      return fs.visit();\n    },\n\n    Params(opointy, ps, cpointy) {\n      return ps.visit();\n    },\n\n    Alt(seqs) {\n      return builder.alt(...seqs.visit()).withSource(this.source);\n    },\n\n    TopLevelTerm_inline(b, n) {\n      const inlineRuleName = currentRuleName + '_' + n.visit();\n      const body = b.visit();\n      const source = this.source.trimmed();\n      const isNewRuleDeclaration = !(\n        decl.superGrammar && decl.superGrammar.rules[inlineRuleName]\n      );\n      if (overriding && !isNewRuleDeclaration) {\n        decl.override(inlineRuleName, currentRuleFormals, body, null, source);\n      } else {\n        decl.define(inlineRuleName, currentRuleFormals, body, null, source);\n      }\n      const params = currentRuleFormals.map(formal => builder.app(formal));\n      return builder.app(inlineRuleName, params).withSource(body.source);\n    },\n    OverrideTopLevelTerm_superSplice(_) {\n      return superSplicePlaceholder;\n    },\n\n    Seq(expr) {\n      return builder.seq(...expr.children.map(c => c.visit())).withSource(this.source);\n    },\n\n    Iter_star(x, _) {\n      return builder.star(x.visit()).withSource(this.source);\n    },\n    Iter_plus(x, _) {\n      return builder.plus(x.visit()).withSource(this.source);\n    },\n    Iter_opt(x, _) {\n      return builder.opt(x.visit()).withSource(this.source);\n    },\n\n    Pred_not(_, x) {\n      return builder.not(x.visit()).withSource(this.source);\n    },\n    Pred_lookahead(_, x) {\n      return builder.lookahead(x.visit()).withSource(this.source);\n    },\n\n    Lex_lex(_, x) {\n      return builder.lex(x.visit()).withSource(this.source);\n    },\n\n    Base_application(rule, ps) {\n      const params = ps.children.map(c => c.visit())[0] || [];\n      return builder.app(rule.visit(), params).withSource(this.source);\n    },\n    Base_range(from, _, to) {\n      return builder.range(from.visit(), to.visit()).withSource(this.source);\n    },\n    Base_terminal(expr) {\n      return builder.terminal(expr.visit()).withSource(this.source);\n    },\n    Base_paren(open, x, close) {\n      return x.visit();\n    },\n\n    ruleDescr(open, t, close) {\n      return t.visit();\n    },\n    ruleDescrText(_) {\n      return this.sourceString.trim();\n    },\n\n    caseName(_, space1, n, space2, end) {\n      return n.visit();\n    },\n\n    name(first, rest) {\n      return this.sourceString;\n    },\n    nameFirst(expr) {},\n    nameRest(expr) {},\n\n    terminal(open, cs, close) {\n      return cs.children.map(c => c.visit()).join('');\n    },\n\n    oneCharTerminal(open, c, close) {\n      return c.visit();\n    },\n\n    escapeChar(c) {\n      try {\n        return common.unescapeCodePoint(this.sourceString);\n      } catch (err) {\n        if (err instanceof RangeError && err.message.startsWith('Invalid code point ')) {\n          throw errors.invalidCodePoint(c);\n        }\n        throw err; // Rethrow\n      }\n    },\n\n    NonemptyListOf(x, _, xs) {\n      return [x.visit()].concat(xs.children.map(c => c.visit()));\n    },\n    EmptyListOf() {\n      return [];\n    },\n\n    _terminal() {\n      return this.sourceString;\n    },\n  });\n  return helpers(match).visit();\n}\n\nfunction compileAndLoad(source, namespace) {\n  const m = ohmGrammar.match(source, 'Grammars');\n  if (m.failed()) {\n    throw errors.grammarSyntaxError(m);\n  }\n  return buildGrammar(m, namespace);\n}\n\nfunction grammar(source, optNamespace) {\n  const ns = grammars(source, optNamespace);\n\n  // Ensure that the source contained no more than one grammar definition.\n  const grammarNames = Object.keys(ns);\n  if (grammarNames.length === 0) {\n    throw new Error('Missing grammar definition');\n  } else if (grammarNames.length > 1) {\n    const secondGrammar = ns[grammarNames[1]];\n    const interval = secondGrammar.source;\n    throw new Error(\n        util.getLineAndColumnMessage(interval.sourceString, interval.startIdx) +\n        'Found more than one grammar definition -- use ohm.grammars() instead.'\n    );\n  }\n  return ns[grammarNames[0]]; // Return the one and only grammar.\n}\n\nfunction grammars(source, optNamespace) {\n  const ns = Namespace.extend(Namespace.asNamespace(optNamespace));\n  if (typeof source !== 'string') {\n    // For convenience, detect Node.js Buffer objects and automatically call toString().\n    if (isBuffer(source)) {\n      source = source.toString();\n    } else {\n      throw new TypeError(\n          'Expected string as first argument, got ' + common.unexpectedObjToString(source)\n      );\n    }\n  }\n  compileAndLoad(source, ns);\n  return ns;\n}\n\nfunction grammarFromScriptElement(optNode) {\n  throw new Error(\n      'grammarFromScriptElement was removed in Ohm v16.0. See https://ohmjs.org/d/gfs for more info.'\n  );\n}\n\nfunction grammarsFromScriptElements(optNodeOrNodeList) {\n  throw new Error(\n      'grammarsFromScriptElements was removed in Ohm v16.0. See https://ohmjs.org/d/gfs for more info.'\n  );\n}\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\n// Stuff that users should know about\nmain$1.exports = {\n  createNamespace: Namespace.createNamespace,\n  grammar,\n  grammars,\n  grammarFromScriptElement,\n  grammarsFromScriptElements,\n  makeRecipe,\n  ohmGrammar: null, // Initialized below, after Grammar.BuiltInRules.\n  pexprs,\n  util,\n  version,\n};\n\n// Stuff for testing, etc.\nmain$1.exports._buildGrammar = buildGrammar;\n\n// Late initialization for stuff that is bootstrapped.\n\n\nutil.announceBuiltInRules(Grammar.BuiltInRules);\n\nmain$1.exports.ohmGrammar = ohmGrammar = ohmGrammar$1;\nGrammar.initApplicationParser(ohmGrammar, buildGrammar);\n\nvar ohm = main$1.exports;\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nconst {assert} = common$l;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// Helpers\n\nfunction getProp(name, thing, fn) {\n  return fn(thing[name]);\n}\n\nfunction mapProp(name, thing, fn) {\n  return thing[name].map(fn);\n}\n\n// Returns a function that will walk a single property of a node.\n// `descriptor` is a string indicating the property name, optionally ending\n// with '[]' (e.g., 'children[]').\nfunction getPropWalkFn(descriptor) {\n  const parts = descriptor.split(/ ?\\[\\]/);\n  if (parts.length === 2) {\n    return mapProp.bind(null, parts[0]);\n  }\n  return getProp.bind(null, descriptor);\n}\n\nfunction getProps(walkFns, thing, fn) {\n  return walkFns.map(walkFn => walkFn(thing, fn));\n}\n\nfunction getWalkFn(shape) {\n  if (typeof shape === 'string') {\n    return getProps.bind(null, [getPropWalkFn(shape)]);\n  } else if (Array.isArray(shape)) {\n    return getProps.bind(null, shape.map(getPropWalkFn));\n  } else {\n    assert(typeof shape === 'function', 'Expected a string, Array, or function');\n    assert(shape.length === 2, 'Expected a function of arity 2, got ' + shape.length);\n    return shape;\n  }\n}\n\nfunction isRestrictedIdentifier(str) {\n  return /^[a-zA-Z_][0-9a-zA-Z_]*$/.test(str);\n}\n\nfunction trim(s) {\n  return s.trim();\n}\n\nfunction parseSignature(sig) {\n  const parts = sig.split(/[()]/).map(trim);\n  if (parts.length === 3 && parts[2] === '') {\n    const name = parts[0];\n    let params = [];\n    if (parts[1].length > 0) {\n      params = parts[1].split(',').map(trim);\n    }\n    if (isRestrictedIdentifier(name) && params.every(isRestrictedIdentifier)) {\n      return {name, formals: params};\n    }\n  }\n  throw new Error('Invalid operation signature: ' + sig);\n}\n\n/*\n  A VisitorFamily contains a set of recursive operations that are defined over some kind of\n  tree structure. The `config` parameter specifies how to walk the tree:\n  - 'getTag' is function which, given a node in the tree, returns the node's 'tag' (type)\n  - 'shapes' an object that maps from a tag to a value that describes how to recursively\n    evaluate the operation for nodes of that type. The value can be:\n    * a string indicating the property name that holds that node's only child\n    * an Array of property names (or an empty array indicating a leaf type), or\n    * a function taking two arguments (node, fn), and returning an Array which is the result\n      of apply `fn` to each of the node's children.\n */\nfunction VisitorFamily(config) {\n  this._shapes = config.shapes;\n  this._getTag = config.getTag;\n\n  this.Adapter = function(thing, family) {\n    this._adaptee = thing;\n    this._family = family;\n  };\n  this.Adapter.prototype.valueOf = function() {\n    throw new Error('heeey!');\n  };\n  this.operations = {};\n\n  this._arities = Object.create(null);\n  this._getChildren = Object.create(null);\n\n  Object.keys(this._shapes).forEach(k => {\n    const shape = this._shapes[k];\n    this._getChildren[k] = getWalkFn(shape);\n\n    // A function means the arity isn't fixed, so don't put an entry in the arity map.\n    if (typeof shape !== 'function') {\n      this._arities[k] = Array.isArray(shape) ? shape.length : 1;\n    }\n  });\n  this._wrap = thing => new this.Adapter(thing, this);\n}\n\nVisitorFamily.prototype.wrap = function(thing) {\n  return this._wrap(thing);\n};\n\nVisitorFamily.prototype._checkActionDict = function(dict) {\n  Object.keys(dict).forEach(k => {\n    assert(k in this._getChildren, \"Unrecognized action name '\" + k + \"'\");\n    const action = dict[k];\n    assert(typeof action === 'function', \"Key '\" + k + \"': expected function, got \" + action);\n    if (k in this._arities) {\n      const expected = this._arities[k];\n      const actual = dict[k].length;\n      assert(\n          actual === expected,\n          \"Action '\" + k + \"' has the wrong arity: expected \" + expected + ', got ' + actual\n      );\n    }\n  });\n};\n\nVisitorFamily.prototype.addOperation = function(signature, actions) {\n  const sig = parseSignature(signature);\n  const {name} = sig;\n  this._checkActionDict(actions);\n  this.operations[name] = {\n    name,\n    formals: sig.formals,\n    actions,\n  };\n\n  const family = this;\n  this.Adapter.prototype[name] = function(...args) {\n    const tag = family._getTag(this._adaptee);\n    assert(tag in family._getChildren, \"getTag returned unrecognized tag '\" + tag + \"'\");\n    assert(tag in actions, \"No action for '\" + tag + \"' in operation '\" + name + \"'\");\n\n    // Create an \"arguments object\" from the arguments that were passed to this\n    // operation / attribute.\n    const argsObj = Object.create(null);\n    for (const [i, val] of Object.entries(args)) {\n      argsObj[sig.formals[i]] = val;\n    }\n\n    const oldArgs = this.args;\n    this.args = argsObj;\n    const ans = actions[tag].apply(\n        this,\n        family._getChildren[tag](this._adaptee, family._wrap)\n    );\n    this.args = oldArgs;\n    return ans;\n  };\n  return this;\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar VisitorFamily_1 = VisitorFamily;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\nconst defaultOperation = {\n  _terminal() {\n    return this.sourceString;\n  },\n\n  _nonterminal(...children) {\n    const {ctorName} = this._node;\n    const {mapping} = this.args;\n\n    // without customization\n    if (!Object.prototype.hasOwnProperty.call(mapping, ctorName)) {\n      // lexical rule\n      if (this.isLexical()) {\n        return this.sourceString;\n      }\n\n      // singular node (e.g. only surrounded by literals or lookaheads)\n      const realChildren = children.filter(child => !child.isTerminal());\n      if (realChildren.length === 1) {\n        return realChildren[0].toAST(mapping);\n      }\n\n      // rest: terms with multiple children\n    }\n\n    // direct forward\n    if (typeof mapping[ctorName] === 'number') {\n      return children[mapping[ctorName]].toAST(mapping);\n    }\n\n    // named/mapped children or unnamed children ('0', '1', '2', ...)\n    const propMap = mapping[ctorName] || children;\n    const node = {\n      type: ctorName,\n    };\n    // eslint-disable-next-line guard-for-in\n    for (const prop in propMap) {\n      const mappedProp = mapping[ctorName] && mapping[ctorName][prop];\n      if (typeof mappedProp === 'number') {\n        // direct forward\n        node[prop] = children[mappedProp].toAST(mapping);\n      } else if (\n        typeof mappedProp === 'string' ||\n        typeof mappedProp === 'boolean' ||\n        mappedProp === null\n      ) {\n        // primitive value\n        node[prop] = mappedProp;\n      } else if (typeof mappedProp === 'object' && mappedProp instanceof Number) {\n        // primitive number (must be unboxed)\n        node[prop] = Number(mappedProp);\n      } else if (typeof mappedProp === 'function') {\n        // computed value\n        node[prop] = mappedProp.call(this, children);\n      } else if (mappedProp === undefined) {\n        if (children[prop] && !children[prop].isTerminal()) {\n          node[prop] = children[prop].toAST(mapping);\n        } else {\n          // delete predefined 'type' properties, like 'type', if explicitely removed\n          delete node[prop];\n        }\n      }\n    }\n    return node;\n  },\n\n  _iter(...children) {\n    if (this._node.isOptional()) {\n      if (this.numChildren === 0) {\n        return null;\n      } else {\n        return children[0].toAST(this.args.mapping);\n      }\n    }\n\n    return children.map(function(child) {\n      return child.toAST(this.args.mapping);\n    }, this);\n  },\n\n  NonemptyListOf(first, sep, rest) {\n    return [first.toAST(this.args.mapping)].concat(rest.toAST(this.args.mapping));\n  },\n\n  EmptyListOf() {\n    return [];\n  },\n};\n\n// Returns a plain JavaScript object that includes an abstract syntax tree (AST)\n// for the given match result `res` containg a concrete syntax tree (CST) and grammar.\n// The optional `mapping` parameter can be used to customize how the nodes of the CST\n// are mapped to the AST (see /doc/extras.md#toastmatchresult-mapping).\nfunction toAST(res, mapping) {\n  if (typeof res.failed !== 'function' || res.failed()) {\n    throw new Error('toAST() expects a succesful MatchResult as first parameter');\n  }\n\n  mapping = Object.assign({}, mapping);\n  const operation = Object.assign({}, defaultOperation);\n  for (const termName in mapping) {\n    if (typeof mapping[termName] === 'function') {\n      operation[termName] = mapping[termName];\n      delete mapping[termName];\n    }\n  }\n  const g = res._cst.grammar;\n  const s = g.createSemantics().addOperation('toAST(mapping)', operation);\n  return s(res).toAST(mapping);\n}\n\n// Returns a semantics containg the toAST(mapping) operation for the given grammar g.\nfunction semanticsForToAST(g) {\n  if (typeof g.createSemantics !== 'function') {\n    throw new Error('semanticsToAST() expects a Grammar as parameter');\n  }\n\n  return g.createSemantics().addOperation('toAST(mapping)', defaultOperation);\n}\n\nvar semanticsToAST = {\n  helper: toAST,\n  semantics: semanticsForToAST,\n};\n\nvar extras = {\n  VisitorFamily: VisitorFamily_1,\n  semanticsForToAST: semanticsToAST.semantics,\n  toAST: semanticsToAST.helper,\n};\n\nexport { ohm as default, extras };\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    !subscription.closed && subscriber.next(this._value);\n    return subscription;\n  }\n\n  getValue(): T {\n    const { hasError, thrownError, _value } = this;\n    if (hasError) {\n      throw thrownError;\n    }\n    this._throwIfClosed();\n    return _value;\n  }\n\n  next(value: T): void {\n    super.next((this._value = value));\n  }\n}\n","/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n","/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n","/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subscription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n","import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n","import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n","/**\n * Symbol.observable or a string \"@@observable\". Used for interop\n *\n * @deprecated We will no longer be exporting this symbol in upcoming versions of RxJS.\n * Instead polyfill and use Symbol.observable directly *or* use https://www.npmjs.com/package/symbol-observable\n */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n","/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n","import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observerOrNext?: Partial<Observer<T>> | ((value: T) => void)): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * #### Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   * Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * #### Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n  closed = false;\n\n  private currentObservers: Observer<T>[] | null = null;\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  observers: Observer<T>[] = [];\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  isStopped = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  hasError = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  thrownError: any = null;\n\n  /**\n   * Creates a \"subject\" by basically gluing an observer to an observable.\n   *\n   * @nocollapse\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\n   */\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  constructor() {\n    // NOTE: This must be here to obscure Observable's constructor.\n    super();\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator as any;\n    return subject as any;\n  }\n\n  /** @internal */\n  protected _throwIfClosed() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  }\n\n  next(value: T) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        if (!this.currentObservers) {\n          this.currentObservers = Array.from(this.observers);\n        }\n        for (const observer of this.currentObservers) {\n          observer.next(value);\n        }\n      }\n    });\n  }\n\n  error(err: any) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.hasError = this.isStopped = true;\n        this.thrownError = err;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.error(err);\n        }\n      }\n    });\n  }\n\n  complete() {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.isStopped = true;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.complete();\n        }\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.isStopped = this.closed = true;\n    this.observers = this.currentObservers = null!;\n  }\n\n  get observed() {\n    return this.observers?.length > 0;\n  }\n\n  /** @internal */\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    this._throwIfClosed();\n    return super._trySubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._checkFinalizedStatuses(subscriber);\n    return this._innerSubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\n    const { hasError, isStopped, observers } = this;\n    if (hasError || isStopped) {\n      return EMPTY_SUBSCRIPTION;\n    }\n    this.currentObservers = null;\n    observers.push(subscriber);\n    return new Subscription(() => {\n      this.currentObservers = null;\n      arrRemove(observers, subscriber);\n    });\n  }\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\n    const { hasError, thrownError, isStopped } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create custom Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable: any = new Observable<T>();\n    observable.source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n    public destination?: Observer<T>,\n    source?: Observable<T>\n  ) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    this.destination?.next?.(value);\n  }\n\n  error(err: any) {\n    this.destination?.error?.(err);\n  }\n\n  complete() {\n    this.destination?.complete?.();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\n  }\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","export const isDisplay = (a) => typeof a?.toString === \"function\" ||\n    typeof a === \"string\";\nexport const display = (a) => {\n    if (isDisplay(a)) {\n        const str = a.toString();\n        if (str === \"[object Object]\")\n            return JSON.stringify(a);\n        return str;\n    }\n    return JSON.stringify(a);\n};\n","export function range(start, end, stride = 1) {\n    const range = [];\n    for (let i = start; i < end; i += stride) {\n        range.push(i);\n    }\n    return range;\n}\n","export const isNone = (s) => s === null;\nexport const isSome = (s) => s != null;\nexport function None(_) {\n    return null;\n}\nexport function Some(t) {\n    return t;\n}\nexport const isOk = (t) => t.ok !== undefined;\nexport const isErr = (e) => e.err !== undefined;\nexport const isResult = (t) => isOk(t) || isErr(t);\nexport function Ok(t) {\n    return t.ok\n        ? t.ok\n        : {\n            ok: t,\n            map(fn) {\n                return fn(Ok(this));\n            },\n        };\n}\nexport function Err(e) {\n    return (e.err ?? {\n        err: e,\n        map(_fn) {\n            return this;\n        },\n    });\n}\nexport function unwrap(t) {\n    if (isNone(t)) {\n        throw new Error(`Attempted to unwrap None`);\n    }\n    if (isErr(t)) {\n        throw Err(t);\n    }\n    if (isOk(t)) {\n        return Ok(t);\n    }\n    return t;\n}\nexport function unwrapOr(t, def) {\n    if (isNone(t)) {\n        return def;\n    }\n    if (isErr(t)) {\n        return def;\n    }\n    if (isOk(t)) {\n        return Ok(t);\n    }\n    return t;\n}\nexport function unwrapOrElse(t, def) {\n    if (isNone(t)) {\n        return def();\n    }\n    if (isErr(t)) {\n        return def();\n    }\n    if (isOk(t)) {\n        return Ok(t);\n    }\n    return t;\n}\n"],"names":["main$1","exports","Failure$2","pexpr","text","type","isValidType","Error","this","fluffy","prototype","getPExpr","getText","getType","isDescription","isStringTerminal","isCode","isFluffy","makeFluffy","clearFluffy","subsumes","that","toString","JSON","stringify","clone","failure","toKey","Failure_1","common$l","escapeStringFor","c","String","fromCharCode","charCodeAt","abstract","optMethodName","methodName","constructor","name","assert","cond","message","defineLazyProperty","obj","propName","getterFn","memo","Object","defineProperty","get","call","assign","repeatFn","fn","n","arr","push","repeatStr","str","Array","join","repeat","x","getDuplicates","array","duplicates","idx","length","lastIndexOf","indexOf","copyWithoutDuplicates","noDuplicates","forEach","entry","isSyntactic","ruleName","firstChar","toUpperCase","isLexical","padLeft","len","optChar","ch","StringBuffer","strings","append","contents","escapeUnicode","fromCodePoint","parseInt","unescapeCodePoint","s","charAt","slice","unexpectedObjToString","baseToString","typeName","e","common$k","Node","matchLength","ctorName","numChildren","children","childAt","indexOfChild","arg","hasChildren","hasNoChildren","onlyChild","firstChild","lastChild","childBefore","child","childIdx","childAfter","isTerminal","isNonterminal","isIteration","isOptional","nodes$1","TerminalNode","primitiveValue","NonterminalNode","childOffsets","super","IterationNode","optional","pexprsMain","UnicodeCategories","Lu","Ll","Lt","Lm","Lo","Nl","Nd","Mn","Mc","Pc","Zs","L","Ltmo","common$j","PExpr$1","withSource","interval","source","trimmed","any","create","end","Alt","terms","Iter","expr","Star","Plus","Opt","operator","minNumMatches","maxNumMatches","Number","POSITIVE_INFINITY","PExpr","Terminal","Range","from","to","matchCodePoint","Param","index","Extend","superGrammar","body","rules","Splice","beforeTerms","afterTerms","origBody","expansionPos","Seq","factors","Not","Lookahead","Lex","Apply","args","toMemoKey","_memoKey","value","UnicodeChar","category","pattern","common$i","pexprs$l","Namespace$2","allowsSkippingPrecedingSpace","asNamespace","objOrNamespace","createNamespace","optProps","extend","namespace","TypeError","ns","enumerable","writable","configurable","Namespace_1","assert$3","Namespace$1","pexprs$k","createError","optInterval","getLineAndColumnMessage","shortMessage","errors$9","applicationOfSyntacticRuleFromLexicalContext","applyExpr","applySyntacticWithLexicalRuleApplication","cannotExtendUndeclaredRule","grammarName","optSource","cannotOverrideUndeclaredRule","duplicateGrammarDeclaration","grammar","duplicateParameterNames","duplicatePropertyNames","duplicateRuleDeclaration","declGrammarName","inconsistentArity","expected","actual","incorrectArgumentType","expectedType","intervalSourcesDontMatch","invalidCodePoint","applyWrapper","node","_node","digitIntervals","map","d","fullInterval","coverageWith","invalidConstructorCall","invalidParameter","getArity","grammarSyntaxError","matchFailure","getExpectedText","getInterval","kleeneExprHasNullableOperand","kleeneExpr","applicationStack","actuals","substituteParams","app","missingSemanticAction","stack","stackTrace","info","ans","moreInfo","multipleSuperSplices","undeclaredGrammar","undeclaredRule","unnecessaryExperimentalApplySyntactic","wrongNumberOfArguments","wrongNumberOfParameters","throwErrors","errors","messages","concat","multipleErrors","util$7","common","padNumbersToEqualLength","maxLen","Math","max","strcpy","dest","src","offset","origDestLen","substr","lineAndColumnToMessage","lineAndCol","sb","lineNum","colNum","lineNumbers","prevLine","nextLine","appendLine","num","content","prefix","line","lineLen","indicationLine","ranges","i","startIdx","endIdx","lineStartOffset","min","gutterWidth","replace","builtInRulesCallbacks","awaitBuiltInRules","cb","announceBuiltInRules","getLineAndColumn","currOffset","prevLineStartOffset","lineEndOffset","nextLineEndOffset","uniqueId","idCounter","errors$8","pexprs$j","BuiltInRules","lexifyCount","g","assertAllApplicationsAreValid","_assertAllApplicationsAreValid","skipSyntacticCheck","ruleInfo","isContextSyntactic","formals","isBuiltInApplySyntactic","applySyntactic","isBuiltInCaseInsensitive","caseInsensitive","common$h","errors$7","pexprs$i","assertChoicesHaveUniformArity","arity","term","otherArity","actualArity","expectedArity","common$g","errors$6","pexprs$h","assertIteratedExprsAreNotNullable","isNullable","assert$2","errors$5","util$5","Interval$3","sourceString","coverage","firstInterval","intervals","collapsedLeft","collapsedRight","range","minus","relativeTo","match","subInterval","newStartIdx","defineProperties","undefined","_contents","Interval_1","Interval$2","common$f","Flags","succeeded","isRootNode","isImplicitSpaces","isMemoized","isHeadOfLeftRecursion","terminatesLR","asEscapedString","Trace$2","input","pos1","pos2","bindings","optChildren","pos","terminatingLREntry","_flags","SKIP","toDisplayString","keys","mask","set","val","cloneWithExpr","recordLRTermination","ruleBodyTrace","walk","visitorObjOrFn","optThisArg","visitor","_walk","parent","depth","recurse","enter","exit","excerpt","getInputExcerpt","displayString","Trace_1","Trace$1","common$e","errors$4","nodes","pexprs$g","TerminalNode$1","IterationNode$1","eval","state","inputStream","origPos","next","pushBinding","processFailure","atEnd","matchString","cp","nextCodePoint","nextCharCode","codePointAt","currentApplication","enterLexifiedContext","exitLexifiedContext","factor","cols","colOffsets","numMatches","prevPos","_applicationStack","row","_bindings","splice","rowOffsets","_bindingOffsets","posToOffset","lastCol","lastColOffsets","endOffset","pushFailuresInfo","popFailuresInfo","caller","posInfo","getCurrentPosInfo","isActive","handleCycle","memoKey","memoRec","shouldUseMemoizedResult","hasNecessaryInfo","useMemoizedResult","reallyEval","currentLeftRecursion","headApplication","updateInvolvedApplicationMemoKeys","memoize","examinedLength","rightmostFailureOffset","startLeftRecursion","origPosInfo","description","enterApplication","origInputStreamExaminedLength","evalOnce","currentLR","growSeedResult","endLeftRecursion","_getRightmostFailureOffset","isInvolved","failuresAtRightmostPosition","cloneRecordedFailures","isTracing","getTraceEntry","traceEntry","exitApplication","offsets","lrMemoRec","newValue","seedTrace","trace","pop","test","common$d","pexprs$f","common$c","pexprs$e","getMetaInfo","grammarInterval","metaInfo","adjusted","sourceInterval","outputRecipe","toLowerCase","common$b","pexprs$d","introduceParams","common$a","pexprs$c","_isNullable","some","every","key","hasOwnProperty","inlined","common$9","pexprs$b","common$8","pexprs$a","isRestrictedJSIdentifier","resolveDuplicatedNames","argumentNameList","count","argName","dupArgName","subscript","toArgumentNameList","firstArgIndex","noDupCheck","termArgNameLists","numArgs","colIdx","col","rowIdx","uniqueNames","factorArgumentNameList","exprArgumentString","common$7","pexprs$9","ps","Failure$1","common$6","pexprs$8","toFailure","t","f","common$5","pexprs$7","pexprs$6","Failure","assert$1","CaseInsensitiveTerminal$1","param","_getString","terminal","matchStr","CaseInsensitiveTerminal_1","Interval$1","InputStream$3","nextChar","optIgnoreCase","sourceSlice","optEndIdx","InputStream_1","common$4","util$4","Interval","MatchResult$2","matcher","startExpr","cst","cstOffset","rightmostFailurePosition","optRecordedFailures","_cst","_cstOffset","_rightmostFailurePosition","_rightmostFailures","failed","detail","getRightmostFailurePosition","errorInfo","getRightmostFailures","setInput","matchResultWithFailures","_match","failures","filter","MatchResult_1","PosInfo$1","applicationMemoKeyStack","maxExaminedLength","maxRightmostFailureOffset","application","isLeftRecursion","nextLeftRecursion","indexOfFirstInvolvedRule","involvedApplicationMemoKeys","applicationMemoKey","clearObsoleteEntries","invalidatedIdx","k","InputStream$2","MatchResult$1","PosInfo","Trace","pexprs$5","builtInApplySyntacticBody","builtInRules","applySpaces","MatchState$1","optPositionToRecordFailures","memoTable","_posStack","inLexifiedContextStack","_rightmostFailurePositionStack","_recordedFailuresStack","positionToRecordFailures","recordedFailures","optNode","inSyntacticContext","inLexifiedContext","skipSpaces","popBinding","skipSpacesIfInSyntacticContext","maybeSkipSpacesBefore","numBindings","truncateBindings","newLength","getPosInfo","recordFailure","shouldCloneIfNew","recordFailures","getMemoizedTraceEntry","memoRecRightmostFailurePosition","origNumBindings","origRecordedFailures","memoPos","origTrace","getMatchResult","rightmostFailures","getTrace","matchResult","rootTrace","result","MatchState","pexprs$4","Matcher$1","getInput","replaceInputRange","currentInput","restOfMemoTable","optStartApplicationStr","_getStartExpr","tracing","applicationStr","defaultStartRule","startApp","parseApplication","Matcher_1","InputStream$1","MatchResult","common$3","errors$3","util$2","globalActionStack","prop","Wrapper","baseInterval","_baseInterval","_childWrappers","_forgetMemoizedResultFor","attributeName","_semantics","attributeKeys","childWrapper","childNode","base","wrap","_children","iteration","optChildWrappers","childWrappers","childNodes","iter","wrapper","Semantics$2","superSemantics","self","checkedActionDicts","checkActionDictsIfHaventAlready","equals","_inheritsFrom","operations","attributes","parseSignature$1","signature","prototypeGrammar","r","prototypeGrammarSemantics","parse","checkActionDicts","checkActionDict","toRecipe","semanticsOnly","hasSuperSemantics","BuiltInSemantics","_getSemantics","superSemanticsGrammar","relatedGrammar","semanticOperations","actionDict","builtInDefault","method","srcArray","actionName","trim","addOperationOrAttribute","typePlural","parsedNameAndFormalArgs","assertNewName","doIt","formal","apply","newDefaultAction","realActionDict","_default","Operation","Attribute","thisThing","arguments","argsObj","entries","oldArgs","execute","extendOperationOrAttribute","inheritedFormals","inheritedActionDict","newActionDict","optBaseInterval","createSemantics","optSuperSemantics","proxy","addOperation","extendOperation","addAttribute","extendAttribute","_getActionDict","operationOrAttributeName","action","_remove","semantic","getOperationNames","getAttributeNames","getGrammar","bind","_checkTopDownActionDict","semantics","nodeWrapper","actionFn","_nonterminal","Semantics_1","CaseInsensitiveTerminal","Matcher","Semantics$1","common$2","errors$2","pexprs$3","SPECIAL_ACTION_NAMES","getSortedRuleValues","sort","Grammar$4","optDefaultStartRule","ohmGrammar$2","buildGrammar$1","initApplicationParser","builderFn","isBuiltIn","ProtoBuiltInRules","myRules","otherRules","rule","optStartApplication","m","extendSemantics","what","problems","v","includes","_topDownActionArity","details","prettyProblems","problem","error","superGrammarExpr","startRule","isDefinition","operation","bodyRecipe","superGrammarOutput","recipeElements","toOperationActionDictionaryTemplate","_toOperationOrAttributeActionDictionaryTemplate","toAttributeActionDictionaryTemplate","first","addSemanticActionTemplate","primitive","lower","upper","unicodeLtmo","spaces","space","Grammar_1","Grammar$3","InputStream","common$1","errors$1","pexprs$2","GrammarDecl$1","ensureSuperGrammar","withSuperGrammar","ensureSuperGrammarRuleForOverriding","installOverriddenOrExtendedRule","expectedFormals","expectedNumFormals","install","withDefaultStartRule","build","grammarErrors","grammarHasInvalidApplications","define","override","descIgnored","fragment","Grammar$2","GrammarDecl","pexprs$1","Builder$2","currentDecl","currentRuleName","newGrammar","gDecl","fromRecipe","ruleRecipe","alt","termArgs","seq","factorArgs","star","plus","opt","not","la","lookahead","lex","optParams","recipe","Builder_1","version$1","__GLOBAL_OHM_VERSION__","makeRecipe$5","Builder$1","makeRecipe","makeRecipe$3","makeRecipe$2","operationsAndAttributes","Semantics","operationsAndAttributesGrammar","actions","empty","nonEmpty","_","rest","emptyListOf","nonemptyListOf","EmptyListOf","NonemptyListOf","initBuiltInSemantics","AttributeSignature","OperationSignature","optFormals","Formals","oparen","fs","cparen","asIteration","initPrototypeParser","makeRecipe$1","ohmGrammar$1","Builder","Grammar","Namespace","pexprs","util","version","ohmGrammar","superSplicePlaceholder","buildGrammar","optOhmGrammarForTesting","builder","decl","currentRuleFormals","overriding","helpers","Grammars","grammarIter","visit","id","_open","_close","SuperGrammar","superGrammarName","Rule_define","b","Rule_override","Rule_extend","RuleBody","OverrideRuleBody","opointy","cpointy","Params","seqs","TopLevelTerm_inline","inlineRuleName","isNewRuleDeclaration","params","OverrideTopLevelTerm_superSplice","Iter_star","Iter_plus","Iter_opt","Pred_not","Pred_lookahead","Lex_lex","Base_application","Base_range","Base_terminal","Base_paren","open","close","ruleDescr","ruleDescrText","caseName","space1","space2","nameFirst","nameRest","cs","oneCharTerminal","escapeChar","err","RangeError","startsWith","xs","_terminal","grammars","optNamespace","isBuffer","compileAndLoad","grammarNames","grammarFromScriptElement","grammarsFromScriptElements","optNodeOrNodeList","_buildGrammar","ohm","getProp","thing","mapProp","getPropWalkFn","descriptor","parts","split","getProps","walkFns","walkFn","isRestrictedIdentifier","VisitorFamily","config","_shapes","shapes","_getTag","getTag","Adapter","family","_adaptee","_family","valueOf","_arities","_getChildren","shape","isArray","getWalkFn","_wrap","_checkActionDict","dict","sig","parseSignature","tag","_value","_super","_this","__extends","BehaviorSubject","getValue","subscriber","subscription","_subscribe","closed","hasError","thrownError","_throwIfClosed","Subject","isFunction","createErrorClass","createImpl","ctorFunc","instance","UnsubscriptionError","arrRemove","item","initialTeardown","_parentage","_finalizers","Subscription","remove","initialFinalizer","finalizer","execFinalizer","teardown","_hasParent","_addParent","_removeParent","EMPTY_SUBSCRIPTION","EMPTY","isSubscription","add","unsubscribe","onUnhandledError","onStoppedNotification","Promise","useDeprecatedSynchronousErrorHandling","useDeprecatedNextContext","timeoutProvider","setTimeout","handler","timeout","_i","delegate","clearTimeout","handle","noop","COMPLETE_NOTIFICATION","createNotification","kind","context","errorContext","isRoot","errorThrown","destination","EMPTY_OBSERVER","Subscriber","complete","SafeSubscriber","isStopped","handleStoppedNotification","nextNotification","_next","_error","_complete","_bind","Function","thisArg","partialObserver","ConsumerObserver","handleUnhandledError","observerOrNext","context_1","reportUnhandledError","notification","observable","Symbol","identity","pipeFromArray","fns","reduce","prev","subscribe","Observable","isObserver","_trySubscribe","sink","promiseCtor","getPromiseCtor","resolve","reject","Symbol_observable","ObjectUnsubscribedError","subject","AnonymousSubject","currentObservers","observers","shift","_checkFinalizedStatuses","_innerSubscribe","extendStatics","setPrototypeOf","__proto__","p","__","__values","o","iterator","done","__read","ar","__spreadArray","pack","l","display","a","isDisplay","start","stride","isNone","isOk","ok","isErr","Ok","Err","_fn","unwrap"],"sourceRoot":""}