"use strict";(globalThis.webpackChunk_nand2tetris_web=globalThis.webpackChunk_nand2tetris_web||[]).push([[567,597],{2567:(e,t,r)=>{r.d(t,{FileHandle:()=>s});var n=r(9597);const{GONE:a}=n.s,i=/constructor/i.test(window.HTMLElement)||window.safari||window.WebKitPoint;class s{constructor(e="unknown"){this.kind="file",this.writable=!0,this.name=e}async getFile(){throw new DOMException(...a)}async createWritable(e={}){var t;if(e.keepExistingData)throw new TypeError("Option keepExistingData is not implemented");const n=globalThis.TransformStream||(await r.e(585).then(r.bind(r,585))).TransformStream,a=globalThis.WritableStream||(await r.e(585).then(r.bind(r,585))).WritableStream,s=await(null===(t=navigator.serviceWorker)||void 0===t?void 0:t.getRegistration()),o=document.createElement("a"),d=new n,c=d.writable;if(o.download=this.name,i||!s){let e=[];d.readable.pipeTo(new a({write(t){e.push(new Blob([t]))},close(){const t=new Blob(e,{type:"application/octet-stream; charset=utf-8"});e=[],o.href=URL.createObjectURL(t),o.click(),setTimeout((()=>URL.revokeObjectURL(o.href)),1e4)}}))}else{const{writable:t,readablePort:r}=new l(a),i=encodeURIComponent(this.name).replace(/['()]/g,escape).replace(/\*/g,"%2A"),o={"content-disposition":"attachment; filename*=UTF-8''"+i,"content-type":"application/octet-stream; charset=utf-8",...e.size?{"content-length":e.size}:{}},c=setTimeout((()=>s.active.postMessage(0)),1e4);d.readable.pipeThrough(new n({transform(e,t){if(e instanceof Uint8Array)return t.enqueue(e);const r=new Response(e).body.getReader(),n=e=>r.read().then((e=>e.done?0:n(t.enqueue(e.value))));return n()}})).pipeTo(t).finally((()=>{clearInterval(c)})),s.active.postMessage({url:s.scope+i,headers:o,readablePort:r},[r]);const h=document.createElement("iframe");h.hidden=!0,h.src=s.scope+i,document.body.appendChild(h)}return c.getWriter()}async isSameEntry(e){return this===e}}class o{constructor(e){this._readyPending=!1,this._port=e,this._resetReady(),this._port.onmessage=e=>this._onMessage(e.data)}start(e){return this._controller=e,this._readyPromise}write(e){const t={type:0,chunk:e};return this._port.postMessage(t,[e.buffer]),this._resetReady(),this._readyPromise}close(){this._port.postMessage({type:2}),this._port.close()}abort(e){this._port.postMessage({type:1,reason:e}),this._port.close()}_onMessage(e){0===e.type&&this._resolveReady(),1===e.type&&this._onError(e.reason)}_onError(e){this._controller.error(e),this._rejectReady(e),this._port.close()}_resetReady(){this._readyPromise=new Promise(((e,t)=>{this._readyResolve=e,this._readyReject=t})),this._readyPending=!0}_resolveReady(){this._readyResolve(),this._readyPending=!1}_rejectReady(e){this._readyPending||this._resetReady(),this._readyPromise.catch((()=>{})),this._readyReject(e),this._readyPending=!1}}class l{constructor(e){const t=new MessageChannel;this.readablePort=t.port1,this.writable=new e(new o(t.port2))}}},9597:(e,t,r)=>{r.d(t,{Z:()=>a,makeDirHandleFromFileList:()=>i,makeFileHandlesFromFileList:()=>s,s:()=>n});const n={INVALID:["seeking position failed.","InvalidStateError"],GONE:["A requested file or directory could not be found at the time an operation was processed.","NotFoundError"],MISMATCH:["The path supplied exists, but was not an entry of requested type.","TypeMismatchError"],MOD_ERR:["The object can not be modified in this way.","InvalidModificationError"],SYNTAX:e=>[`Failed to execute 'write' on 'UnderlyingSinkBase': Invalid params passed. ${e}`,"SyntaxError"],ABORT:["The operation was aborted","AbortError"],SECURITY:["It was determined that certain files are unsafe for access within a Web application, or that too many calls are being made on file resources.","SecurityError"],DISALLOWED:["The request is not allowed by the user agent or the platform in the current context.","NotAllowedError"]},a=e=>"object"===typeof e&&"undefined"!==typeof e.type;async function i(e){var t,n,a;const{FolderHandle:i,FileHandle:s}=await r.e(807).then(r.bind(r,8807)),{FileSystemDirectoryHandle:o}=await Promise.resolve().then(r.bind(r,4269)),l=null!==(n=null===(t=e[0].webkitRelativePath)||void 0===t?void 0:t.split("/",1)[0])&&void 0!==n?n:"",d=new i(l,!1);for(let r=0;r<e.length;r++){const t=e[r],n=(null===(a=t.webkitRelativePath)||void 0===a?void 0:a.length)?t.webkitRelativePath.split("/"):["",t.name];n.shift();const o=n.pop();n.reduce(((e,t)=>(e._entries[t]||(e._entries[t]=new i(t,!1)),e._entries[t])),d)._entries[o]=new s(t.name,t,!1)}return new o(d)}async function s(e){const{FileHandle:t}=await r.e(807).then(r.bind(r,8807)),{FileSystemFileHandle:n}=await Promise.resolve().then(r.bind(r,6042));return Array.from(e).map((e=>new n(new t(e.name,e,!1))))}}}]);