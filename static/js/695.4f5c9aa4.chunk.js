"use strict";(self.webpackChunk_nand2tetris_web=self.webpackChunk_nand2tetris_web||[]).push([[695],{6329:(t,e,n)=>{n.d(e,{Af:()=>f,Gc:()=>u,P9:()=>w,lj:()=>a,qP:()=>l,tI:()=>A,yE:()=>o});var s=n(5541),i=n(1585),r=n(6531);const a=1,o=0;class u{name;width;state;next=[];constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;this.name=t,this.width=e,this.state=(0,i.w)(0,this.width).map((()=>o))}ensureWidth(t){(0,s.hu)(t<=16,`Cannot widen past 16 to ${t} bits`),this.width<t&&(this.width=t,this.state=[...this.state,...(0,i.w)(this.width,t).map((()=>o))])}connect(t){this.next.push(t),t.busVoltage=this.busVoltage}pull(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;(0,s.hu)(e>=0&&e<this.width,`Bit out of bounds: ${this.name}@${e}`),this.state[e]=t,this.next.forEach((n=>n.pull(t,e)))}voltage(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return(0,s.hu)(t>=0&&t<this.width),this.state[t]}set busVoltage(t){for(const e of(0,i.w)(0,this.width))this.state[e]=(t&1<<e)>>e;this.next.forEach((t=>t.busVoltage=this.busVoltage))}get busVoltage(){return(0,i.w)(0,this.width).reduce(((t,e)=>t|this.state[e]<<e),0)}toggle(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const e=this.voltage(t)===o?a:o;this.pull(e,t)}}class c extends u{bus;start;width;constructor(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;super(t.name),this.bus=t,this.start=e,this.width=n,(0,s.hu)(e>=0&&e+n<=t.width,`Mismatched InSubBus dimensions on ${t.name} (${n} + ${e} > ${t.width})`),this.connect(t)}pull(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;(0,s.hu)(e>=0&&e<this.width),this.bus.pull(t,this.start+e)}voltage(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return(0,s.hu)(t>=0&&t<this.width),this.bus.voltage(this.start+t)}set busVoltage(t){const e=this.bus.busVoltage&~v(this.width+this.start),n=this.bus.busVoltage&v(this.start),s=(t&v(this.width))<<this.start;this.bus.busVoltage=e|s|n}get busVoltage(){return this.bus.busVoltage>>this.start&v(this.width)}connect(t){(0,s.hu)(this.start+this.width<=t.width,`Mismatched InSubBus connection dimensions (From ${t.name} to ${this.name})`),this.bus=t}}class h extends u{bus;start;width;constructor(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;super(t.name),this.bus=t,this.start=e,this.width=n,(0,s.hu)(e>=0&&n<=t.width,"Mismatched OutSubBus dimensions"),this.connect(t)}set busVoltage(t){this.bus.busVoltage=(t&v(this.width+this.start))>>this.start}get busVoltage(){return this.bus.busVoltage&v(this.width)}connect(t){(0,s.hu)(this.width<=t.width,"Mismatched OutSubBus connection dimensions"),this.bus=t}}class l extends u{value;constructor(t,e){super(t,16),this.value=e}pullHigh(){}pullLow(){}voltage(){return 1&this.busVoltage}set busVoltage(t){}get busVoltage(){return this.value}}const d=new l("true",65535),m=new l("false",0);function p(t){const{pin:e,w:n}=t.match(/(?<pin>[a-zA-Z]+)(\[(?<w>\d+)\])?/)?.groups;return{pin:e,width:n?Number(n):1}}class g{map=new Map;insert(t){const{name:e}=t;(0,s.hu)(!this.map.has(e),`Pins already has ${e}!`),this.map.set(e,t)}emplace(t,e){if(this.has(t))return this.get(t);{const n=new u(t,e);return this.insert(n),n}}has(t){return this.map.has(t)}get(t){return this.map.get(t)}entries(){return this.map.values()}[Symbol.iterator](){return this.map[Symbol.iterator]()}}let b=0;class f{name;id=b++;ins=new g;outs=new g;pins=new g;parts=new Set;clockedPins;get clocked(){if(this.clockedPins.size>0)return!0;for(const t of this.parts)if(t.clocked)return!0;return!1}constructor(t,e,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[],i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[];this.name=n;for(const r of t){const{pin:t,width:e=1}=void 0!==r.pin?r:p(r);this.ins.insert(new u(t,e))}for(const r of e){const{pin:t,width:e=1}=void 0!==r.pin?r:p(r);this.outs.insert(new u(t,e))}for(const r of s){const{pin:t,width:e=1}=void 0!==r.pin?r:p(r);this.pins.insert(new u(t,e))}this.clockedPins=new Set(i),r.S.get().$.subscribe((()=>this.eval()))}reset(){for(const[t,e]of this.ins)e.busVoltage=0;for(const t of this.parts)t.reset();this.eval()}in(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"in";return(0,s.hu)(this.hasIn(t),`No in pin ${t}`),this.ins.get(t)}out(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"out";return(0,s.hu)(this.hasOut(t),`No in pin ${t}`),this.outs.get(t)}hasIn(t){return this.ins.has(t)}hasOut(t){return this.outs.has(t)}pin(t){return(0,s.hu)(this.pins.has(t)),this.pins.get(t)}get(t,e){return this.ins.has(t)?this.ins.get(t):this.outs.has(t)?this.outs.get(t):this.pins.has(t)?this.pins.get(t):this.getBuiltin(t,e)}getBuiltin(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(y.includes(t))for(const n of this.parts){const s=n.get(t,e);if(s)return s}}isOutPin(t){return this.outs.has(t)}wire(t,e){this.parts.add(t);for(const{to:n,from:s}of e)t.isOutPin(n.name)?this.wireOutPin(t,n,s):this.wireInPin(t,n,s)}findPin(t,e){return"true"===t.toLowerCase()||"1"===t?d:"false"===t.toLowerCase()||"0"===t?m:this.ins.has(t)?this.ins.get(t):this.outs.has(t)?this.outs.get(t):this.pins.emplace(t,e)}wireOutPin(t,e,n){const i=(0,s.kP)(t.outs.get(e.name),(()=>`Cannot wire to missing pin ${e.name}`));e.width??=i.width;let r=this.findPin(n.name,n.width??e.width);const a=this.pins.has(r.name);if(n.width??=r.width,r instanceof l)throw new Error("Cannot wire to constant bus");a&&r instanceof u&&r.ensureWidth(n.start+n.width),(n.start>0||n.width!==r.width)&&(r=new c(r,n.start,n.width)),(e.start>0||e.width!==r.width)&&(r=new h(r,e.start,e.width)),i.connect(r)}wireInPin(t,e,n){let i=(0,s.kP)(t.ins.get(e.name),(()=>`Cannot wire to missing pin ${e.name}`));e.width??=i.width;const r=this.findPin(n.name,n.width??e.width);n.width??=r.width,(e.start>0||e.width!==r.width)&&(i=new c(i,e.start,e.width)),["true","false"].includes(r.name)||(n.start>0||n.width!==r.width)&&(i=new h(i,n.start,n.width)),r.connect(i)}eval(){for(const t of this.parts)d.next.forEach((t=>t.busVoltage=d.busVoltage)),m.next.forEach((t=>t.busVoltage=m.busVoltage)),t.eval()}tick(){this.eval()}tock(){this.eval()}remove(){for(const t of this.parts)t.remove()}async load(t,e){for(const n of this.parts)"ROM32K"===n.name&&await n.load(t,e)}}class w extends f{constructor(){super([],[]),this.outs.insert(m)}}class A extends f{get clocked(){return!0}#t=r.S.get().$.subscribe((t=>{let{level:e}=t;e===o?this.tock():this.tick()}));remove(){this.#t.unsubscribe(),super.remove()}reset(){super.reset(),this.tick(),this.tock()}}function v(t){return Math.pow(2,t)-1}const y=["Register","ARegister","DRegister","PC","RAM8","RAM64","RAM512","RAM4K","RAM16K","ROM32K","Screen","Keyboard","Memory"]},6531:(t,e,n)=>{n.d(e,{S:()=>u});var s=n(1496),i=n(9810),r=n(5541),a=n(6329);let o;class u{level=a.yE;ticks=0;static get(){return void 0===o&&(o=new u),o}get isHigh(){return this.level===a.lj}get isLow(){return this.level===a.yE}subject=new s.X({level:this.level,ticks:this.ticks});frameSubject=new i.x;resetSubject=new i.x;$=this.subject;frame$=this.frameSubject;reset$=this.resetSubject;next(){this.subject.next({level:this.level,ticks:this.ticks})}constructor(){}reset(){this.level=a.yE,this.ticks=0,this.next(),this.resetSubject.next()}tick(){(0,r.hu)(this.level===a.yE,"Can only tick up from LOW"),this.level=a.lj,this.next()}tock(){(0,r.hu)(this.level===a.lj,"Can only tock down from HIGH"),this.level=a.yE,this.ticks+=1,this.next()}toggle(){this.level===a.lj?this.tock():this.tick()}eval(){this.tick(),this.tock()}frame(){this.frameSubject.next()}toString(){return`${this.ticks}${this.level===a.lj?"+":""}`}}},6693:(t,e,n)=>{n.d(e,{Bb:()=>u,NM:()=>s,PH:()=>i,Uc:()=>r,lK:()=>a,vU:()=>o});const s={op:{42:"0",63:"1",58:"-1",12:"x",48:"y",13:"!x",49:"!y",15:"-x",51:"-y",31:"x+1",55:"y+1",14:"x-1",50:"y-1",2:"x+y",19:"x-y",7:"y-x",0:"x&y",21:"x|y"}},i={asm:{0:42,1:63,"-1":58,D:12,A:48,M:48,"!D":13,"!A":49,"-D":15,"-A":51,"D+1":31,"A+1":55,"D-1":14,"A-1":50,"D+A":2,"D-A":19,"D-M":19,"A-D":7,"D&A":0,"D&M":0,"D|A":21,"D|M":21},op:{42:"0",63:"1",58:"-1",12:"D",48:"A",13:"!D",49:"!A",15:"-D",51:"-A",31:"D+1",55:"A+1",14:"D-1",50:"A-1",2:"D+A",19:"D-A",7:"A-D",0:"D&A",21:"D|A"}},r={asm:{"":0,M:1,D:2,MD:3,A:4,AM:5,AD:6,AMD:7},op:{0:"",1:"M",2:"D",3:"MD",4:"A",5:"AM",6:"AD",7:"AMD"}},a={asm:{"":0,JGT:1,JEQ:2,JGE:3,JLT:4,JNE:5,JLE:6,JMP:7},op:{0:"",1:"JGT",2:"JEQ",3:"JGE",4:"JLT",5:"JNE",6:"JLE",7:"JMP"}},o={1:"Positive",0:"Zero",15:"Negative",Positive:1,Zero:0,Negative:15};function u(t,e,n){let s=0;switch(t){case 42:s=0;break;case 63:s=1;break;case 58:s=-1;break;case 12:s=e;break;case 48:s=n;break;case 13:s=~e;break;case 49:s=~n;break;case 15:s=-e;break;case 51:s=-n;break;case 31:s=e+1;break;case 55:s=n+1;break;case 14:s=e-1;break;case 50:s=n-1;break;case 2:s=e+n;break;case 19:s=e-n;break;case 7:s=n-e;break;case 0:s=e&n;break;case 21:s=e|n}s&=65535;return[s,0===s?o.Zero:32768&s?o.Negative:o.Positive]}},5838:(t,e,n)=>{n.d(e,{FH:()=>g,GD:()=>u,I2:()=>o,eD:()=>p,eu:()=>h,kG:()=>d,qT:()=>m,yJ:()=>c,zp:()=>l});var s=n(5541),i=n(7693),r=n(326),a=n(7930);const o=["bin","dec","hex","asm"],u=16384,c=131072,h=24576;class l{memory;get size(){return this.memory.length}constructor(t){this.memory=new Int16Array(t)}get(t){return t<0||t>=this.size?65535:this.memory[t]??0}set(t,e){t>=0&&t<this.size&&(this.memory[t]=65535&e)}reset(){this.memory.fill(0)}update(t,e,n){let s;switch(n){case"asm":s=(0,i.op)(e);break;case"bin":s=(0,r.C$)(e);break;case"hex":s=(0,r.Af)(e);break;default:s=(0,r.o5)(e)}isFinite(s)&&s<=65535&&this.set(t,s)}async load(t,e){try{this.loadBytes(await(0,a.zD)(t,e))}catch(n){throw new Error(`Memory Failed to load file ${e}`)}}loadBytes(t){this.memory.set(new Int16Array(t)),this.memory.fill(0,t.length,this.size)}range(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.size;return[...this.memory.slice(t,e)]}map(t){var e=this;let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.size;return function*(){(0,s.hu)(n<i);for(let s=n;s<i;s++)yield t(s,e.get(s))}()}}class d{parent;size;offset;constructor(t,e,n){this.parent=t,this.size=e,this.offset=n}get(t){return t<0||t>=this.size?65535:this.parent.get(this.offset+t)}set(t,e){t>=0&&t<this.size&&this.parent.set(t+this.offset,e)}reset(){for(let t=0;t<this.size;t++)this.set(t,0)}update(t,e,n){t>=0&&t<this.size&&this.parent.update(t+this.offset,e,n)}load(t,e){return this.parent.load(t,e)}loadBytes(t){return this.parent.loadBytes(t)}range(t,e){return this.parent.range(t,e)}map(t,e,n){return this.parent.map(t,e,n)}}class m extends d{constructor(t){super(t,1,24576)}getKey(){return this.get(0)}setKey(t){this.set(0,65535&t)}clearKey(){this.set(0,0)}}class p extends l{static SIZE=32768;constructor(t){const e=new Int16Array(p.SIZE);e.set(t),super(e)}}class g extends l{static SIZE=32768;constructor(){super(g.SIZE)}}},7930:(t,e,n)=>{n.d(e,{zD:()=>i});var s=n(8786);async function i(t,e){if(e.endsWith(".hack"))return async function(t,e){return s.$W(await t.readFile(e))}(t,e);if(e.endsWith(".asm"))return async function(t,e){return s.eC(await t.readFile(e))}(t,e);throw new Error(`Cannot load file without hack or asm extension ${e}`)}},1845:(t,e,n)=>{n.d(e,{Ww:()=>b,$o:()=>p,w_:()=>d,Y_:()=>g});var s=n(5541),i=n(5640),r=n(6693),a=n(5838),o=n(7693),u=n(1510);const c='\nASM <: Base {\n  Root := ASM\n  ASM = Instruction*\n  \n  Instruction = Label|AInstruction|CInstruction\n  \n  Label = OpenParen identifier closeParen\n  AInstruction = at (identifier | decNumber)\n  CInstruction = assign? op jmp?\n  \n  assign = (\n      "AMD"\n      | "AM"\n      | "AD"\n      | "MD"\n      | "M"\n      | "D"\n      | "A"\n      ) equal\n      \n  op =\n      | "0" | "1" | "-1"\n      | "!D" | "!A" | "!M"\n      | "-D" | "-A" | "-M"\n      | "D+1" | "A+1" | "M+1"\n      | "D-1" | "A-1" | "M-1"\n      | "D+A" | "D+M"\n      | "D-A" | "D-M"\n      | "A-D" | "M-D"\n      | "D&A" | "D&M"\n      | "D|A" | "D|M"\n      | "D" | "A" | "M"\n\n\n  jmp = semi ("JGT" | "JEQ" | "JGE" | "JLT" | "JNE" | "JLE" | "JMP")\n}',h=i.Z.grammar(c,u.y1),l=h.extendSemantics(u.rJ);function d(t){return void 0!==t.value}function m(t){return void 0!==t.label}function p(t,e){let n=16;const i=new Map([["R0",0],["R1",1],["R2",2],["R3",3],["R4",4],["R5",5],["R6",6],["R7",7],["R8",8],["R9",9],["R10",10],["R11",11],["R12",12],["R13",13],["R14",14],["R15",15],["SP",0],["LCL",1],["ARG",2],["THIS",3],["THAT",4],["SCREEN",a.GD],["KBD",a.eu]]);const r=[];let o=0;for(const s of t.instructions)if("L"!==s.type)o+=1,"A"===s.type&&m(s)&&r.push(s);else{if(i.has(s.label))throw new Error(`ASM Duplicate label ${s.label}`);i.set(s.label,o),e?.(s.label,o,!1)}r.forEach((function(t){const r=(a=t.label,i.has(a)||(i.set(a,n),e?.(a,n,!0),n+=1),(0,s.kP)(i.get(a),`Label not in symbols: ${a}`));var a;t.value=r,delete t.label}))}function g(t){if("A"===t.type){if(m(t))throw new Error("ASM Emitting unfilled A instruction");return t.value}if("C"===t.type)return(0,o.p)(t.isM,t.op,t.store,t.jump)}l.addAttribute("root",{Root(t){return this.asm}}),l.addAttribute("asm",{Root:t=>({instructions:t.child(0).children.map((t=>{let{instruction:e}=t;return e}))})}),l.addAttribute("instruction",{AInstruction(t,e){try{return{type:"A",label:e.name,span:{start:t.source.startIdx,end:e.source.endIdx},lineNum:t.source.getLineAndColumn().lineNum}}catch(n){}try{return{type:"A",value:e.value,span:{start:t.source.startIdx,end:e.source.endIdx},lineNum:t.source.getLineAndColumn().lineNum}}catch(n){}throw new Error("AsmAInstruction must have either a name or a value")},CInstruction(t,e,n){const s=t.child(0)?.child(0)?.sourceString,i=e.sourceString.replace("M","A"),a=n.child(0)?.child(1)?.sourceString,o=e.sourceString.includes("M"),u={type:"C",op:r.PH.asm[i],isM:o,span:{start:t.source.startIdx,end:n.source.endIdx},lineNum:t.source.getLineAndColumn().lineNum};return a&&(u.jump=r.lK.asm[a]),s&&(u.store=r.Uc.asm[s]),u},Label(t,e,n){let{name:s}=e;return{type:"L",label:s,lineNum:t.source.getLineAndColumn().lineNum}}});const b={grammar:c,semantics:l,parser:h,parse:(0,u.Pz)(h,l),passes:{fillLabel:p,emit:function(t){return t.instructions.map(g).filter((t=>void 0!==t))}}}},1510:(t,e,n)=>{n.d(e,{eP:()=>a,rJ:()=>u,y1:()=>o,Pz:()=>c});var s=n(5640),i=n(326),r=n(4625);const a="Unknown parse error",o={Base:s.Z.grammar('\nBase {\n  Root = Value*\n\n  At = at\n  Bang = bang\n  Bar = bar\n  CloseAngle = closeAngle\n  CloseBrace = closeBrace\n  CloseParen = closeParen\n  CloseSquare = closeSquare\n  Comma = comma\n  Dollar = dollar\n  Dot = dot\n  DoubleQuote = doubleQuote\n  Equal = equal\n  OpenAngle = openAngle\n  OpenBrace = openBrace\n  OpenParen = openParen\n  OpenSquare = openSquare\n  Percent = percent\n  Semi = semi\n  Underscore = underscore\n\n  at = "@"\n  bang = "!"\n  bar = "|"\n  closeAngle = ">"\n  closeBrace = "}"\n  closeParen = ")"\n  closeSquare = "]"\n  comma = ","\n  dollar = "$"\n  dot = "."\n  doubleQuote = "\\""\n  equal = "="\n  minus = "-"\n  newline = "\\r"? "\\n"\n  openAngle = "<"\n  openBrace = "{"\n  openParen = "("\n  openSquare = "["\n  percent = "%"\n  semi = ";"\n  underscore = "_"\n\n  Value = identifier | number | boolean\n\n  boolean = true | false\n  True = true\n  False = false\n  true = "true"\n  false = "false"\n\n  Name = identifier\n  identifier = (letter|underscore) (alnum|underscore|dot|dollar)*\n\n  Number = number\n  number = hexNumber | decNumber | binNumber\n  binNumber = ("%B") ("0"|"1")+\n  hexNumber = ("%X") hexDigit+\n  decNumber = ("%D")? (wholeDec | realDec)\n  wholeDec = minus? digit+\n  realDec = minus? digit* "." digit+\n\n  String = DoubleQuote (~doubleQuote any)* doubleQuote\n  \n  spaces := (lineComment | comment | space)*\n  commentStart = "/*"\n  commentEnd = "*/"\n  comment = commentStart (~commentEnd any)* commentEnd\n  lineCommentStart = "//"\n  lineComment = lineCommentStart (~"\\n" any)* "\\n"\n\n  List<elem, sep> = NonemptyListOf<elem, sep> sep?\n  EmptyList<elem, sep> = EmptyList<elem, sep> sep?\n}')},u=o.Base.createSemantics();function c(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t=>{let{root:e}=t;return e};return function(s){try{const i=t.match(s);if(i.succeeded()){const t=e(i),s=n(t);return(0,r.Ok)(s)}return(0,r.UG)({message:i.message??a,shortMessage:i.shortMessage??a})}catch(i){return(0,r.UG)(i)}}}u.extendOperation("asIteration",{List:(t,e)=>t.asIteration()}),u.addAttribute("value",{decNumber:(t,e)=>(0,i.o5)(e.sourceString),wholeDec:(t,e)=>(0,i.o5)(e.sourceString),binNumber:(t,e)=>(0,i.C$)(e.sourceString),hexNumber:(t,e)=>(0,i.Af)(e.sourceString),Number:t=>t.value,Name:t=>t.name,identifier(t,e){return this.sourceString}}),u.addAttribute("name",{identifier(t,e){return this.sourceString},Name(t){return this.child(0)?.name}}),u.addAttribute("String",{String:(t,e,n)=>e.sourceString})},8786:(t,e,n)=>{n.d(e,{$W:()=>o,eC:()=>a,uC:()=>u});var s=n(4625),i=n(1845),r=n(326);async function a(t){const e=(0,s.Wg)(i.Ww.parse(t));return i.Ww.passes.fillLabel(e),i.Ww.passes.emit(e)}async function o(t){return t.split("\n").filter((t=>""!==t.trim())).map(r.C$)}async function u(t){return t.split("\n").filter((t=>""!==t.trim())).map(r.t1)}},7693:(t,e,n)=>{n.d(e,{a:()=>i,op:()=>r,p:()=>a});var s=n(6693);function i(t){return 32768&t?function(t){t&=65535;const e=(4096&t)>>12,n=(4032&t)>>6,i=(56&t)>>3,r=7&t;if(void 0===s.PH.op[n])return"#ERR";let a=s.PH.op[n];e&&(a=a.replace(/A/g,"M"));const o=s.Uc.op[i],u=s.lK.op[r];let c=a;o&&(c=`${o}=${c}`);u&&(c=`${c};${u}`);return c}(t):function(t){return"@"+(32767&t).toString(10)}(t)}function r(t){return"@"===t[0]?function(t){return parseInt(t.substring(1),10)}(t):function(t){const e=t.match(/(?:(?<assign>[AMD]{1,3})=)?(?<operation>[-!01ADM&|]{1,3})(?:;(?<jump>JGT|JLT|JGE|JLE|JEQ|JMP))?/),{assign:n,operation:i,jump:r}=e?.groups??{},o=i.includes("M")||n.includes("M"),u=s.Uc.asm[n??""],c=s.lK.asm[r??""],h=s.PH.asm[i??""];return a(o,h,u,c)}(t)}function a(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const i=57344,r=t?4096:0,a=e<<6,o=(n??0)<<3,u=s??0;return i+r+a+o+u}},326:(t,e,n)=>{n.d(e,{$v:()=>l,Af:()=>o,C$:()=>c,C2:()=>g,E_:()=>m,Ly:()=>d,nN:()=>p,o5:()=>u,t1:()=>h});const s=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F"];function i(t){return s[t]??"X"}function r(t){switch(t){case 0:return"0000";case 1:return"0001";case 2:return"0010";case 3:return"0011";case 4:return"0100";case 5:return"0101";case 6:return"0110";case 7:return"0111";case 8:return"1000";case 9:return"1001";case 10:return"1010";case 11:return"1011";case 12:return"1100";case 13:return"1101";case 14:return"1110";case 15:return"1111";default:return"erro"}}function a(t,e){return 65535&parseInt(t.replace(/[^\d a-f A-F +-.]/g,""),e)}function o(t){return a(t,16)}function u(t){return a(t,10)}function c(t){return a(t.replaceAll(" ",""),2)}function h(t){return t.toUpperCase().includes("X")?o(t):u(t)}function l(t){return`0x${i((61440&t)>>12)}${i((3840&t)>>8)}${i((240&t)>>4)}${i(15&t)}`}function d(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:16;const n=r((61440&t)>>12),s=r((3840&t)>>8),i=r((240&t)>>4),a=r(15&t);return`${n}${s}${i}${a}`.substring(16-e)}function m(t){return 32768===(t&=65535)?"-32768":32768&t?`-${t=1+~t&32767}`:`${t}`}function p(t){return`${t&=65535}`}function g(t,e){let n=~((t&=65535)&(e&=65535));return n&=65535,n}}}]);
//# sourceMappingURL=695.4f5c9aa4.chunk.js.map