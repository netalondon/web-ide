{"version":3,"file":"static/js/813.bf8f2590.chunk.js","mappings":"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","sources":["../../node_modules/extend/index.js","../../node_modules/inline-style-parser/index.js","../../node_modules/is-buffer/index.js","../../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../../node_modules/react-markdown/node_modules/react-is/index.js","../../node_modules/style-to-object/index.js","../../node_modules/decode-named-character-reference/index.dom.js","../../node_modules/micromark-core-commonmark/lib/blank-line.js","../../node_modules/micromark-factory-space/index.js","../../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../../node_modules/micromark-util-character/index.js","../../node_modules/micromark-util-chunked/index.js","../../node_modules/micromark-util-classify-character/index.js","../../node_modules/micromark-util-combine-extensions/index.js","../../node_modules/micromark-util-decode-numeric-character-reference/index.js","../../node_modules/micromark-util-decode-string/index.js","../../node_modules/micromark-util-normalize-identifier/index.js","../../node_modules/micromark-util-resolve-all/index.js","../../node_modules/unist-util-stringify-position/index.js","../../node_modules/vfile-message/index.js","../../node_modules/vfile/lib/minpath.browser.js","../../node_modules/vfile/lib/minproc.browser.js","../../node_modules/vfile/lib/minurl.shared.js","../../node_modules/vfile/lib/minurl.browser.js","../../node_modules/vfile/lib/index.js","../../node_modules/bail/index.js","../../node_modules/is-plain-obj/index.js","../../node_modules/trough/index.js","../../node_modules/unified/lib/index.js","../../node_modules/mdast-util-to-string/index.js","../../node_modules/micromark/lib/initialize/content.js","../../node_modules/micromark/lib/initialize/document.js","../../node_modules/micromark-util-subtokenize/index.js","../../node_modules/micromark-core-commonmark/lib/content.js","../../node_modules/micromark/lib/initialize/flow.js","../../node_modules/micromark/lib/initialize/text.js","../../node_modules/micromark/lib/create-tokenizer.js","../../node_modules/micromark-core-commonmark/lib/thematic-break.js","../../node_modules/micromark-core-commonmark/lib/list.js","../../node_modules/micromark-core-commonmark/lib/block-quote.js","../../node_modules/micromark-factory-destination/index.js","../../node_modules/micromark-factory-label/index.js","../../node_modules/micromark-factory-title/index.js","../../node_modules/micromark-factory-whitespace/index.js","../../node_modules/micromark-core-commonmark/lib/definition.js","../../node_modules/micromark-core-commonmark/lib/code-indented.js","../../node_modules/micromark-core-commonmark/lib/heading-atx.js","../../node_modules/micromark-core-commonmark/lib/setext-underline.js","../../node_modules/micromark-util-html-tag-name/index.js","../../node_modules/micromark-core-commonmark/lib/html-flow.js","../../node_modules/micromark-core-commonmark/lib/code-fenced.js","../../node_modules/micromark-core-commonmark/lib/character-reference.js","../../node_modules/micromark-core-commonmark/lib/character-escape.js","../../node_modules/micromark-core-commonmark/lib/line-ending.js","../../node_modules/micromark-core-commonmark/lib/label-end.js","../../node_modules/micromark-core-commonmark/lib/label-start-image.js","../../node_modules/micromark-core-commonmark/lib/attention.js","../../node_modules/micromark-core-commonmark/lib/autolink.js","../../node_modules/micromark-core-commonmark/lib/html-text.js","../../node_modules/micromark-core-commonmark/lib/label-start-link.js","../../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../../node_modules/micromark-core-commonmark/lib/code-text.js","../../node_modules/micromark/lib/constructs.js","../../node_modules/micromark/lib/preprocess.js","../../node_modules/mdast-util-from-markdown/lib/index.js","../../node_modules/micromark/lib/postprocess.js","../../node_modules/micromark/lib/parse.js","../../node_modules/remark-parse/index.js","../../node_modules/remark-parse/lib/index.js","../../node_modules/unist-builder/index.js","../../node_modules/unist-util-visit/index.js","../../node_modules/unist-util-position/index.js","../../node_modules/mdast-util-definitions/index.js","../../node_modules/mdast-util-to-hast/lib/traverse.js","../../node_modules/micromark-util-sanitize-uri/index.js","../../node_modules/mdast-util-to-hast/lib/wrap.js","../../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../../node_modules/mdast-util-to-hast/lib/revert.js","../../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../../node_modules/trim-lines/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../../node_modules/mdast-util-to-hast/lib/handlers/break.js","../../node_modules/mdast-util-to-hast/lib/handlers/code.js","../../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../../node_modules/mdast-util-to-hast/lib/handlers/html.js","../../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/image.js","../../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/link.js","../../node_modules/mdast-util-to-hast/lib/handlers/list.js","../../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../../node_modules/mdast-util-to-hast/lib/handlers/root.js","../../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../../node_modules/mdast-util-to-hast/lib/handlers/table.js","../../node_modules/mdast-util-to-hast/lib/handlers/text.js","../../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../../node_modules/mdast-util-to-hast/lib/index.js","../../node_modules/unist-util-generated/index.js","../../node_modules/mdast-util-to-hast/lib/footer.js","../../node_modules/remark-rehype/lib/index.js","../../node_modules/property-information/lib/util/schema.js","../../node_modules/property-information/lib/util/merge.js","../../node_modules/property-information/lib/normalize.js","../../node_modules/property-information/lib/util/info.js","../../node_modules/property-information/lib/util/types.js","../../node_modules/property-information/lib/util/defined-info.js","../../node_modules/property-information/lib/util/create.js","../../node_modules/property-information/lib/xlink.js","../../node_modules/property-information/lib/xml.js","../../node_modules/property-information/lib/util/case-sensitive-transform.js","../../node_modules/property-information/lib/util/case-insensitive-transform.js","../../node_modules/property-information/lib/xmlns.js","../../node_modules/property-information/lib/aria.js","../../node_modules/property-information/lib/html.js","../../node_modules/property-information/lib/svg.js","../../node_modules/property-information/index.js","../../node_modules/react-markdown/lib/rehype-filter.js","../../node_modules/hast-util-whitespace/index.js","../../node_modules/property-information/lib/find.js","../../node_modules/property-information/lib/hast-to-react.js","../../node_modules/react-markdown/lib/ast-to-react.js","../../node_modules/comma-separated-tokens/index.js","../../node_modules/space-separated-tokens/index.js","../../node_modules/react-markdown/lib/react-markdown.js","../../node_modules/react-markdown/lib/uri-transformer.js","../../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../../node_modules/micromark-extension-gfm-table/lib/syntax.js","../../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../../node_modules/micromark-extension-gfm/index.js","../../node_modules/ccount/index.js","../../node_modules/mdast-util-find-and-replace/lib/index.js","../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../../node_modules/mdast-util-gfm-autolink-literal/index.js","../../node_modules/mdast-util-to-markdown/lib/util/association.js","../../node_modules/mdast-util-to-markdown/lib/util/track.js","../../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../../node_modules/mdast-util-to-markdown/lib/util/safe.js","../../node_modules/mdast-util-gfm-footnote/index.js","../../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../../node_modules/mdast-util-gfm-strikethrough/index.js","../../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../../node_modules/markdown-table/index.js","../../node_modules/mdast-util-gfm-table/lib/index.js","../../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../../node_modules/mdast-util-gfm-task-list-item/index.js","../../node_modules/mdast-util-gfm/lib/index.js","../../node_modules/remark-gfm/index.js","../../node_modules/unist-util-is/index.js","../../node_modules/unist-util-visit-parents/index.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Reason for message.\n   *   Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place at which the message occurred in a file.\n   * @param {string} [origin]\n   *   Place in code the message originates from (example `'my-package:my-rule-name'`)\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    /** @type {string} */\n    this.message = typeof reason === 'object' ? reason.message : reason\n    /** @type {string} */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Whether this is a fatal problem that marks an associated file as no\n     * longer processable.\n     * If `true`, marks associated file as no longer processable.\n     * If `false`, necessitates a (potential) change.\n     * The value can also be `null` or `undefined`, for things that might not\n     * need changing.\n     *\n     * @type {boolean?}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number?}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number?}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full range information, when available.\n     * Has `start` and `end` fields, both set to an object with `line` and\n     * `column`, set to `number?`.\n     *\n     * @type {Position?}\n     */\n    this.position = position\n\n    /**\n     * Namespace of warning (example: `'my-package'`).\n     *\n     * @type {string?}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule-name'`).\n     *\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the VFile ecosystem).\n     *\n     * @type {string?}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string?}\n     */\n    this.actual\n\n    /**\n     * Suggest values that should be used instead of `actual`, one or more\n     * values that are deemed as acceptable.\n     *\n     * @type {Array<string>?}\n     */\n    this.expected\n\n    /**\n     * Link to documentation for the message.\n     *\n     * @type {string?}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (supported by `vfile-reporter`).\n     *\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalizeUri(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName]\n *   Defines the tag name of an element.\n * @property {Properties} [hProperties]\n *   Defines the properties of an element.\n * @property {Array<Content>} [hChildren]\n *   Defines the (hast) children of an element.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data\n *   unist data with embedded hast fields.\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData\n *   unist node with embedded hast data.\n *\n * @callback Handler\n *   Handle a node.\n * @param {H} h\n *   Handle context.\n * @param {any} node\n *   mdast node to handle.\n * @param {Parent|null} parent\n *   Parent of `node`.\n * @returns {Content|Array<Content>|null|undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Properties} props\n *   Properties.\n * @param {Array<Content>?} [children]\n *   hast content.\n * @returns {Element}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<Content>?} [children]\n *   hast content\n * @returns {Element}\n *   Compiled element.\n *\n * @typedef HFields\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {Properties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use to go back to a footnote call from the footnote section.\n * @property {(identifier: string) => Definition|null} definition\n *   Definition cache.\n * @property {Record<string, FootnoteDefinition>} footnoteById\n *   Footnote cache.\n * @property {Array<string>} footnoteOrder\n *   Order in which footnotes occur.\n * @property {Record<string, number>} footnoteCounts\n *   Counts the same footnote was used.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment\n *   Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML.\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteLabelTagName='h2']\n *   HTML tag to use for the footnote label.\n *   Can be changed to match your document structure and play well with your choice of css.\n * @property {Properties} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label.\n *   A 'sr-only' class is added by default to hide this from sighted users.\n *   Change it to make the label visible, or add classes for other purposes.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Turn mdast into hast.\n *\n * @param {MdastNode} tree\n *   mdast node.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {H}\n *   `h` function.\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  h.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @returns {Element|null}\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: h.footnoteLabelTagName,\n        properties: {\n          ...JSON.parse(JSON.stringify(h.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'plugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @returns {Extension}\n */\n\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    } // Exit if we’ve walked far enough.\n\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n\n    if (id.charCodeAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n/** @type {Resolver} */\n\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token|undefined} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker' // The whole (without `!`):\n\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // The `^` marker\n\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  } // Increment the end 1 character.\n\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n  /** @type {Array<Event>} */\n\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context], // The `[`\n    events[index + 3],\n    events[index + 4], // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context], // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context], // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n  /** @type {State} */\n\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n  /** @type {State} */\n\n  function callData(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size++ > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      effects.exit('chunkString')\n      token = effects.exit('gfmFootnoteCallString')\n      return defined.includes(normalizeIdentifier(self.sliceSerialize(token)))\n        ? end(code)\n        : nok(code)\n    }\n\n    effects.consume(code)\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    return code === 92 ? callEscape : callData\n  }\n  /** @type {State} */\n\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    effects.exit('gfmFootnoteCall')\n    return ok\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n\n  let identifier\n  let size = 0\n  /** @type {boolean|undefined} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelStart\n  }\n  /** @type {State} */\n\n  function labelStart(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      return atBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      size++\n      return atBreak\n    }\n\n    effects.enter('chunkString').contentType = 'string'\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      markdownLineEnding(code) ||\n      code === 91 ||\n      code === 93 ||\n      size > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n\n      return factorySpace(effects, done, 'gfmFootnoteDefinitionWhitespace')\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!defined.includes(identifier)) {\n      defined.push(identifier)\n    }\n\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n/** @type {Exiter} */\n\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (`boolean`, default:\n *   `true`).\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfmStrikethrough(options = {}) {\n  let single = options.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n\n  function resolveAllStrikethrough(events, context) {\n    let index = -1 // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open && // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            } // Opening.\n\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ] // Between.\n\n            splice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            ) // Closing.\n\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n    /** @type {State} */\n\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n  /** @type {State} */\n\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null || // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    // To match how GH works in comments, use `markdownSpace` (`[ \\t]`) instead\n    // of `markdownLineEndingOrSpace` (`[ \\t\\r\\n]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  const self = this\n  return factorySpace(effects, after, 'whitespace')\n  /** @type {State} */\n\n  function after(code) {\n    const tail = self.events[self.events.length - 1]\n    return (\n      // We either found spaces…\n      ((tail && tail[1].type === 'whitespace') || // …or it was followed by a line ending, in which case, there has to be\n        // non-whitespace after that line ending, because otherwise we’d get an\n        // EOF as the content is closed with blank lines.\n        markdownLineEnding(code)) &&\n        code !== null\n        ? ok(code)\n        : nok(code)\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {Test} [ignore]\n *   `unist-util-is` test used to assert parents\n *\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {Content|Root} Node\n * @typedef {Exclude<Extract<Node, import('mdast').Parent>, Root>} Parent\n *\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n *\n * @typedef RegExpMatchObject\n * @property {number} index\n * @property {string} input\n * @property {[Root, ...Array<Parent>, Text]} stack\n *\n * @typedef {string|RegExp} Find\n * @typedef {string|ReplaceFunction} Replace\n *\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n * @typedef {Array<Pair>} Pairs\n */\n\n/**\n * @callback ReplaceFunction\n * @param {...any} parameters\n * @returns {Array<PhrasingContent>|PhrasingContent|string|false|undefined|null}\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param tree mdast tree\n * @param find Value to find and remove. When `string`, escaped and made into a global `RegExp`\n * @param [replace] Value to insert.\n *   * When `string`, turned into a Text node.\n *   * When `Function`, called with the results of calling `RegExp.exec` as\n *     arguments, in which case it can return a single or a list of `Node`,\n *     a `string` (which is wrapped in a `Text` node), or `false` to not replace\n * @param [options] Configuration.\n */\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   ((tree: Node, find: Find, replace?: Replace, options?: Options) => Node) &\n   *   ((tree: Node, schema: FindAndReplaceSchema|FindAndReplaceList, options?: Options) => Node)\n   * )}\n   **/\n  (\n    /**\n     * @param {Node} tree\n     * @param {Find|FindAndReplaceSchema|FindAndReplaceList} find\n     * @param {Replace|Options} [replace]\n     * @param {Options} [options]\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options|undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent|undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = /** @type {Parent} */ (parents[index])\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error mdast vs. unist parent.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          // @ts-expect-error: stack is fine.\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @param {[Root, ...Array<Parent>]} parents\n       * @returns {VisitorResult}\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n        /** @type {number|undefined} */\n        let position\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * @param {FindAndReplaceSchema|FindAndReplaceList} schema\n * @returns {Pairs}\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {Find} find\n * @returns {RegExp}\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * @param {Replace} replace\n * @returns {ReplaceFunction}\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown/lib/types.js').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').PhrasingContent} PhrasingContent\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\nconst inConstruct = 'phrasing'\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/** @type {FromMarkdownExtension} */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {PhrasingContent} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[_-\\d]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string|undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n  /** @type {number} */\n  let closingParenIndex\n  /** @type {number} */\n  let openingParens\n  /** @type {number} */\n  let closingParens\n  /** @type {string|undefined} */\n  let trail\n\n  if (trailExec) {\n    url = url.slice(0, trailExec.index)\n    trail = trailExec[0]\n    closingParenIndex = trail.indexOf(')')\n    openingParens = ccount(url, '(')\n    closingParens = ccount(url, ')')\n\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\n      url += trail.slice(0, closingParenIndex + 1)\n      trail = trail.slice(closingParenIndex + 1)\n      closingParenIndex = trail.indexOf(')')\n      closingParens++\n    }\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').Association} Association\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another: controversially,\n * character escapes and references don’t work in this matching: `&copy;` does\n * not match `©`, and `\\+` does not match `+`.\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character escapes\n * and all character references.\n *\n * @param {Association} node\n * @returns {string}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * Functions to track output positions.\n * This info isn’t used yet but suchs functionality allows line wrapping,\n * and theoretically source maps (though, is there practical use in that?).\n *\n * @param {TrackFields} options_\n */\nexport function track(options_) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = options_ || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @returns {{now: Point, lineShift: number}}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @param {number} value\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past a string.\n   *\n   * @param {string} value\n   * @returns {string}\n   */\n  function move(value = '') {\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Join} Join\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {TrackFields} safeOptions\n * @returns {string}\n */\nexport function containerFlow(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  const tracker = track(safeOptions)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      context.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(tracker.move(between(child, children[index + 1])))\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n\n  /**\n   * @param {Node} left\n   * @param {Node} right\n   * @returns {string}\n   */\n  function between(left, right) {\n    let index = context.join.length\n\n    while (index--) {\n      const result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return '\\n'.repeat(1 + result)\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","/**\n * @callback Map\n * @param {string} value\n * @param {number} line\n * @param {boolean} blank\n * @returns {string}\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @param {string} value\n * @param {Map} map\n * @returns {string}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * @param {Context} context\n * @param {string|null|undefined} input\n * @param {SafeOptions & {encode?: Array<string>}} config\n * @returns {string}\n */\nexport function safe(context, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/**\n * @returns {FromMarkdownExtension}\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinition(token) {\n    this.enter(\n      {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n      token\n    )\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinitionLabelString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinitionLabelString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinition(token) {\n    this.exit(token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCall(token) {\n    this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCallString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCallString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCall(token) {\n    this.exit(token)\n  }\n}\n\n/**\n * @returns {ToMarkdownExtension}\n */\nexport function gfmFootnoteToMarkdown() {\n  footnoteReference.peek = footnoteReferencePeek\n\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteReference} node\n   */\n  function footnoteReference(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteReference')\n    const subexit = context.enter('reference')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    exit()\n    value += tracker.move(']')\n    return value\n  }\n\n  /** @type {ToMarkdownHandle} */\n  function footnoteReferencePeek() {\n    return '['\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteDefinition')\n    const subexit = context.enter('label')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    value += tracker.move(\n      ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n    )\n    tracker.shift(4)\n    value += tracker.move(\n      indentLines(containerFlow(node, context, tracker.current()), map)\n    )\n    exit()\n\n    return value\n\n    /** @type {Map} */\n    function map(line, index, blank) {\n      if (index) {\n        return (blank ? '' : '    ') + line\n      }\n\n      return line\n    }\n  }\n}\n","/**\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {SafeOptions} safeOptions\n * @returns {string}\n */\nexport function containerPhrasing(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = safeOptions.before\n\n  indexStack.push(-1)\n  let tracker = track(safeOptions)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = context.handle.handlers[children[index + 1].type]\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = track(safeOptions)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethroughs. So they sort of cancel each other out.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/c47743b/lib/unsafe.js#L11>\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\n/** @type {ToMarkdownExtension} */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [\n    {\n      character: '~',\n      inConstruct: 'phrasing',\n      notInConstruct: constructsWithoutStrikethrough\n    }\n  ],\n  handlers: {delete: handleDelete}\n}\n\nhandleDelete.peek = peekDelete\n\n/** @type {FromMarkdownHandle} */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('emphasis')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, import('mdast').Parent>} Parent\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parent|undefined} _\n * @param {Context} context\n * @returns {string}\n */\nexport function inlineCode(node, _, context) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').AlignType} AlignType\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n *\n * @typedef Options\n * @property {boolean} [tableCellPadding=true]\n * @property {boolean} [tablePipeAlign=true]\n * @property {MarkdownTableOptions['stringLength']} [stringLength]\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterTable(token) {\n  /** @type {Array<'left'|'right'|'center'|'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/** @type {FromMarkdownHandle} */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      // @ts-expect-error: fixed in `markdown-table@3.0.1`.\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    // `markdown-table` will always add an align row\n    const value = serializeData([row])\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string>} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      alignDelimiters,\n      padding,\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('../util/indent-lines.js').Map} Map\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, import('mdast').Parent>} Parent\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\nimport {containerFlow} from '../util/container-flow.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {track} from '../util/track.js'\n\n/**\n * @param {ListItem} node\n * @param {Parent|undefined} parent\n * @param {Context} context\n * @param {SafeOptions} safeOptions\n * @returns {string}\n */\nexport function listItem(node, parent, context, safeOptions) {\n  const listItemIndent = checkListItemIndent(context)\n  let bullet = context.bulletCurrent || checkBullet(context)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = track(safeOptions)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = context.enter('listItem')\n  const value = indentLines(\n    containerFlow(node, context, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['listItemIndent'], undefined>}\n */\nexport function checkListItemIndent(context) {\n  const style = context.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bullet'], undefined>}\n */\nexport function checkBullet(context) {\n  const marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {Extract<import('mdast').Root|import('mdast').Content, import('unist').Parent>} Parent\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parent} */ (this.stack[this.stack.length - 2])\n  const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n  const siblings = parent.children\n  const head = node.children[0]\n  let index = -1\n  /** @type {Paragraph|undefined} */\n  let firstParaghraph\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean' &&\n    head &&\n    head.type === 'text'\n  ) {\n    while (++index < siblings.length) {\n      const sibling = siblings[index]\n      if (sibling.type === 'paragraph') {\n        firstParaghraph = sibling\n        break\n      }\n    }\n\n    if (firstParaghraph === node) {\n      // Must start with a space or a tab.\n      head.value = head.value.slice(1)\n\n      if (head.value.length === 0) {\n        node.children.shift()\n      } else if (\n        node.position &&\n        head.position &&\n        typeof head.position.start.offset === 'number'\n      ) {\n        head.position.start.column++\n        head.position.start.offset++\n        node.position.start = Object.assign({}, head.position.start)\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-gfm-table').Options} Options\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * @returns {Array<FromMarkdownExtension>}\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types.js').Action} Action\n * @typedef {import('./complex-types.js').Index} Index\n * @typedef {import('./complex-types.js').ActionTuple} ActionTuple\n * @typedef {import('./complex-types.js').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param [reverse=false]\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor<Node>} visitor\n     * @param {boolean} [reverse=false]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","declarations","decl","decls","isBuffer","u","b","Symbol","for","d","e","f","g","h","k","l","n","p","q","t","v","a","r","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","typeOf","parse","require","StyleToObject","iterator","output","hasIterator","len","element","document","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","charCodeAt","blankLine","tokenize","tokenizeBlankLine","effects","ok","nok","factorySpace","afterWhitespace","code","markdownLineEnding","partial","max","limit","Number","POSITIVE_INFINITY","size","markdownSpace","enter","prefix","consume","exit","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","unicodeWhitespace","unicodePunctuation","regex","check","test","String","fromCharCode","splice","list","remove","items","parameters","chunkStart","from","unshift","apply","classifyCharacter","combineExtensions","extensions","all","index","syntaxExtension","extension","hook","left","undefined","right","constructs","existing","before","add","decodeNumericCharacterReference","base","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","head","hex","normalizeIdentifier","toLowerCase","toUpperCase","resolveAll","events","context","called","resolve","includes","stringifyPosition","point","VFileMessage","place","origin","parts","indexOf","message","stack","fatal","ruleId","file","actual","expected","url","note","path","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","join","joined","segments","normalize","sep","absolute","normalizeString","allowAboveRoot","lastSlashIndex","result","lastSegmentLength","lastSlash","dots","JSON","stringify","proc","cwd","isUrl","fileURLOrPath","href","urlToPath","URL","protocol","getPathFromURLPosix","hostname","pathname","third","decodeURIComponent","order","VFile","buffer","data","messages","history","stored","map","get","set","assertNonEmpty","assertPart","stem","encoding","info","fail","part","bail","getPrototypeOf","toStringTag","wrap","middleware","callback","wrapped","fnExpectsCallback","done","exception","Promise","then","unified","frozen","transformers","trough","fns","pipeline","run","values","middlewareIndex","pop","next","fn","use","middelware","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","settings","addPlugin","addList","addPreset","assign","plugin","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","reject","tree","runSync","complete","assertDone","process","looksLikeAVFileValue","processSync","destination","keys","asyncName","looksLikeAVFile","Boolean","includeImageAlt","one","alt","children","initializeContent","previous","contentStart","attempt","parser","contentInitial","afterContentStartConstruct","paragraphInitial","lineStart","token","contentType","initializeDocument","childFlow","childToken","lineStartOffset","self","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","tokenizeContainer","disable","null","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","tokenizeContent","contentEnd","continuationConstruct","contentContinue","resolveContent","tokenizeContinuation","startLookahead","prefixed","tail","sliceSerialize","initializeFlow","initial","atBlankEnding","flowInitial","afterConstruct","resolver","createResolver","string","initializeFactory","text","field","initializeText","notText","atBreak","resolveAllLineSuffixes","extraResolver","resolveAllText","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","onsuccessfulconstruct","construct","addResult","onsuccessfulcheck","expandTabs","serializeChunks","atTab","main","state","sliceChunks","view","startIndex","startBufferIndex","endIndex","endBufferIndex","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","handleMapOfConstructs","def","handleConstruct","store","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","create","resolveTo","thematicBreak","tokenizeThematicBreak","marker","sequence","tokenizeListStart","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","tokenizeListContinuation","furtherBlankLines","notBlank","notInCurrentItem","indentConstruct","tokenizeListEnd","tokenizeListItemPrefixWhitespace","afterPrefix","tokenizeIndent","blockQuote","tokenizeBlockQuoteStart","open","after","tokenizeBlockQuoteContinuation","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","definition","tokenizeDefinition","identifier","labelAfter","titleConstruct","defined","tokenizeTitle","codeIndented","tokenizeCodeIndented","afterStartPrefix","indentedContent","tokenizeIndentedContent","headingAtx","tokenizeHeadingAtx","fenceOpenInside","headingBreak","resolveHeadingAtx","setextUnderline","tokenizeSetextUnderline","paragraph","closingSequence","closingSequenceEnd","resolveToSetextUnderline","heading","htmlBlockNames","htmlRawNames","htmlFlow","tokenizeHtmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","resolveToHtmlFlow","tokenizeNextBlank","codeFenced","tokenizeCodeFenced","closingFenceConstruct","tokenizeClosingFence","closingSequenceStart","sizeOpen","nonLazyLine","tokenizeNonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","tokenizeCharacterReference","numeric","characterEscape","tokenizeCharacterEscape","lineEnding","tokenizeLineEnding","labelEnd","tokenizeLabelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","resolveToLabelEnd","close","media","group","insideSpan","resolveAllLabelEnd","tokenizeResource","destinationAfter","between","tokenizeFullReference","afterLabel","tokenizeCollapsedReference","labelStartImage","tokenizeLabelStartImage","attention","tokenizeAttention","attentionMarkers","_open","_close","resolveAllAttention","openingSequence","nextEvents","movePoint","autolink","tokenizeAutolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","tokenizeHtmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","tokenizeLabelStartLink","hardBreakEscape","tokenizeHardBreakEscape","codeText","tokenizeCodeText","gap","resolveCodeText","tailExitIndex","headEnterIndex","resolveText","search","fromMarkdown","compiler","config","configure","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","depth","parent","referenceType","ancestor","fragment","ordered","spread","checked","postprocess","defaultConstructs","concat","creator","preprocess","atCarriageReturn","preprocessor","endPosition","lastIndex","Math","ceil","combined","remarkParse","props","visit","visitor","reverse","visitParents","overload","parents","pointStart","pointEnd","clean","unknown","augment","handlers","passThrough","returnNode","unknownHandler","nodes","normalizeUri","skip","encodeURIComponent","loose","footnoteReference","counter","id","safeId","footnoteOrder","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","ariaDescribedBy","revert","subtype","suffix","contents","listItemLoose","trimLine","codePointAt","blockquote","break","className","delete","strikethrough","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","disabled","child","properties","root","table","rows","align","row","out","cellIndex","cell","trimLines","last","toml","ignore","yaml","footnoteDefinition","factory","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","definitions","cache","hName","hProperties","hChildren","ctx","generated","toHast","foot","footer","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","remarkRehype","bridge","mutate","Schema","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","checks","types","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","thing","valid","dash","cap","kebab","camelcase","hastToReact","tableElements","Set","childrenToReact","childIndex","toReact","has","skipHtml","parentSchema","schema","addProperty","listDepth","component","components","basic","React","ReactIs","linkTarget","transformLinkUri","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","flattenPosition","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","find","Type","rest","dashes","padRight","padLeft","commas","spaces","parseStyle","styleReplacer","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkPlugins","remarkRehypeOptions","rehypePlugins","hastNode","defaultProps","uriTransformer","propTypes","PropTypes","protocols","uri","first","colon","www","tokenizeWww","w2","w3","dot","domain","tokenizeDomain","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","namedCharacterReference","punctuationContinuation","punctuation","tokenizePath","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","tokenizePunctuation","tokenizeNamedCharacterReference","wwwAutolink","tokenizeWwwAutolink","previousWww","previousUnbalanced","httpAutolink","tokenizeHttpAutolink","previousHttp","t1","t2","s","slash1","slash2","emailAutolink","tokenizeEmailAutolink","hasDot","hasDigitInLastSegment","gfmAtext","previousEmail","atext","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","gfmAutolinkLiteral","_gfmAutolinkLiteralWalkedInto","indent","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","gfmFootnotes","replacement","callStart","callData","callEscape","gfmStrikethrough","single","singleTilde","tokenizeStrikethrough","resolveAllStrikethrough","gfmTable","tokenizeTable","seenDelimiter","hasDash","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","atRowEndHead","originalInterrupt","tokenizeRowEnd","atDelimiterRowBreak","inWhitespaceHead","inCellContentEscapeHead","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","atRowEndBody","tableBodyClose","inWhitespaceBody","inCellContentEscapeBody","resolveTable","inHead","inDelimiterRow","inRow","cellStart","seenCellInRow","tokenizeNextPrefixedOrBlank","tasklistCheck","tokenizeTasklistCheck","spaceThenNonSpace","gfmTaskListItem","gfm","ccount","character","findAndReplace","RegExp","ignored","convert","pairs","toPairs","toExpression","toFunction","pairIndex","grandparent","change","matchObject","global","escapeStringRegexp","escape","inConstruct","notInConstruct","gfmAutolinkLiteralFromMarkdown","transformGfmAutolinkLiterals","findUrl","findEmail","literalAutolink","enterLiteralAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","exitLiteralAutolink","exitLiteralAutolinkEmail","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","gfmAutolinkLiteralToMarkdown","unsafe","isCorrectDomain","split","splitUrl","closingParenIndex","openingParens","closingParens","trail","trailExec","email","association","track","options_","lineShift","move","shift","containerFlow","safeOptions","indexStack","tracker","handle","bulletLastUsed","repeat","eol","indentLines","patternCompile","_compiled","patternInScope","listInScope","none","safe","positions","infos","expression","sort","numerical","escapeBackslashes","encode","whole","gfmFootnoteToMarkdown","peek","footnoteReferencePeek","subexit","blank","containerPhrasing","gfmStrikethroughFromMarkdown","enterStrikethrough","exitStrikethrough","gfmStrikethroughToMarkdown","handleDelete","serialize","defaultStringLength","toAlignment","peekDelete","inlineCodePeek","gfmTableFromMarkdown","enterTable","tableData","enterCell","tableHeader","tableRow","enterRow","exitCodeText","exitTable","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","handleTable","serializeData","handleTableAsData","handleTableRowAsData","handleTableRow","tableCell","handleTableCell","inlineCodeWithTable","matrix","markdownTable","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","columnIndex","delimiterStart","delimiterEnd","listItemIndent","checkListItemIndent","bullet","bulletCurrent","checkBullet","incrementListMarker","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","exitParagraphWithTaskListItem","firstParaghraph","siblings","sibling","gfmTaskListItemToMarkdown","listItemWithTaskListItem","checkable","checkbox","gfmFromMarkdown","gfmFootnoteDefinition","enterFootnoteDefinition","gfmFootnoteDefinitionLabelString","enterFootnoteDefinitionLabelString","gfmFootnoteCall","enterFootnoteCall","gfmFootnoteCallString","enterFootnoteCallString","exitFootnoteDefinition","exitFootnoteDefinitionLabelString","exitFootnoteCall","exitFootnoteCallString","gfmToMarkdown","remarkGfm","typeFactory","castFactory","anyFactory","propsFactory","tests","any","assertion","subresult","grandparents","toResult"],"sourceRoot":""}