"use strict";(self.webpackChunk_nand2tetris_web=self.webpackChunk_nand2tetris_web||[]).push([[387],{8582:(t,e,s)=>{s.d(e,{M:()=>c});var n=s(7878),i=s(8365),r=s(4408),a=s(1585),o=s(4625);const c=t=>{let{className:e="",out:s,cmp:c,zeroState:h}=t;const l=i.lA.parse(s),d=i.lA.parse(c);if((0,o.dZ)(l))return(0,n.jsxs)("details",{children:[(0,n.jsx)("summary",{children:"Failed to parse output"}),(0,n.jsx)("pre",{children:(0,r.j)((0,o.UG)(l))}),(0,n.jsx)("code",{children:(0,n.jsx)("pre",{children:s})})]});if((0,o.dZ)(d))return(0,n.jsxs)("details",{children:[(0,n.jsx)("summary",{children:"Failed to parse compare"}),(0,n.jsxs)("code",{children:[(0,n.jsx)("pre",{children:(0,r.j)((0,o.UG)(d))}),(0,n.jsx)("pre",{children:c})]})]});const p=(0,o.Ok)(d),m=(0,o.Ok)(l);let g=0;const f=(0,a.w)(0,Math.min(p.length,m.length)).map((t=>{const e=p[t]??[],s=m[t]??[];return(0,a.w)(0,Math.max(e.length,s.length)).map(((t,n)=>[e[n]??"",s[n]??""])).map((t=>{let[e,s]=t;const n={cmp:e??'"',out:s??'"',pass:null!==e?.trim().match(/^\*+$/)||s?.trim()===e?.trim()};return n.pass||(g+=1),n}))}));return(0,n.jsxs)("div",{className:"scroll-x "+e,children:[g>0&&(0,n.jsxs)("p",{children:[g," failure",1===g?"":"s"]}),f.length>0?(0,n.jsx)("table",{style:{fontFamily:"var(--font-family-monospace)",marginBottom:"none"},children:(0,n.jsx)("tbody",{children:f.map(((t,e)=>(0,n.jsx)("tr",{children:t.map(((t,e)=>{let{cmp:s,out:i,pass:r}=t;return(0,n.jsx)(u,{cmp:s,out:i,pass:r},e)}))},e)))})}):h??(0,n.jsx)("p",{children:"Execute test script to compare output."})]})},u=t=>{let{cmp:e,out:s,pass:i}=t;return i?(0,n.jsx)(n.Fragment,{children:(0,n.jsx)("td",{children:e})}):(0,n.jsx)(n.Fragment,{children:(0,n.jsxs)("td",{children:[(0,n.jsx)("ins",{children:e}),(0,n.jsx)("br",{}),(0,n.jsx)("del",{children:s})]})})}},6329:(t,e,s)=>{s.d(e,{Af:()=>b,Gc:()=>c,P9:()=>w,lj:()=>a,qP:()=>l,tI:()=>v,yE:()=>o});var n=s(5541),i=s(1585),r=s(6531);const a=1,o=0;class c{name;width;state;next=[];constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;this.name=t,this.width=e,this.state=(0,i.w)(0,this.width).map((()=>o))}ensureWidth(t){(0,n.hu)(t<=16,`Cannot widen past 16 to ${t} bits`),this.width<t&&(this.width=t,this.state=[...this.state,...(0,i.w)(this.width,t).map((()=>o))])}connect(t){this.next.push(t),t.busVoltage=this.busVoltage}pull(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;(0,n.hu)(e>=0&&e<this.width,`Bit out of bounds: ${this.name}@${e}`),this.state[e]=t,this.next.forEach((s=>s.pull(t,e)))}voltage(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return(0,n.hu)(t>=0&&t<this.width),this.state[t]}set busVoltage(t){for(const e of(0,i.w)(0,this.width))this.state[e]=(t&1<<e)>>e;this.next.forEach((t=>t.busVoltage=this.busVoltage))}get busVoltage(){return(0,i.w)(0,this.width).reduce(((t,e)=>t|this.state[e]<<e),0)}toggle(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const e=this.voltage(t)===o?a:o;this.pull(e,t)}}class u extends c{bus;start;width;constructor(t,e){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;super(t.name),this.bus=t,this.start=e,this.width=s,(0,n.hu)(e>=0&&e+s<=t.width,`Mismatched InSubBus dimensions on ${t.name} (${s} + ${e} > ${t.width})`),this.connect(t)}pull(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;(0,n.hu)(e>=0&&e<this.width),this.bus.pull(t,this.start+e)}voltage(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return(0,n.hu)(t>=0&&t<this.width),this.bus.voltage(this.start+t)}set busVoltage(t){const e=this.bus.busVoltage&~A(this.width+this.start),s=this.bus.busVoltage&A(this.start),n=(t&A(this.width))<<this.start;this.bus.busVoltage=e|n|s}get busVoltage(){return this.bus.busVoltage>>this.start&A(this.width)}connect(t){(0,n.hu)(this.start+this.width<=t.width,`Mismatched InSubBus connection dimensions (From ${t.name} to ${this.name})`),this.bus=t}}class h extends c{bus;start;width;constructor(t,e){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;super(t.name),this.bus=t,this.start=e,this.width=s,(0,n.hu)(e>=0&&s<=t.width,"Mismatched OutSubBus dimensions"),this.connect(t)}set busVoltage(t){this.bus.busVoltage=(t&A(this.width+this.start))>>this.start}get busVoltage(){return this.bus.busVoltage&A(this.width)}connect(t){(0,n.hu)(this.width<=t.width,"Mismatched OutSubBus connection dimensions"),this.bus=t}}class l extends c{value;constructor(t,e){super(t,16),this.value=e}pullHigh(){}pullLow(){}voltage(){return 1&this.busVoltage}set busVoltage(t){}get busVoltage(){return this.value}}const d=new l("true",65535),p=new l("false",0);function m(t){const{pin:e,w:s}=t.match(/(?<pin>[a-zA-Z]+)(\[(?<w>\d+)\])?/)?.groups;return{pin:e,width:s?Number(s):1}}class g{map=new Map;insert(t){const{name:e}=t;(0,n.hu)(!this.map.has(e),`Pins already has ${e}!`),this.map.set(e,t)}emplace(t,e){if(this.has(t))return this.get(t);{const s=new c(t,e);return this.insert(s),s}}has(t){return this.map.has(t)}get(t){return this.map.get(t)}entries(){return this.map.values()}[Symbol.iterator](){return this.map[Symbol.iterator]()}}let f=0;class b{name;id=f++;ins=new g;outs=new g;pins=new g;parts=new Set;clockedPins;get clocked(){if(this.clockedPins.size>0)return!0;for(const t of this.parts)if(t.clocked)return!0;return!1}constructor(t,e,s){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[],i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[];this.name=s;for(const r of t){const{pin:t,width:e=1}=void 0!==r.pin?r:m(r);this.ins.insert(new c(t,e))}for(const r of e){const{pin:t,width:e=1}=void 0!==r.pin?r:m(r);this.outs.insert(new c(t,e))}for(const r of n){const{pin:t,width:e=1}=void 0!==r.pin?r:m(r);this.pins.insert(new c(t,e))}this.clockedPins=new Set(i),r.S.get().$.subscribe((()=>this.eval()))}reset(){for(const[t,e]of this.ins)e.busVoltage=0;for(const t of this.parts)t.reset();this.eval()}in(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"in";return(0,n.hu)(this.hasIn(t),`No in pin ${t}`),this.ins.get(t)}out(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"out";return(0,n.hu)(this.hasOut(t),`No in pin ${t}`),this.outs.get(t)}hasIn(t){return this.ins.has(t)}hasOut(t){return this.outs.has(t)}pin(t){return(0,n.hu)(this.pins.has(t)),this.pins.get(t)}get(t,e){return this.ins.has(t)?this.ins.get(t):this.outs.has(t)?this.outs.get(t):this.pins.has(t)?this.pins.get(t):this.getBuiltin(t,e)}getBuiltin(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(y.includes(t))for(const s of this.parts){const n=s.get(t,e);if(n)return n}}isOutPin(t){return this.outs.has(t)}wire(t,e){this.parts.add(t);for(const{to:s,from:n}of e)t.isOutPin(s.name)?this.wireOutPin(t,s,n):this.wireInPin(t,s,n)}findPin(t,e){return"true"===t.toLowerCase()||"1"===t?d:"false"===t.toLowerCase()||"0"===t?p:this.ins.has(t)?this.ins.get(t):this.outs.has(t)?this.outs.get(t):this.pins.emplace(t,e)}wireOutPin(t,e,s){const i=(0,n.kP)(t.outs.get(e.name),(()=>`Cannot wire to missing pin ${e.name}`));e.width??=i.width;let r=this.findPin(s.name,s.width??e.width);const a=this.pins.has(r.name);if(s.width??=r.width,r instanceof l)throw new Error("Cannot wire to constant bus");a&&r instanceof c&&r.ensureWidth(s.start+s.width),(s.start>0||s.width!==r.width)&&(r=new u(r,s.start,s.width)),(e.start>0||e.width!==r.width)&&(r=new h(r,e.start,e.width)),i.connect(r)}wireInPin(t,e,s){let i=(0,n.kP)(t.ins.get(e.name),(()=>`Cannot wire to missing pin ${e.name}`));e.width??=i.width;const r=this.findPin(s.name,s.width??e.width);s.width??=r.width,(e.start>0||e.width!==r.width)&&(i=new u(i,e.start,e.width)),["true","false"].includes(r.name)||(s.start>0||s.width!==r.width)&&(i=new h(i,s.start,s.width)),r.connect(i)}eval(){for(const t of this.parts)d.next.forEach((t=>t.busVoltage=d.busVoltage)),p.next.forEach((t=>t.busVoltage=p.busVoltage)),t.eval()}tick(){this.eval()}tock(){this.eval()}remove(){for(const t of this.parts)t.remove()}async load(t,e){for(const s of this.parts)"ROM32K"===s.name&&await s.load(t,e)}}class w extends b{constructor(){super([],[]),this.outs.insert(p)}}class v extends b{get clocked(){return!0}#t=r.S.get().$.subscribe((t=>{let{level:e}=t;e===o?this.tock():this.tick()}));remove(){this.#t.unsubscribe(),super.remove()}reset(){super.reset(),this.tick(),this.tock()}}function A(t){return Math.pow(2,t)-1}const y=["Register","ARegister","DRegister","PC","RAM8","RAM64","RAM512","RAM4K","RAM16K","ROM32K","Screen","Keyboard","Memory"]},6531:(t,e,s)=>{s.d(e,{S:()=>c});var n=s(1496),i=s(9810),r=s(5541),a=s(6329);let o;class c{level=a.yE;ticks=0;static get(){return void 0===o&&(o=new c),o}get isHigh(){return this.level===a.lj}get isLow(){return this.level===a.yE}subject=new n.X({level:this.level,ticks:this.ticks});frameSubject=new i.x;resetSubject=new i.x;$=this.subject;frame$=this.frameSubject;reset$=this.resetSubject;next(){this.subject.next({level:this.level,ticks:this.ticks})}constructor(){}reset(){this.level=a.yE,this.ticks=0,this.next(),this.resetSubject.next()}tick(){(0,r.hu)(this.level===a.yE,"Can only tick up from LOW"),this.level=a.lj,this.next()}tock(){(0,r.hu)(this.level===a.lj,"Can only tock down from HIGH"),this.level=a.yE,this.ticks+=1,this.next()}toggle(){this.level===a.lj?this.tock():this.tick()}eval(){this.tick(),this.tock()}frame(){this.frameSubject.next()}toString(){return`${this.ticks}${this.level===a.lj?"+":""}`}}},6693:(t,e,s)=>{s.d(e,{Bb:()=>c,NM:()=>n,PH:()=>i,Uc:()=>r,lK:()=>a,vU:()=>o});const n={op:{42:"0",63:"1",58:"-1",12:"x",48:"y",13:"!x",49:"!y",15:"-x",51:"-y",31:"x+1",55:"y+1",14:"x-1",50:"y-1",2:"x+y",19:"x-y",7:"y-x",0:"x&y",21:"x|y"}},i={asm:{0:42,1:63,"-1":58,D:12,A:48,M:48,"!D":13,"!A":49,"-D":15,"-A":51,"D+1":31,"A+1":55,"D-1":14,"A-1":50,"D+A":2,"D-A":19,"D-M":19,"A-D":7,"D&A":0,"D&M":0,"D|A":21,"D|M":21},op:{42:"0",63:"1",58:"-1",12:"D",48:"A",13:"!D",49:"!A",15:"-D",51:"-A",31:"D+1",55:"A+1",14:"D-1",50:"A-1",2:"D+A",19:"D-A",7:"A-D",0:"D&A",21:"D|A"}},r={asm:{"":0,M:1,D:2,MD:3,A:4,AM:5,AD:6,AMD:7},op:{0:"",1:"M",2:"D",3:"MD",4:"A",5:"AM",6:"AD",7:"AMD"}},a={asm:{"":0,JGT:1,JEQ:2,JGE:3,JLT:4,JNE:5,JLE:6,JMP:7},op:{0:"",1:"JGT",2:"JEQ",3:"JGE",4:"JLT",5:"JNE",6:"JLE",7:"JMP"}},o={1:"Positive",0:"Zero",15:"Negative",Positive:1,Zero:0,Negative:15};function c(t,e,s){let n=0;switch(t){case 42:n=0;break;case 63:n=1;break;case 58:n=-1;break;case 12:n=e;break;case 48:n=s;break;case 13:n=~e;break;case 49:n=~s;break;case 15:n=-e;break;case 51:n=-s;break;case 31:n=e+1;break;case 55:n=s+1;break;case 14:n=e-1;break;case 50:n=s-1;break;case 2:n=e+s;break;case 19:n=e-s;break;case 7:n=s-e;break;case 0:n=e&s;break;case 21:n=e|s}n&=65535;return[n,0===n?o.Zero:32768&n?o.Negative:o.Positive]}},134:(t,e,s)=>{s.d(e,{Ff:()=>v,Jx:()=>b,Z9:()=>A,Zu:()=>r,aL:()=>w});var n=s(6693),i=s(5838);function r(){return{A:0,D:0,PC:0,ALU:0,flag:n.vU.Zero}}const a=32768,o=36864,c=36864,u=36864,h=4032,l=32800,d=32784,p=32776,m=32769,g=32770,f=32772;function b(t){function e(e){return(t&e)===e}return{c:e(a),x1:e(o),x2:e(c),am:e(u),op:(t&h)>>6,d1:e(l),d2:e(d),d3:e(p),j1:e(m),j2:e(g),j3:e(f)}}function w(t,e){let{inM:s,instruction:i}=t,{A:r,D:a,PC:o}=e;const c=b(i),u=c.am?s:r,[h,l]=(0,n.Bb)(c.op,a,u);return[{A:r,D:a,PC:o+1,ALU:h,flag:l},c.d3]}function v(t,e){let{inM:s,instruction:i,reset:r}=t,{A:a,D:o,PC:c,ALU:u,flag:h}=e;const l=b(i),d=l.j1&&h===n.vU.Positive,p=l.j2&&h===n.vU.Zero,m=l.j3&&h===n.vU.Negative;c=r?0:d||p||m?a:c,l.d2&&(o=u);const g=a;l.c?l.d1&&(a=u):a=32767&i;const f=l.am?s:a,w=(0,n.Bb)(l.op,o,f);u=w[0],h=w[1];return[{addressM:l.d3?g:a,outM:u,writeM:l.d3},{A:a,D:o,ALU:u,flag:h,PC:c}]}class A{RAM;ROM;Screen;Keyboard;#e=0;#s=0;#n=0;#i={A:0,D:0,PC:0,ALU:0,flag:n.vU.Zero};get state(){return this.#i}get PC(){return this.#e}get A(){return this.#s}get D(){return this.#n}setA(t){this.#s=t}setD(t){this.#n=t}setPC(t){this.#e=t}constructor(t){let{RAM:e=new i.FH,ROM:s}=t;this.RAM=e,this.ROM=s,this.Screen=new i.kG(this.RAM,i.yJ,i.GD),this.Keyboard=new i.qT(this.RAM)}reset(){this.#e=0,this.#s=0,this.#n=0}tick(){const[{addressM:t,outM:e,writeM:s},{A:i,D:r,PC:a}]=function(t,e){const[s,n]=w(t,e);return v(t,s)}({inM:this.RAM.get(this.#s),instruction:this.ROM.get(this.#e),reset:!1},{A:this.#s,D:this.#n,PC:this.#e,ALU:this.#n,flag:n.vU.Zero});this.#s=i,this.#n=r,this.#e=a,s&&this.RAM.set(t,e)}}},5838:(t,e,s)=>{s.d(e,{FH:()=>g,GD:()=>c,I2:()=>o,eD:()=>m,eu:()=>h,kG:()=>d,qT:()=>p,yJ:()=>u,zp:()=>l});var n=s(5541),i=s(7693),r=s(326),a=s(7930);const o=["bin","dec","hex","asm"],c=16384,u=131072,h=24576;class l{memory;get size(){return this.memory.length}constructor(t){this.memory=new Int16Array(t)}get(t){return t<0||t>=this.size?65535:this.memory[t]??0}set(t,e){t>=0&&t<this.size&&(this.memory[t]=65535&e)}reset(){this.memory.fill(0)}update(t,e,s){let n;switch(s){case"asm":n=(0,i.op)(e);break;case"bin":n=(0,r.C$)(e);break;case"hex":n=(0,r.Af)(e);break;default:n=(0,r.o5)(e)}isFinite(n)&&n<=65535&&this.set(t,n)}async load(t,e){try{this.loadBytes(await(0,a.zD)(t,e))}catch(s){throw new Error(`Memory Failed to load file ${e}`)}}loadBytes(t){this.memory.set(new Int16Array(t)),this.memory.fill(0,t.length,this.size)}range(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.size;return[...this.memory.slice(t,e)]}map(t){var e=this;let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.size;return function*(){(0,n.hu)(s<i);for(let n=s;n<i;n++)yield t(n,e.get(n))}()}}class d{parent;size;offset;constructor(t,e,s){this.parent=t,this.size=e,this.offset=s}get(t){return t<0||t>=this.size?65535:this.parent.get(this.offset+t)}set(t,e){t>=0&&t<this.size&&this.parent.set(t+this.offset,e)}reset(){for(let t=0;t<this.size;t++)this.set(t,0)}update(t,e,s){t>=0&&t<this.size&&this.parent.update(t+this.offset,e,s)}load(t,e){return this.parent.load(t,e)}loadBytes(t){return this.parent.loadBytes(t)}range(t,e){return this.parent.range(t,e)}map(t,e,s){return this.parent.map(t,e,s)}}class p extends d{constructor(t){super(t,1,24576)}getKey(){return this.get(0)}setKey(t){this.set(0,65535&t)}clearKey(){this.set(0,0)}}class m extends l{static SIZE=32768;constructor(t){const e=new Int16Array(m.SIZE);e.set(t),super(e)}}class g extends l{static SIZE=32768;constructor(){super(g.SIZE)}}},7930:(t,e,s)=>{s.d(e,{zD:()=>i});var n=s(2724);async function i(t,e){if(e.endsWith(".hack"))return async function(t,e){return n.$W(await t.readFile(e))}(t,e);if(e.endsWith(".asm"))return async function(t,e){return n.eC(await t.readFile(e))}(t,e);throw new Error(`Cannot load file without hack or asm extension ${e}`)}},1510:(t,e,s)=>{s.d(e,{eP:()=>a,rJ:()=>c,y1:()=>o,Pz:()=>u});var n=s(5640),i=s(326),r=s(4625);const a="Unknown parse error",o={Base:n.Z.grammar('\nBase {\n  Root = Value*\n\n  At = at\n  Bang = bang\n  Bar = bar\n  CloseAngle = closeAngle\n  CloseBrace = closeBrace\n  CloseParen = closeParen\n  CloseSquare = closeSquare\n  Comma = comma\n  Dollar = dollar\n  Dot = dot\n  DoubleQuote = doubleQuote\n  Equal = equal\n  OpenAngle = openAngle\n  OpenBrace = openBrace\n  OpenParen = openParen\n  OpenSquare = openSquare\n  Percent = percent\n  Semi = semi\n  Underscore = underscore\n\n  at = "@"\n  bang = "!"\n  bar = "|"\n  closeAngle = ">"\n  closeBrace = "}"\n  closeParen = ")"\n  closeSquare = "]"\n  comma = ","\n  dollar = "$"\n  dot = "."\n  doubleQuote = "\\""\n  equal = "="\n  minus = "-"\n  newline = "\\r"? "\\n"\n  openAngle = "<"\n  openBrace = "{"\n  openParen = "("\n  openSquare = "["\n  percent = "%"\n  semi = ";"\n  underscore = "_"\n\n  Value = identifier | number | boolean\n\n  boolean = true | false\n  True = true\n  False = false\n  true = "true"\n  false = "false"\n\n  Name = identifier\n  identifier = (letter|underscore) (alnum|underscore|dot|dollar)*\n\n  Number = number\n  number = hexNumber | decNumber | binNumber\n  binNumber = ("%B") ("0"|"1")+\n  hexNumber = ("%X") hexDigit+\n  decNumber = ("%D")? (wholeDec | realDec)\n  wholeDec = minus? digit+\n  realDec = minus? digit* "." digit+\n\n  String = DoubleQuote (~doubleQuote any)* doubleQuote\n  \n  spaces := (lineComment | comment | space)*\n  commentStart = "/*"\n  commentEnd = "*/"\n  comment = commentStart (~commentEnd any)* commentEnd\n  lineCommentStart = "//"\n  lineComment = lineCommentStart (~"\\n" any)* "\\n"\n\n  List<elem, sep> = NonemptyListOf<elem, sep> sep?\n  EmptyList<elem, sep> = EmptyList<elem, sep> sep?\n}')},c=o.Base.createSemantics();function u(t,e){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t=>{let{root:e}=t;return e};return function(n){try{const i=t.match(n);if(i.succeeded()){const t=e(i),n=s(t);return(0,r.Ok)(n)}return(0,r.UG)({message:i.message??a,shortMessage:i.shortMessage??a})}catch(i){return(0,r.UG)(i)}}}c.extendOperation("asIteration",{List:(t,e)=>t.asIteration()}),c.addAttribute("value",{decNumber:(t,e)=>(0,i.o5)(e.sourceString),wholeDec:(t,e)=>(0,i.o5)(e.sourceString),binNumber:(t,e)=>(0,i.C$)(e.sourceString),hexNumber:(t,e)=>(0,i.Af)(e.sourceString),Number:t=>t.value,Name:t=>t.name,identifier(t,e){return this.sourceString}}),c.addAttribute("name",{identifier(t,e){return this.sourceString},Name(t){return this.child(0)?.name}}),c.addAttribute("String",{String:(t,e,s)=>e.sourceString})},8365:(t,e,s)=>{s.d(e,{lA:()=>c});var n=s(5640),i=s(1510);const r="\nCmp <: Base {\n  Root := line*\n  line = bar cell+ newline?\n  cell = cellvalue bar\n  cellvalue = (~(bar|newline) any)*\n}",a=n.Z.grammar(r,i.y1),o=a.extendSemantics(i.rJ);o.addAttribute("cell",{cell:(t,e)=>t.sourceString}),o.addAttribute("line",{line:(t,e,s)=>e.children.map((t=>t.cell))}),o.addAttribute("root",{Root:t=>t.children.map((t=>t.line))});const c={grammar:r,semantics:o,parser:a,parse:(0,i.Pz)(a,o)}},9647:(t,e,s)=>{s.d(e,{qH:()=>c});var n=s(5640),i=s(1510);const r='\nTst <: Base {\n  Root := Tst\n  Tst = (TstStatement | TstRepeat | TstWhile)+\n\n  TstRepeat = Repeat Number? OpenBrace TstStatement+ CloseBrace\n  TstWhile = While Condition OpenBrace TstStatement+ CloseBrace\n  TstStatement = List<TstOperation, ","> (Semi | Bang)\n\n  TstOperation =\n    | TstFileOperation\n    | TstOutputListOperation\n    | TstEvalOperation\n    | TstSetOperation\n    | TstOutputOperation\n    | TstEchoOperation\n    | TstClearEchoOperation\n    | TstLoadROMOperation\n\n  TstLoadROMOperation = ROM32K Load FileName\n  TstFileOperation = FileOperation FileName\n  TstOutputListOperation = "output-list" OutputFormat+\n  OutputFormat = Name Index? percent FormatStyle wholeDec dot wholeDec dot wholeDec\n  TstSetOperation = Set Name Index? Number\n  Index = OpenSquare wholeDec? CloseSquare\n  Condition = Value CompareOp Value\n  TstEvalOperation = Eval | Tick | Tock | TickTock\n  TstOutputOperation = Output\n  TstEchoOperation = Echo String\n  TstClearEchoOperation = ClearEcho\n\n  FileName = Name\n  FileOperation = "load" | "output-file" | "compare-to"\n\n  Set = "set"\n  Eval = "eval"\n  Tick = "tick"\n  Tock = "tock"\n  TickTock = "ticktock"\n  Echo = "echo"\n  Repeat = "repeat"\n  ClearEcho = "clear-echo"\n  Output = "output"\n  OutputList = "output-list"\n  FormatStyle = "B"|"D"|"S"|"X"\n  ROM32K = "ROM32K"\n  Load = "load"\n  While = "while"\n\n  CompareOp = "<>" | "<=" | ">=" | "=" | "<" | ">"\n}',a=n.Z.grammar(r,i.y1),o=a.extendSemantics(i.rJ);o.extendAttribute("value",{Index:(t,e,s)=>e?.child(0)?.value??-1}),o.extendAttribute("name",{FileName(t){let{name:e}=t;return e}}),o.addAttribute("index",{Index:(t,e,s)=>e.child(0)?.value??0}),o.addAttribute("format",{OutputFormat(t,e,s,n,i,r,a,o,c){let{name:u}=t,{sourceString:h}=n,{value:l}=i,{value:d}=a,{value:p}=c;return{id:u,builtin:void 0!==e?.child(0),address:e?.child(0)?.value??-1,style:h,width:d,lpad:l,rpad:p}}}),o.addAttribute("operation",{TstEvalOperation:t=>({op:t.sourceString}),TstOutputOperation:t=>({op:"output"}),TstOutputListOperation:(t,e)=>({op:"output-list",spec:e.children.map((t=>t.format))}),TstSetOperation(t,e,s,n){let{name:i}=e,{value:r}=n;const a={op:"set",id:i,value:r},o=s.child(0)?.child(1)?.child(0);return o&&(a.index=o.value),a},TstEchoOperation:(t,e)=>({op:"echo",message:e.String}),TstClearEchoOperation:t=>({op:"clear-echo"}),TstLoadROMOperation(t,e,s){let{name:n}=s;return{op:"loadRom",file:n}},TstFileOperation:(t,e)=>({op:t.sourceString,file:e.sourceString})}),o.addAttribute("condition",{Condition(t,e,s){let{value:n}=t,{sourceString:i}=e,{value:r}=s;return{left:n,right:r,op:i}}}),o.addAttribute("statement",{TstWhile:(t,e,s,n,i)=>({statements:n.children.map((t=>{let{statement:e}=t;return e})),condition:e.condition,span:{start:t.source.startIdx,end:e.source.endIdx}}),TstRepeat:(t,e,s,n,i)=>({statements:n.children.map((t=>{let{statement:e}=t;return e})),count:e.child(0)?.value??-1,span:{start:t.source.startIdx,end:e.source.endIdx}}),TstStatement(t,e){const s={ops:t.asIteration().children.map((t=>t.operation)),span:{start:this.source.startIdx,end:this.source.endIdx}};return"!"===e.sourceString&&(s.break=!0),s}}),o.addAttribute("tst",{Tst:t=>({lines:t.children.map((t=>t.statement))})}),o.addAttribute("root",{Root(t){let{tst:e}=t;return e}});const c={grammar:r,semantics:o,parser:a,parse:(0,i.Pz)(a,o)}},2724:(t,e,s)=>{s.d(e,{eC:()=>f,uC:()=>w,$W:()=>b});var n=s(4625),i=s(5541),r=s(5640),a=s(6693),o=s(5838),c=s(7693),u=s(1510);const h='\nASM <: Base {\n  Root := ASM\n  ASM = Instruction*\n  \n  Instruction = Label|AInstruction|CInstruction\n  \n  Label = OpenParen identifier closeParen\n  AInstruction = at (identifier | decNumber)\n  CInstruction = assign? op jmp?\n  \n  assign = (\n      "AMD"\n      | "AM"\n      | "AD"\n      | "MD"\n      | "M"\n      | "D"\n      | "A"\n      ) equal\n      \n  op =\n      | "0" | "1" | "-1"\n      | "!D" | "!A" | "!M"\n      | "-D" | "-A" | "-M"\n      | "D+1" | "A+1" | "M+1"\n      | "D-1" | "A-1" | "M-1"\n      | "D+A" | "D+M"\n      | "D-A" | "D-M"\n      | "A-D" | "M-D"\n      | "D&A" | "D&M"\n      | "D|A" | "D|M"\n      | "D" | "A" | "M"\n\n\n  jmp = semi ("JGT" | "JEQ" | "JGE" | "JLT" | "JNE" | "JLE" | "JMP")\n}',l=r.Z.grammar(h,u.y1),d=l.extendSemantics(u.rJ);function p(t){return void 0!==t.label}d.addAttribute("root",{Root(t){return this.asm}}),d.addAttribute("asm",{Root:t=>({instructions:t.child(0).children.map((t=>{let{instruction:e}=t;return e}))})}),d.addAttribute("instruction",{AInstruction(t,e){try{return{type:"A",label:e.name}}catch(s){}try{return{type:"A",value:e.value}}catch(s){}throw new Error("AsmAInstruction must have either a name or a value")},CInstruction(t,e,s){const n=t.child(0)?.child(0)?.sourceString,i=e.sourceString.replace("M","A"),r=s.child(0)?.child(1)?.sourceString,o=t.sourceString.includes("M")||e.sourceString.includes("M"),c={type:"C",op:a.PH.asm[i],isM:o};return r&&(c.jump=a.lK.asm[r]),n&&(c.store=a.Uc.asm[n]),c},Label(t,e,s){let{name:n}=e;return{type:"L",label:n}}});const m={grammar:h,semantics:d,parser:l,parse:(0,u.Pz)(l,d),passes:{fillLabel:function(t){let e=16;const s=new Map([["R0",0],["R1",1],["R2",2],["R3",3],["R4",4],["R5",5],["R6",6],["R7",7],["R8",8],["R9",9],["R10",10],["R11",11],["R12",12],["R13",13],["R14",14],["R15",15],["SP",0],["LCL",1],["ARG",2],["THIS",3],["THAT",4],["SCREEN",o.GD],["KBD",o.eu]]),n=[];let r=0;for(const i of t.instructions)if("L"!==i.type)r+=1,"A"===i.type&&p(i)&&n.push(i);else{if(s.has(i.label))throw new Error(`ASM Duplicate label ${i.label}`);s.set(i.label,r)}n.forEach((function(t){const n=(r=t.label,s.has(r)||(s.set(r,e),e+=1),(0,i.kP)(s.get(r),`Label not in symbols: ${r}`));var r;t.value=n,delete t.label}))},emit:function(t){return t.instructions.map((t=>{if("A"===t.type){if(p(t))throw new Error("ASM Emitting unfilled A instruction");return t.value}if("C"===t.type)return(0,c.p)(t.isM,t.op,t.store,t.jump)})).filter((t=>void 0!==t))}}};var g=s(326);async function f(t){const e=(0,n.Wg)(m.parse(t));return m.passes.fillLabel(e),m.passes.emit(e)}async function b(t){return t.split("\n").filter((t=>""!==t.trim())).map(g.C$)}async function w(t){return t.split("\n").filter((t=>""!==t.trim())).map(g.t1)}},3389:(t,e,s)=>{s.d(e,{o6:()=>w,l1:()=>b});var n=s(5541),i=s(9956),r=s(6329),a=s(6531),o=s(326);class c{variable;fmt;lPad;rPad;len;index;builtin;constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"%B1.1.1",s=arguments.length>2?arguments[2]:void 0,i=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0,a=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0;if(this.variable=t,e.startsWith("%")&&void 0===s&&void 0===i&&void 0===r){const{fmt:t,lPad:s,rPad:n,len:i}=e.match(/^%(?<fmt>[BDXS])(?<lPad>\d+)\.(?<len>\d+)\.(?<rPad>\d+)$/)?.groups;this.fmt=t,this.lPad=parseInt(s),this.rPad=parseInt(n),this.len=parseInt(i),this.builtin=!1,this.index=-1}else(0,n.hu)(["B","X","D","S"].includes(e[0])),this.fmt=e[0],this.len=s??3,this.lPad=i??1,this.rPad=r??1,this.builtin=a??!1,this.index=o??-1}header(t){let e=`${this.variable}`;if(this.builtin){e=`${e}[${this.index>=0?this.index:""}]`}return e.length>this.len+this.lPad+this.rPad?e.substring(0,this.len+this.lPad+this.rPad):this.padCenter(e)}print(t){const e=t.getVar(this.variable,this.index);if("S"===this.fmt)return this.padLeft(e);const s=(0,{B:o.Ly,D:o.E_,X:o.$v}[this.fmt])(e);return"D"===this.fmt?this.padRight(s):this.padCenter(s.slice(s.length-this.len))}padCenter(t){const e=this.lPad+this.len+this.rPad,s=Math.floor((e-t.length)/2),n=e-s-t.length,i=s+t.length,r=i+n;return t=(t=t.padStart(i)).padEnd(r)}padLeft(t){t=t.substring(0,this.len);const e=this.rPad+this.len,s=this.lPad+e;return t=(t=t.padEnd(e)).padStart(s)}padRight(t){t=t.substring(0,this.len);const e=this.lPad+this.len,s=this.rPad+e;return t=(t=t.padStart(e)).padEnd(s)}}var u=s(5838),h=s(134);class l{instructions=[];_outputList=[];_log="";fs=new i.Wd;setFileSystem(t){return this.fs=t,this}echo(t){}clearEcho(){}async load(t){}async compareTo(t){}outputFile(t){}outputList(t){this._outputList=t}addInstruction(t){this.instructions.push(t)}reset(){return this._steps=function*(t){for(const e of t.instructions)yield*e.steps(t)}(this),this._step=this._steps.next(),this._step,this._log="",this}_steps;_step;get steps(){return void 0===this._steps&&(this.reset(),this._steps=(0,n.kP)(this._steps,"Reset did not initialize steps"),this._step=(0,n.kP)(this._step,"Reset did not find first step")),this._steps}get currentStep(){return this._step?.value}get done(){return this._step?.done??!1}step(){return!!this._step.done||(this._step.value.do(this),this._step=this.steps.next(),!1)}async run(){for(this.reset();!await this.step(););}breakpoints=new Map;addBreakpoint(t,e){this.breakpoints.set(t,e)}clearBreakpoints(){this.breakpoints.clear()}output(){const t=this._outputList.map((t=>t.print(this)));this._log+=`|${t.join("|")}|\n`}header(){const t=this._outputList.map((t=>t.header(this)));this._log+=`|${t.join("|")}|\n`}log(){return this._log}}function d(t){return void 0!==t.ops}function p(t){return void 0!==t.condition}function m(t){const e=new k;e.span=t.span;for(const s of t.ops){const t=g(s);void 0!==t&&e.addInstruction(t)}return e}function g(t){const{op:e}=t;switch(e){case"tick":return new E;case"tock":return new C;case"eval":return new R;case"output":return new A;case"set":return new v(t.id,t.value,t.index);case"output-list":return new y(t.spec);case"echo":return new D(t.message);case"clear-echo":return new P;case"loadRom":return new O(t.file);case"load":case"output-file":case"compare-to":return;default:(0,n.qV)(e,`Unknown tst operation ${e}`)}}function f(t,e){for(const s of e.lines)if(d(s))t.addInstruction(m(s));else{const e=p(s)?new M(new S(s.condition.left,s.condition.right,s.condition.op)):new x(s.count);e.span=s.span,t.addInstruction(e);for(const t of s.statements)e.addInstruction(m(t))}return t.reset(),t}class b extends l{chip=new r.P9;get chipId(){return this.chip.id}clock=a.S.get();static from(t){return f(new b,t)}with(t){return this.chip=t,this}hasVar(t){return"time"===t||(t=`${t}`,this.chip.hasIn(t)||this.chip.hasOut(t))}getVar(t,e){if("time"===(t=`${t}`))return this.clock.toString();const s=this.chip.get(t,e);return s?s instanceof r.Gc?s.busVoltage:s.voltage():0}setVar(t,e,s){const n=this.chip.get(t,s);n instanceof r.Gc?n.busVoltage=e:n?.pull(0===e?r.yE:r.lj)}eval(){this.chip.eval()}tick(){this.chip.eval(),this.clock.tick()}tock(){this.chip.eval(),this.clock.tock()}async load(t){await this.chip.load(this.fs,t)}async run(){this.clock.reset(),await super.run()}}class w extends l{cpu;ticks=0;static from(t){return f(new w,t)}constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new u.eD(new Int16Array);super(),this.cpu=new h.Z9({ROM:t}),this.reset()}reset(){return this.cpu.reset(),this.ticks=0,this}hasVar(t){return"number"!==typeof t&&!("A"!==t&&"D"!==t&&"PC"!==t&&"time"!==t&&!t.startsWith("RAM"))}getVar(t){switch(t){case"A":return this.cpu.A;case"D":return this.cpu.D;case"PC":return this.cpu.PC;case"time":return this.ticks}if("number"===typeof t)return 0;if(t.startsWith("RAM")){const e=Number(t.substring(4,t.length-1));return this.cpu.RAM.get(e)}return 0}setVar(t,e,s){switch(t){case"A":this.cpu.setA(e);break;case"D":this.cpu.setD(e);break;case"PC":this.cpu.setPC(e);break;case"RAM":this.cpu.RAM.set(s??0,e)}}ticktock(){this.ticks+=1,this.cpu.tick()}async load(t){await this.cpu.ROM.load(this.fs,t)}}class v{variable;value;index;constructor(t,e,s){this.variable=t,this.value=e,this.index=s}do(t){t.setVar(this.variable,this.value,this.index)}*steps(){yield this}}class A{do(t){t.output()}*steps(){yield this}}class y{outputs=[];constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];for(const e of t)this.addOutput(e)}addOutput(t){this.outputs.push(new c(t.id,t.style,t.width,t.lpad,t.rpad,t.builtin,t.address))}do(t){t.outputList(this.outputs),t.header()}*steps(){yield this}}class k{instructions=[];span;addInstruction(t){this.instructions.push(t)}do(t){for(const e of this.instructions)e.do(t)}*steps(t){yield this}}class x extends k{repeat;constructor(t){super(),this.repeat=t}do(){}*innerSteps(t){for(const e of this.instructions)yield*e.steps(t)}*steps(t){if(-1===this.repeat)for(yield this;;)yield*this.innerSteps(t);else for(let e=0;e<this.repeat;e++)yield this,yield*this.innerSteps(t)}}class S{x;y;op;constructor(t,e,s){this.x=t,this.y=e,this.op=s}check(t){const e=t.hasVar(this.x)?t.getVar(this.x):this.x,s=t.hasVar(this.y)?t.getVar(this.y):this.y;if("string"===typeof e||"string"===typeof s)switch(this.op){case"=":return`${e}`===`${s}`;case"<>":return`${e}`!==`${s}`}else switch(this.op){case"<":return e<s;case"<=":return e<=s;case">":return e>s;case">=":return e>=s;case"=":return e===s;case"<>":return e!==s}return!1}}class M extends k{condition;constructor(t){super(),this.condition=t}*steps(t){for(;this.condition.check(t);){yield this;for(const e of this.instructions)yield*e.steps(t)}}}class D{content;constructor(t){this.content=t}do(t){t.echo(this.content)}*steps(){yield this}}class P{do(t){t.clearEcho()}*steps(){yield this}}class O{file;constructor(t){this.file=t}async do(t){t.fs.pushd("/test"),await t.load(this.file),t.fs.popd()}*steps(){yield this}}class R{_chipTestInstruction_=!0;do(t){t.eval()}*steps(){yield this}}class E{_chipTestInstruction_=!0;do(t){t.tick()}*steps(){yield this}}class C{_chipTestInstruction_=!0;do(t){t.tock()}*steps(){yield this}}},7693:(t,e,s)=>{s.d(e,{a:()=>i,op:()=>r,p:()=>a});var n=s(6693);function i(t){return 32768&t?function(t){t&=65535;const e=(4096&t)>>12,s=(4032&t)>>6,i=(56&t)>>3,r=7&t;if(void 0===n.PH.op[s])return"#ERR";let a=n.PH.op[s];e&&(a=a.replace(/A/g,"M"));const o=n.Uc.op[i],c=n.lK.op[r];let u=a;o&&(u=`${o}=${u}`);c&&(u=`${u};${c}`);return u}(t):function(t){return"@"+(32767&t).toString(10)}(t)}function r(t){return"@"===t[0]?function(t){return parseInt(t.substring(1),10)}(t):function(t){const e=t.match(/(?:(?<assign>[AMD]{1,3})=)?(?<operation>[-!01ADM&|]{1,3})(?:;(?<jump>JGT|JLT|JGE|JLE|JEQ|JMP))?/),{assign:s,operation:i,jump:r}=e?.groups??{},o=i.includes("M")||s.includes("M"),c=n.Uc.asm[s??""],u=n.lK.asm[r??""],h=n.PH.asm[i??""];return a(o,h,c,u)}(t)}function a(t,e){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const i=57344,r=t?4096:0,a=e<<6,o=(s??0)<<3,c=n??0;return i+r+a+o+c}},326:(t,e,s)=>{s.d(e,{$v:()=>l,Af:()=>o,C$:()=>u,C2:()=>g,E_:()=>p,Ly:()=>d,nN:()=>m,o5:()=>c,t1:()=>h});const n=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F"];function i(t){return n[t]??"X"}function r(t){switch(t){case 0:return"0000";case 1:return"0001";case 2:return"0010";case 3:return"0011";case 4:return"0100";case 5:return"0101";case 6:return"0110";case 7:return"0111";case 8:return"1000";case 9:return"1001";case 10:return"1010";case 11:return"1011";case 12:return"1100";case 13:return"1101";case 14:return"1110";case 15:return"1111";default:return"erro"}}function a(t,e){return 65535&parseInt(t.replace(/[^\d a-f A-F +-.]/g,""),e)}function o(t){return a(t,16)}function c(t){return a(t,10)}function u(t){return a(t.replaceAll(" ",""),2)}function h(t){return t.toUpperCase().includes("X")?o(t):c(t)}function l(t){return`0x${i((61440&t)>>12)}${i((3840&t)>>8)}${i((240&t)>>4)}${i(15&t)}`}function d(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:16;const s=r((61440&t)>>12),n=r((3840&t)>>8),i=r((240&t)>>4),a=r(15&t);return`${s}${n}${i}${a}`.substring(16-e)}function p(t){return 32768===(t&=65535)?"-32768":32768&t?`-${t=1+~t&32767}`:`${t}`}function m(t){return`${t&=65535}`}function g(t,e){let s=~((t&=65535)&(e&=65535));return s&=65535,s}}}]);
//# sourceMappingURL=387.49fbd0c3.chunk.js.map